{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get.js","../node_modules/safe-event-emitter/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/eth-json-rpc-errors/index.js","../node_modules/eth-json-rpc-errors/src/classes.js","../node_modules/eth-json-rpc-errors/src/utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct.js","../node_modules/fast-safe-stringify/index.js","../node_modules/eth-json-rpc-errors/src/errors.js"],"names":["superPropBase","_get","target","property","receiver","Reflect","get","module","exports","base","desc","Object","getOwnPropertyDescriptor","call","value","util","require","EventEmitter","R","ReflectApply","apply","args","Function","prototype","SafeEventEmitter","this","safeApply","handler","context","err","setTimeout","arrayClone","arr","n","copy","Array","i","inherits","emit","type","arguments","length","push","doError","events","_events","undefined","error","er","Error","message","len","listeners","getPrototypeOf","object","hasOwnProperty","EthereumRpcError","EthereumProviderError","serializeError","getMessageFromCode","ethErrors","ERROR_CODES","safeStringify","code","data","Number","isInteger","serialized","stack","serialize","stringifyReplacer","isValidEthProviderCode","_","errorValues","FALLBACK_ERROR_CODE","rpc","internal","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","toString","isJsonRpcServerError","isValidCode","assignOriginalError","isArray","assign","fallbackError","originalError","JSON_RPC_SERVER_ERROR_MESSAGE","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","TypeError","has","set","Wrapper","constructor","create","enumerable","writable","configurable","fn","indexOf","isNativeReflectConstruct","sham","Proxy","Date","e","_construct","Parent","a","instance","bind","stringify","default","stable","deterministicStringify","stableStringify","replacerStack","obj","replacer","spacer","res","decirc","val","k","parent","propertyDescriptor","defineProperty","keys","key","pop","JSON","replaceGetterValues","part","compareFunction","b","tmp","deterministicDecirc","toJSON","sort","v","splice","getEthJsonRpcError","opts","validateOpts","getEthProviderError","parse","invalidRequest","invalidParams","methodNotFound","server","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","provider","userRejectedRequest","unauthorized","unsupportedMethod","custom"],"mappings":"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","file":"static/js/0.c158a6e7.chunk.js","sourcesContent":["var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","const util = require('util')\nconst EventEmitter = require('events/')\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n}\n\nmodule.exports = SafeEventEmitter\n\n\nfunction SafeEventEmitter() {\n  EventEmitter.call(this)\n}\n\nutil.inherits(SafeEventEmitter, EventEmitter)\n\nSafeEventEmitter.prototype.emit = function (type) {\n  // copied from https://github.com/Gozala/events/blob/master/events.js\n  // modified lines are commented with \"edited:\"\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    // edited: using safeApply\n    safeApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      // edited: using safeApply\n      safeApply(listeners[i], this, args);\n  }\n\n  return true;\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    ReflectApply(handler, context, args)\n  } catch (err) {\n    // throw error after timeout so as not to interupt the stack\n    setTimeout(() => {\n      throw err\n    })\n  }\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n"],"sourceRoot":""}