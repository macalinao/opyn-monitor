{"version":3,"sources":["utils/blockNative.ts","utils/infura.js","utils/storage.ts","constants/contracts.js","utils/web3.js","constants/bytecode/optionContract.js","components/NavBar/ConnectButton.tsx","components/NavBar/SwitchTheme.tsx","components/NavBar/index.tsx","components/HomePage/index.tsx","constants/tokens.js","constants/options/calls.ts","constants/options/puts.ts","constants/options/insurances.ts","constants/options/index.ts","components/common/AddressBlock.tsx","components/common/BalanceBlock.tsx","components/common/RatioTag.tsx","components/common/SectionTitle.tsx","components/common/MaxButton.tsx","components/common/HelpText.tsx","components/common/PriceSection.tsx","components/common/Warning.tsx","components/common/Comment.tsx","components/common/VaultButton.tsx","components/common/Wrapper.tsx","components/common/CheckBox.tsx","utils/tracker.ts","components/AllContracts/index.tsx","components/Trade/index.tsx","components/OptionTrading/styled.js","utils/number.ts","utils/0x.ts","components/OptionTrading/OptionBoard.tsx","components/OptionTrading/MyOrders.tsx","components/OptionTrading/OrderBook.tsx","components/OptionTrading/TabBoard.tsx","components/OptionTrading/WrapETHSidePanel.tsx","components/OptionTrading/BuyAndSell.tsx","components/OptionTrading/index.tsx","components/MyVaults/NoWallet.tsx","utils/graph.ts","utils/calculation.ts","components/MyVaults/OpenVaultModal.tsx","components/MyVaults/index.tsx","components/OptionPage/ExerciseModal.tsx","components/OptionPage/VaultModal.tsx","components/OptionPage/VaultsList.tsx","components/OptionPage/OptionInfoBox.tsx","components/OptionPage/index.tsx","components/ManageVault/HeaderDashboard.tsx","components/ManageVault/CollateralManagement.tsx","components/ManageVault/IssuedTokenManagement.tsx","components/ManageVault/Liquidation.tsx","components/ManageVault/Exercise.tsx","components/ManageVault/UnderlyingManagement.tsx","components/ManageVault/index.tsx","components/UniswapTrade/Header.tsx","components/UniswapTrade/UniswapBuySell.tsx","components/UniswapTrade/AddLiquidity.tsx","components/UniswapTrade/RemoveLiquidity.tsx","components/UniswapTrade/index.tsx","components/CreateOption/FieldCard.tsx","components/CreateOption/Complete.tsx","components/CreateOption/ConfirmETHOptionBox.tsx","components/CreateOption/GroupButton.tsx","components/CreateOption/CreateETHOption.tsx","components/CreateOption/ConfirmCustomOption.tsx","components/CreateOption/CreateCustomOption.tsx","components/CreateOption/index.tsx","components/Footer/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["notify","Notify","dappId","process","networkId","optionContractABI","require","optionExchangeABI","oracleABI","KEYS","filter","k","INFURA_KEY","Math","floor","random","length","web3","Web3","ens","ENS","ETH_ADDR","resolveENS","ensName","a","resolver","addr","address","toLowerCase","getTokenBalance","erc20Token","user","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getTotalSupply","erc20","token","totalSupply","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem","checkAddressAndAddToStorage","watch_addrs","usedAddresses","JSON","parse","includes","push","stringify","ETH_ADDRESS","WETH","KETH","ZeroX_ERC20Proxy","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","ZX_ExchagneABI","wrapETHABI","UINT256_MAX","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","deployOTokenContract","_collateral","_collExp","_underlying","_underlyingExp","_oTokenExchangeExp","_strikePrice","_strikeExp","_strike","_expiry","_windowSize","account","deploy","data","arguments","send","from","on","hash","options","setDetail","oTokenAdr","_symbol","_name","setDetails","liquidate","oTokenAddr","owner","liquidateAmt","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","toWei","toString","addERC20Collateral","collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","removeUnderlying","tokenAddr","amt","exercise","underlying","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","openVaultAddCollateralAndMint","collateralAsset","tokenAmount","createETHCollateralOption","createERC20CollateralOption","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","uniswapExchange","deadline","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","wrapETH","amountInWei","weth","deposit","unwrapETH","withdraw","signOrder","order","MetamaskSubprovider","currentProvider","signatureUtils","ecSignOrderAsync","fillOrders","orders","amts","signatures","gasPrice","batchFillOrders","cancelOrders","batchCancelOrders","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","SwitchMode","updateTheme","LinkButton","title","isSelected","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","secondary","MainButton","iconUrl","tag","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","USDC","decimals","symbol","OPYN_ETH","cDAI","cUSDC","eth_calls","name","tokens","strike","strikePrice","strikePriceInUSD","minRatio","expiry","eth_puts","insurances","eth_options","concat","allOptions","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","amtBN","toNumber","WarningText","text","useTheme","warning","Comment","ManageVaultButton","OpenVaultButton","goToMangePage","openAndGoToVault","styled","div","MyCheckBox","onCheck","CheckBoxWrapper","onChange","paddingBottom","props","surfaceContentSecondary","ReactGA","initialize","AllContracts","tracker","pageview","storedOptionTab","storedShowExpired","parseInt","tabSelected","setTabSelected","showExpired","setShowExpired","goToToken","CheckBox","items","selected","choice","fields","entries","option","entriesPerPage","renderEntry","header","toDateString","GoToUniswapFunction","event","category","action","window","open","TradeLanding","goToTrade","BidText","AskText","FlexWrapper","BuyAndSellBlock","border","surface","Header","contentSecondary","BuySellTopPart","BuySellTopPartText","BuySellLowerPart","Tab","active","content","Label","BottomText","Wrapper","Flex","TabWrapper","BottomTextWrapper","GroupButtonWrapper","GroupButton","index","disabled","isActive","surfaceHighlight","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenDecimals","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","isAddress","Promise","endpoint","getOrderBook","quote","baseAsset","assetDataUtils","encodeERC20AssetData","quoteAsset","request","getBasePairAskAndBids","map","asks","bids","totalBidAmt","totalAskAmt","bestAskPrice","bestBidPrice","validAsks","records","record","isValid","reduce","prev","cur","plus","getRemainingMakerAndTakerAmount","remainingMakerAssetAmount","askTokenAmt","makerAssetAmount","askQuoteAmt","takerAssetAmount","bestAsk","validBids","metaData","remainingFillableTakerAssetAmount","bidQuoteAmt","bidTokenAmt","bestBid","bestAskAndBids","path","fetch","res","json","entry","notExpired","expirationTimeSeconds","notDust","getOrderFillRatio","createOrder","maker","makerAsset","takerAsset","salt","senderAddress","makerAddress","takerAddress","makerFee","takerFee","makerAssetData","takerAssetData","exchangeAddress","feeRecipientAddress","makerFeeAssetData","chainId","takerFeeAssetData","broadcastOrders","url","method","headers","body","status","validationErrors","reason","getBidPrice","bid","makerAssetDecimals","takerAssetDecimals","getAskPrice","ask","minus","remainingTakerAssetAmount","makerAssetAmountBN","takerAssetAmountBN","multipliedBy","getGasPrice","getFillAmountsOfOrders","selectedOrders","targetTakerAstAmount","targetMakerAstAmount","sumTakerAmount","sumMakerAmount","takerAmountArray","makerAmount","takerAmount","undefined","takerAmountNeeded","makerAmountNeeded","optionsByDate","puts","calls","result","distinctExpirys","Set","optionsExpiresThisDay","o","strikePrices","pairs","put","find","sort","b","expiryText","groupByDate","OptionBoard","setBaseAsset","setTradeType","setSelectedOrders","isLoading","setIsLoading","selectedExpiryIdx","setExpiryIdx","entriesToDisplay","setEntriesToDisplay","isCancelled","updateBoardStats","callsOfExpiry","pair","putsOfExpiry","all","callData","putData","displayEntries","forEach","callDetail","c","putDetail","p","id","setInterval","clearInterval","item","idx","align","callAsk","callBid","callBidAmt","callAskAmt","callOnclick","callBidOnclick","callAskOnclick","putAsk","putBid","putBidAmt","putAskAmt","putOnclick","putBidOnclick","putAskOnclick","Cell","type","textAlign","MyOrders","myOrdersPage","setMyOrdersPage","userAsks","userBids","statusEmpty","page","onPageChange","onSelectEntries","orderHash","slice","zeroXUtil","end","OrderBook","tradeType","askPage","setAskPage","bidPage","setBidPage","askSelectedIndexs","setAskSelectedIndexes","bidSelectedIndexs","setBidSelectedIndexes","selectedIdxs","i","indexes","selection","renderSelectionCount","x","format","showIcon","Orders","selectedTab","setSelectedTab","WrapETHModal","wethBalance","opened","setOpen","helperText","setHelperText","wrapAmount","setWrapAmount","unWrapAmount","setUnwrapAmount","ethBalance","setETHBalance","updateETHBalance","quoteBalance","idETHBalance","onClose","wide","amount","target","BuyAndSell","baseAssetBalance","quoteAssetBalance","toast","useToast","quoteAssetAmount","setQuoteAssetAmount","fillingtakerAmounts","setFillingTakerAmounts","baseAmountToFill","setBaseAmountToFill","baseAmountToCreate","setBaseAmountToCreate","rate","setRate","fastGasPrice","setFastGasPrice","totalFillableMakerAmount","totalFillableTakerAmount","selectedOrderFillables","setSelectedOrdersFillable","isFillingAndCreating","setIsFillingAndCreating","hasSelectedOrders","feeInETH","panelOpend","setPanelOpended","wethPanelHelperText","setPanelHelperText","activeButton","setActiveButton","expirySeconds","isCanceled","fetchGasPrice","fast","selectedFillables","next","fillableTakerAmounts","baseMaxFillingAmount","quoteMaxFillingAmount","aggregateRate","checkAndAllowQuoteAsset","quoteAssetAmountInBase","checkQuoteAssetBalance","checkBaseAssetBalance","baseAssetAmountInBase","checkAndAllowBaseAsset","baseAssetAmountBase","clickCreateOrder","quoteAssetInBaseUnit","baseAssetInBaseUnit","signedOrder","clickFillOrders","takerAmountBase","signature","clickFillAndCreate","toFormat","hint","Warning","e","amountBN","totalOtokenInSelectedOrders","gte","console","log","quoteAmountTotal","baseAmountTotal","fillingAmounts","quoteAmountTk","quoteAmount","onChangeBaseAmount","adornmentPosition","adornment","newrate","rateBN","onChangeRate","LeftPart","RightPart","WholeScreen","OptionTrading","setAsks","setBids","setBaseAssetBalance","setQuoteAssetBalance","updateOrderBook","updateBaseBalance","baseBalance","idOrderBook","idBaseBalance","updateQuoteBalance","idQuoteAssetBalance","TabBoard","PleaseLogin","setWatchAddress","InAddress","setAddress","placeholder","reverse","scale","radius","fontFamily","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","getVault","vault","getLiquidationHistory","liquidateActions","getExerciseHistory","exerciseActions","getRemoveUnderlyingHistory","removeUnderlyingActions","calculateStrikeValueInCollateral","collateralDecimals","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","OpenVaultModal","setOpened","setCollateralAmt","mintTokenAmt","setMintTokenAmt","setStrikeValueInCollateral","setRatio","useMemo","strikeValueInColltrl","newRatio","mint","visible","amtBn","onCollateralChange","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","watchAddress","isWatchMode","hasAddressConnected","showEmpty","setShowEmpty","displayVaults","userVaults","openedVaults","notOpenedTokens","optionsContract","oTokenName","NoWallet","ExerciseModal","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","accumulator","current","onChangeExerciseAmt","exeAmtBN","underlyingRawAmt","heading","count","vaultowners","VaultModal","collateralIsETH","addValue","setAddValue","setLiquidateAmt","maxLiquidatable","getData","catch","error","justifyContent","VaultOwnerList","vaultUsesCollateral","vaultsWithDetail","setVaultDetail","setPage","updateInfo","vaultDetail","OptionOverview","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","OptionPage","useParams","setVaults","allVaults","OptionInfoBox","VaultsList","HeaderDashboard","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","collateralSymbol","setIssueAmt","setBurnAmt","newAmt","intputAmt","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actions","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","RemoveUnderlying","underlyingDecimals","underlyingAmount","ManageVault","setVault","setStrikeValue","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","vaultToManage","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","Liquidation","Exercise","UnderlyingManagement","TradePageHeader","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","UniswapPool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","updatePoolInfo","exTokenBalance","exchagneETHBalance","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","UniswapBuySell","FiledCard","child","ComplateCreate","setDetailComplete","alignContent","ConfirmETHOption","putOrCall","americanOrEuropean","expiration","strikePriceIsValid","setProgress","isCreating","setIsCreating","isSettingDetail","setIsSettingDetail","allComplete","setAllComplete","FormatDate","newTokenAddr","setNewTokenAddr","onClickCreate","strikePriceNum","ProcessingBox","ConfirmDiv","Complete","date","dd","mm","getMonth","yy","substr","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","CreateOETH","setPutOrCall","setAmOrEuro","strikePriceForoETH","setStrikePriceForOETH","mod","eq","setExpiration","step","setStep","progress","requestToChangeActive","activeItemIndex","numberOfCards","rightChevron","margin","leftChevron","outsideChevron","chevronWidth","FieldCard","dateTime","ConfirmCustomOption","isAllComplete","CreateCustomOption","today","tomorrow","localOffset","tokensAvailable","setName","setSymbol","setDecimals","collateralIdx","setCollateralIdx","underlyingIdx","setUnderlyingIdx","strikeIdx","setStrikeIdx","setStrikePrice","endUTCs","endUTC","startDate","endDate","getTimezoneOffset","CreateOption","CreateETHOption","Footer","backgroundColor","position","left","bottom","external","href","App","storedTheme","setTheme","assetsUrl","newTheme","Trade","Boolean","hostname","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.45698db2.chunk.js","sourcesContent":["import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nimport ENS from 'ethereum-ens';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst KEYS = [process.env.REACT_APP_INFURA_KEY, process.env.REACT_APP_INFURA_KEY2].filter((k) => k);\nconst INFURA_KEY = KEYS[Math.floor(Math.random() * KEYS.length)];\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\nconst ens = new ENS(web3);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ENS\nexport const resolveENS = async (ensName) => {\n  const address = await ens.resolver(ensName).addr();\n  return address.toLowerCase();\n};\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  if (erc20Token === ETH_ADDR) return 18;\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\nexport const getTotalSupply = async (erc20) => {\n  const token = new web3.eth.Contract(optionContractABI, erc20);\n  const totalSupply = await token.methods.totalSupply().call();\n  return totalSupply;\n};\n\n// Option Contract\n\n\n/**\n * Get owner of the oToken\n * @param {string} oToken\n * @return {Promise<string>}\n */\nexport const getOwner = async (oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const owner = await oTokenContract.methods\n    .owner()\n    .call();\n  return owner;\n};\n\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n\nexport function checkAddressAndAddToStorage(address:string):void {\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n  if (!usedAddresses.includes(address.toLowerCase()) && !usedAddresses.includes(address)) {\n    usedAddresses.push(address);\n    storePreference('watch_addresses', JSON.stringify(usedAddresses));\n  }\n}\n","/* eslint-disable camelcase */\n\nexport const OptionFactory = '0xcc5d905b9c2c8c9329eb4e25dc086369d6c7777c';\n\nexport const OptionExchange = '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71';\nexport const Oracle = '0x7054e08461e3eCb7718B63540adDB3c3A1746415';\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n\n// 0x contracts\nexport const ZeroX_Exchange = '0x61935cbdd02287b511119ddb11aeb42f1593b7ef';\nexport const ZeroX_ERC20Proxy = '0x95e6f48254609a6ee006f7d493c8e5fb97094cef';\nexport const ZeroX_ERC721Proxy = '0xefc70a1b18c432bdc64b596838b4d138f6bc6cad';\nexport const ZeroX_Forwarder = '0x4aa817c6f383c8e8ae77301d18ce48efb16fd2be';\nexport const ZeroX_ZRXToken = '0xe41d2489571d322189246dafa5ebde1f4699f498';\n","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { MetamaskSubprovider } from '@0x/subproviders';\nimport { signatureUtils } from '@0x/order-utils';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative.ts';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { getPreference } from './storage.ts';\nimport {\n  ETH_ADDRESS,\n  Kollateral_Liquidator,\n  Kollateral_Invoker,\n  KETH,\n  ZeroX_Exchange,\n  WETH,\n  Oracle,\n  OptionExchange,\n} from '../constants/contracts';\n\nimport oTokenBytecode from '../constants/bytecode/optionContract';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\nconst ZX_ExchagneABI = require('../constants/abi/ZeroX_Exchange.json');\nconst wrapETHABI = require('../constants/abi/WETH.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: getPreference('theme', 'light') === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Monitor',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n/**\n * Deploy a new oToken contract\n * @param {string} _collateral collateral address\n * @param {number} _collExp - collateral decimals\n * @param {string} _underlying underlying address\n * @param {number} _underlyingExp - underlying decimals\n * @param {number} _oTokenExchangeExp decimals\n * @param {number} _strikePrice strikePrice\n * @param {number} _strikeExp striekPrice exp\n * @param {string} _strike strike asset address\n * @param {number} _expiry\n * @param {number} _windowSize\n */\nexport const deployOTokenContract = async (\n  _collateral,\n  _collExp,\n  _underlying,\n  _underlyingExp,\n  _oTokenExchangeExp,\n  _strikePrice,\n  _strikeExp,\n  _strike,\n  _expiry,\n  _windowSize,\n) => {\n  const account = await checkConnectedAndGetAddress();\n  const contract = new web3.eth.Contract(oTokenABI);\n  const oToken = await contract.deploy({\n    data: oTokenBytecode,\n    // eslint-disable-next-line max-len\n    arguments: [_collateral, _collExp, _underlying, _underlyingExp, _oTokenExchangeExp, _strikePrice, _strikeExp, _strike, _expiry,\n      OptionExchange, Oracle, _windowSize,\n    ],\n  })\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n\n  return oToken.options.address;\n};\n\n/**\n * Option Exchange\n */\n\n/**\n * Set token name ans symbol to newly created token\n * @param {*} oTokenAdr\n * @param {*} _symbol\n * @param {*} _name\n */\nexport const setDetail = async (oTokenAdr, _symbol, _name) => {\n  const account = await checkConnectedAndGetAddress();\n  // const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAdr);\n  await oToken.methods.setDetails(_symbol, _name)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string|BigNumber} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} token\n */\nexport const removeUnderlying = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .removeUnderlying()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVaultAddCollateralAndMint = async (\n  oTokenAddr,\n  collateralAsset,\n  collateralAmt,\n  tokenAmount,\n) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateralAsset === ETH_ADDRESS) {\n    await oToken.methods\n      .createETHCollateralOption(tokenAmount, account)\n      .send({\n        from: account,\n        value: collateralAmt,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    // check allowance\n    const allowance = await getAllowance(collateralAsset, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(collateralAmt))) {\n      await approve(collateralAsset, oTokenAddr, UINT256_MAX);\n    }\n    await oToken.methods\n      .createERC20CollateralOption(tokenAmount, collateralAmt, account)\n      .send({\n        from: account,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/*\n * 0x Protocols\n */\nexport const wrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .deposit()\n    .send({\n      from: account,\n      value: amountInWei,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const unwrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .withdraw(amountInWei)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Sign Order\n * @param {*} order\n */\nexport const signOrder = async (order) => {\n  const account = await checkConnectedAndGetAddress();\n  const provider = new MetamaskSubprovider(web3.currentProvider);\n  return signatureUtils.ecSignOrderAsync(provider, order, account);\n};\n\nexport const fillOrders = async (orders, amts, signatures, value, gasPrice) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchFillOrders(orders, amts, signatures)\n    .send({\n      from: account,\n      value, // Protocol fee: gas to be gas price * 150\n      gasPrice: web3.utils.toWei(gasPrice, 'gwei'), // gwei to wei\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const cancelOrders = async (orders) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchCancelOrders(orders)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","// eslint-disable-next-line max-len\nconst bytes = '600a608081905260021960a081905260078290556008805463ffffffff1990811663fffffffd908117909255600060c081905260e08490526009558354811682179093556101f461010081905261012092909252600b91909155600c805483169091179055610180604052601061014081905260001961016052600d55600e805463ffffffff9083161790556016805490911663ffffffee1763ffffffff60201b191667ffffffee00000000179055348015620000bb57600080fd5b5060405162004873380380620048738339818101604052610180811015620000e257600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b0151610160909b0151999a9899979896979596949593949293919290918b8b8b8b8b8b8b8b8b8b8b8b620001546001600160e01b03620005ec16565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38342106200020b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e7472616374604482015290519081900360640190fd5b8381111562000266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018062004777603c913960400191505060405180910390fd5b6200027a8b6001600160e01b03620005f016565b620002d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180620047b3602d913960400191505060405180910390fd5b620002e5896001600160e01b03620005f016565b6200033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018062004846602d913960400191505060405180910390fd5b62000350866001600160e01b03620005f016565b620003a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062004817602f913960400191505060405180910390fd5b620003bb886001600160e01b03620005f016565b62000412576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180620047e06037913960400191505060405180910390fd5b8b601660086101000a8154816001600160a01b0302191690836001600160a01b031602179055508a601660006101000a81548163ffffffff021916908360030b63ffffffff16021790555089601760006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088601660046101000a81548163ffffffff021916908360030b63ffffffff1602179055506040518060400160405280600181526020018960030b81525060116000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505060405180604001604052808881526020018760030b815250600f6000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505084601860006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360158190555081601960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082600460006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060138190555050505050505050505050505050505050505050505050505062000612565b3390565b6000601e8260030b131580156200060c5750601d198260030b12155b92915050565b61415580620006226000396000f3fe6080604052600436106103975760003560e01c806390e64d13116101dc578063c52987cf11610102578063e184c9be116100a0578063ee1eab4f1161006f578063ee1eab4f14610ed3578063f2fde38b14610f0f578063f70a250814610f42578063faa2041f14610f7557610397565b8063e184c9be14610e35578063ea8c4bcf14610e4a578063eaa376b514610e7d578063ed1f41c314610ea757610397565b8063cfbea789116100dc578063cfbea78914610d86578063d8dfeb4514610db2578063dd62ed3e14610dc7578063dec44c0b14610e0257610397565b8063c52987cf14610cff578063c56749ce14610d14578063cdb4b5c214610d5357610397565b8063b2c2b13f1161017a578063b7b090ee11610149578063b7b090ee14610b4f578063b96661ba14610c85578063ba1be55414610cb1578063bcbaf48714610cc657610397565b8063b2c2b13f14610ae2578063b6e61c0814610b10578063b736554014610b25578063b76fdb6c14610b3a57610397565b80639ed3edf0116101b65780639ed3edf014610a46578063a457c2d714610a5b578063a9059cbb14610a94578063ad8f500814610acd57610397565b806390e64d13146109f657806395d89b4114610a0b5780639ce0725114610a2057610397565b806339509351116102c15780636fd865f91161025f5780638a5e8cc71161022e5780638a5e8cc7146109a25780638c765e94146109b75780638da5cb5b146109cc5780638f32d59b146109e157610397565b80636fd865f91461091b57806370a0823114610945578063715018a61461097857806386f547121461098d57610397565b806358b36dac1161029b57806358b36dac146107f55780635ca7c8a61461089d578063686c1e21146108dc5780636f307dc31461090657610397565b8063395093511461074c5780633bd33f621461078557806352f89fe3146107b657610397565b806318160ddd116103395780633226052d116103085780633226052d146106845780633237c158146106c3578063352ade55146106ed5780633667429f1461072057610397565b806318160ddd146105c65780631a0e21bd146105db57806323b872dd14610616578063313ce5671461065957610397565b8063095ea7b311610375578063095ea7b3146104d65780630d453efb146105235780630d6cd8aa146105565780630eb9af381461056b57610397565b806301b4a3c11461039c578063060ab2ea146103e757806306fdde031461044c575b600080fd5b3480156103a857600080fd5b506103d5600480360360408110156103bf57600080fd5b506001600160a01b038135169060200135610f8a565b60408051918252519081900360200190f35b3480156103f357600080fd5b506103fc61113e565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610438578181015183820152602001610420565b505050509050019250505060405180910390f35b34801561045857600080fd5b506104616111e5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561049b578181015183820152602001610483565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104e257600080fd5b5061050f600480360360408110156104f957600080fd5b506001600160a01b038135169060200135611273565b604080519115158252519081900360200190f35b34801561052f57600080fd5b5061050f6004803603602081101561054657600080fd5b50356001600160a01b0316611290565b34801561056257600080fd5b5061050f6112b5565b34801561057757600080fd5b5061059e6004803603602081101561058e57600080fd5b50356001600160a01b03166112e3565b6040805194855260208501939093528383019190915215156060830152519081900360800190f35b3480156105d257600080fd5b506103d5611317565b3480156105e757600080fd5b50610614600480360360408110156105fe57600080fd5b50803590602001356001600160a01b031661131d565b005b34801561062257600080fd5b5061050f6004803603606081101561063957600080fd5b506001600160a01b03813581169160208101359091169060400135611486565b34801561066557600080fd5b5061066e611513565b6040805160ff9092168252519081900360200190f35b34801561069057600080fd5b50610614600480360360608110156106a757600080fd5b50803590602081013590604001356001600160a01b031661151c565b3480156106cf57600080fd5b50610614600480360360208110156106e657600080fd5b5035611634565b3480156106f957600080fd5b50610702611824565b60408051928352600391820b90910b60208301528051918290030190f35b6106146004803603604081101561073657600080fd5b50803590602001356001600160a01b0316611830565b34801561075857600080fd5b5061050f6004803603604081101561076f57600080fd5b506001600160a01b038135169060200135611945565b34801561079157600080fd5b5061079a611999565b604080516001600160a01b039092168252519081900360200190f35b3480156107c257600080fd5b50610614600480360360608110156107d957600080fd5b50803590602081013590604001356001600160a01b03166119a8565b6106146004803603604081101561080b57600080fd5b81359190810190604081016020820135600160201b81111561082c57600080fd5b82018360208201111561083e57600080fd5b803590602001918460208302840111600160201b8311171561085f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506119c1945050505050565b3480156108a957600080fd5b50610614600480360360608110156108c057600080fd5b50803590602081013590604001356001600160a01b0316611ad9565b3480156108e857600080fd5b506103d5600480360360208110156108ff57600080fd5b5035611aee565b34801561091257600080fd5b5061079a611b1c565b34801561092757600080fd5b506103d56004803603602081101561093e57600080fd5b5035611b2b565b34801561095157600080fd5b506103d56004803603602081101561096857600080fd5b50356001600160a01b0316611b6f565b34801561098457600080fd5b50610614611b8a565b34801561099957600080fd5b5061050f611c1b565b3480156109ae57600080fd5b5061079a611d88565b3480156109c357600080fd5b50610702611d97565b3480156109d857600080fd5b5061079a611da3565b3480156109ed57600080fd5b5061050f611db2565b348015610a0257600080fd5b5061050f611dd6565b348015610a1757600080fd5b50610461611ddf565b6103d560048036036020811015610a3657600080fd5b50356001600160a01b0316611e3a565b348015610a5257600080fd5b50610702611f74565b348015610a6757600080fd5b5061050f60048036036040811015610a7e57600080fd5b506001600160a01b038135169060200135611f80565b348015610aa057600080fd5b5061050f60048036036040811015610ab757600080fd5b506001600160a01b038135169060200135611fee565b348015610ad957600080fd5b5061079a612002565b348015610aee57600080fd5b50610af7612011565b60408051600392830b90920b8252519081900360200190f35b348015610b1c57600080fd5b50610af7612021565b348015610b3157600080fd5b5061070261202a565b348015610b4657600080fd5b50610614612036565b348015610b5b57600080fd5b5061061460048036036040811015610b7257600080fd5b810190602081018135600160201b811115610b8c57600080fd5b820183602082011115610b9e57600080fd5b803590602001918460018302840111600160201b83111715610bbf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610c1157600080fd5b820183602082011115610c2357600080fd5b803590602001918460018302840111600160201b83111715610c4457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612142945050505050565b61061460048036036040811015610c9b57600080fd5b50803590602001356001600160a01b03166121d3565b348015610cbd57600080fd5b506107026121e7565b348015610cd257600080fd5b5061061460048036036040811015610ce957600080fd5b506001600160a01b0381351690602001356121f3565b348015610d0b57600080fd5b506107026124f7565b348015610d2057600080fd5b5061061460048036036060811015610d3757600080fd5b50803590602081013590604001356001600160a01b0316612503565b348015610d5f57600080fd5b5061050f60048036036020811015610d7657600080fd5b50356001600160a01b0316612517565b61061460048036036040811015610d9c57600080fd5b50803590602001356001600160a01b031661253c565b348015610dbe57600080fd5b5061079a612550565b348015610dd357600080fd5b506103d560048036036040811015610dea57600080fd5b506001600160a01b0381358116916020013516612566565b348015610e0e57600080fd5b506103d560048036036020811015610e2557600080fd5b50356001600160a01b0316612591565b348015610e4157600080fd5b506103d561265c565b348015610e5657600080fd5b5061061460048036036020811015610e6d57600080fd5b50356001600160a01b0316612662565b348015610e8957600080fd5b5061061460048036036020811015610ea057600080fd5b5035612704565b61061460048036036040811015610ebd57600080fd5b50803590602001356001600160a01b0316612806565b348015610edf57600080fd5b5061061460048036036080811015610ef657600080fd5b5080359060208101359060408101359060600135612819565b348015610f1b57600080fd5b5061061460048036036020811015610f3257600080fd5b50356001600160a01b03166129f1565b348015610f4e57600080fd5b5061050f60048036036020811015610f6557600080fd5b50356001600160a01b0316612a44565b348015610f8157600080fd5b50610614612a51565b6000610f94611dd6565b15610fd4576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b601654604080516323b872dd60e01b8152336004820152306024820152604481018590529051600160401b9092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505161109b5760405162461bcd60e51b8152600401808060200182810382526027815260200180613e626027913960400191505060405180910390fd5b6110a483611290565b6110e3576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b604080516001600160a01b038516815260208101849052338183015290517f2199418ea9428ed3ff7d460860e1edaf5831452fa4ea0f8d1a60d63c603487829181900360600190a16111358383612b49565b90505b92915050565b6060806000805b6006548110156111dc576111796006828154811061115f57fe5b6000918252602090912001546001600160a01b0316611290565b156111d4576006818154811061118b57fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106111b557fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101611145565b50909150505b90565b601a805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561126b5780601f106112405761010080835404028352916020019161126b565b820191906000526020600020905b81548152906001019060200180831161124e57829003601f168201915b505050505081565b6000611287611280612bc8565b8484612bcc565b50600192915050565b6001600160a01b03811660009081526005602052604090206003015460ff165b919050565b60006112ce601354601554612cb890919063ffffffff16565b42101580156112de575060155442105b905090565b6001600160a01b03166000908152600560205260409020805460018201546002830154600390930154919390929160ff1690565b60035490565b611325611dd6565b15611365576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61136e33611290565b6113ad576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600090815260056020526040812060018101549091906113d4908563ffffffff612cfa16565b90506113e4826000015482612d54565b611426576040805162461bcd60e51b815260206004820152600e60248201526d1d5b9cd85999481d1bc81b5a5b9d60921b604482015290519081900360640190fd5b600182018190556114378385612e59565b604080516001600160a01b038516815260208101869052338183015290517f5e5aaabf04e3760968ffb551bdf9708f4dbf95d53ad98539e91a56b125e88f089181900360600190a150505b5050565b6000611493848484612f4b565b6115098461149f612bc8565b61150485604051806060016040528060288152602001613fcd602891396001600160a01b038a166000908152600260205260408120906114dd612bc8565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6130a916565b612bcc565b5060019392505050565b601c5460ff1681565b6115263383610f8a565b50611531833061131d565b600480546040805163095ea7b360e01b81526001600160a01b0390921692820192909252602481018590529051309163095ea7b39160448083019260209291908290030181600087803b15801561158757600080fd5b505af115801561159b573d6000803e3d6000fd5b505050506040513d60208110156115b157600080fd5b50506004805460408051637dafae5960e01b81526001600160a01b03858116948201949094523060248201526000604482018190526064820188905291519390921692637dafae5992608480820193929182900301818387803b15801561161757600080fd5b505af115801561162b573d6000803e3d6000fd5b50505050505050565b61163c611dd6565b1561167c576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b600081116116d1576040805162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665203020636f6c6c61746572616c000000000000604482015290519081900360640190fd5b6116da33611290565b611719576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b3360008181526005602052604090209061173290613140565b8211156117705760405162461bcd60e51b8152600401808060200182810382526027815260200180613f796027913960400191505060405180910390fd5b8054600090611785908463ffffffff612cb816565b9050611795818360010154612d54565b6117d8576040805162461bcd60e51b815260206004820152600f60248201526e5661756c7420697320756e7361666560881b604482015290519081900360640190fd5b8082556117e5338461315b565b6040805184815233602082015281517f5a945309b3c58e9bb259128c2a530a6579dc75ac1d7d61b3db4c0b8305a16821929181900390910190a1505050565b600b54600c5460030b82565b611838611c1b565b5061184382306121d3565b600480546040805163095ea7b360e01b81526001600160a01b0390921692820192909252602481018490529051309163095ea7b39160448083019260209291908290030181600087803b15801561189957600080fd5b505af11580156118ad573d6000803e3d6000fd5b505050506040513d60208110156118c357600080fd5b50506004805460408051637dafae5960e01b81526001600160a01b03858116948201949094523060248201526000604482018190526064820187905291519390921692637dafae5992608480820193929182900301818387803b15801561192957600080fd5b505af115801561193d573d6000803e3d6000fd5b505050505050565b6000611287611952612bc8565b846115048560026000611963612bc8565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff612cfa16565b6004546001600160a01b031681565b6119b0611c1b565b506119bc838383611ad9565b505050565b60005b8151811015611a9b5760008282815181106119db57fe5b602002602001015190506119ee81611290565b611a295760405162461bcd60e51b815260040180806020018281038252602f815260200180614036602f913960400191505060405180910390fd5b6001600160a01b038116600090815260056020526040902084611a4e57505050611482565b84816001015410611a6b57611a638583613246565b505050611482565b6001810154611a8190869063ffffffff612cb816565b9450611a91816001015483613246565b50506001016119c4565b5081156114825760405162461bcd60e51b815260040180806020018281038252602d815260200180613ef4602d913960400191505060405180910390fd5b611ae33383610f8a565b506119bc838261131d565b60408051808201909152600d548152600e54600390810b810b900b60208201526000906111389083906136a9565b6017546001600160a01b031681565b601654601254600091600160201b9004600390810b91810b91909103900b611b688367ffffffffffffffff808416600a0a1663ffffffff6137a416565b9392505050565b6001600160a01b031660009081526001602052604090205490565b611b92611db2565b611bd1576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000611c25611dd6565b15611c65576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b611c6e33611290565b15611cb8576040805162461bcd60e51b815260206004820152601560248201527415985d5b1d08185b1c9958591e4818dc99585d1959605a1b604482015290519081900360640190fd5b60408051608081018252600080825260208083018281528385018381526001606086018181523380875260058652888720975188559351878301559151600287015590516003909501805460ff1916951515959095179094556006805494850181559092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90920180546001600160a01b03191682179055825190815291517f66a872561db77eb92ef3079a44a5af00c68c3a09e0976814a95bd91721f57c2f9281900390910190a150600190565b6019546001600160a01b031681565b60075460085460030b82565b6000546001600160a01b031690565b600080546001600160a01b0316611dc7612bc8565b6001600160a01b031614905090565b60155442101590565b601b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561126b5780601f106112405761010080835404028352916020019161126b565b6000611e44611dd6565b15611e84576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b601654611ea090600160401b90046001600160a01b0316612a44565b611edb5760405162461bcd60e51b8152600401808060200182810382526028815260200180613dcd6028913960400191505060405180910390fd5b611ee482611290565b611f23576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b604080516001600160a01b0384168152346020820152338183015290517ff24ce6016de57e90501829715846e26ac283a0aabfc160647e0ae8b05e0f433d9181900360600190a16111388234612b49565b600954600a5460030b82565b6000611287611f8d612bc8565b84611504856040518060600160405280602581526020016140fc6025913960026000611fb7612bc8565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6130a916565b6000611287611ffb612bc8565b8484612f4b565b6018546001600160a01b031681565b601654600160201b900460030b81565b60165460030b81565b60115460125460030b82565b61203e611dd6565b6120795760405162461bcd60e51b8152600401808060200182810382526025815260200180613e3d6025913960400191505060405180910390fd5b61208233611290565b6120c1576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600081815260056020526040812080546002820180548484556001840185905593905590929091906120f4908361315b565b6120fe33826137fd565b6040805183815260208101839052338183015290517fe481532a3f7d078365ca0145442ed0a0a3e0443f3c0bae0c29cff131112678389181900360600190a1505050565b61214a611db2565b612189576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b815161219c90601a906020850190613c85565b5080516121b090601b906020840190613c85565b50601254601c805460ff191660039290920b60000360ff16919091179055611482565b6121dc33611e3a565b50611482828261131d565b600d54600e5460030b82565b6121fb611dd6565b1561223b576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61224482611290565b612283576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b6001600160a01b03821660009081526005602052604090206122a483612517565b6122e5576040805162461bcd60e51b815260206004820152600d60248201526c5661756c74206973207361666560981b604482015290519081900360640190fd5b336001600160a01b0384161415612343576040805162461bcd60e51b815260206004820181905260248201527f4f776e65722063616e2774206c6971756964617465207468656d73656c766573604482015290519081900360640190fd5b600061236883604051806040016040528060018152602001600060030b8152506138a3565b604080518082019091526007548152600854600390810b810b900b60208201529091506000906123999085906138a3565b905060006123ad838363ffffffff612cfa16565b600b5485549192506000916123c79163ffffffff6137a416565b600c549091506000600391820b90910b131561240257600c546123fb908290600390810b900b600a0a63ffffffff6137a416565b9050612426565b600c54612423908290600390810b600003900b600a0a63ffffffff61398516565b90505b808211156124655760405162461bcd60e51b8152600401808060200182810382526037815260200180613f216037913960400191505060405180910390fd5b8454612477908363ffffffff612cb816565b8555600185015461248e908763ffffffff612cb816565b600186015561249d33876139c7565b6124a7338361315b565b604080518381526001600160a01b0389166020820152338183015290517fcab8e1abb9f8235c6db895cf185336dc9461aecf477b98c1be83687ee549e66a9181900360600190a150505050505050565b600f5460105460030b82565b61250b611c1b565b50611531838330611ad9565b60008061253461252684613140565b61252f85613ac3565b612d54565b159392505050565b61254533611e3a565b50611843823061131d565b601654600160401b90046001600160a01b031681565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600061259c82612517565b15612654576001600160a01b0382166000908152600560205260408120600c54600b5482549293926125f192600390810b8503900b600a0a916125e5919063ffffffff6137a416565b9063ffffffff61398516565b600854909150600390810b600003900b600a0a61260c613d03565b60408051808201909152600754819061262b908563ffffffff612cfa16565b8152600854600390810b900b602090910152905061264983826136a9565b9450505050506112b0565b5060006112b0565b60155481565b61266a611db2565b6126a9576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b6014805460009091556126bc828261315b565b604080516001600160a01b03841681526020810183905281517f88b171bb78d3ac5e1caa8e729dddce4e1322e84c80c093ebbe52507b62c77d98929181900390910190a15050565b61270c611dd6565b1561274c576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61275533611290565b612794576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600090815260056020526040902060018101546127b8908363ffffffff612cb816565b60018201556127c733836139c7565b604080513381526020810184905281517fdf8cebdea6ef1fd20576b80bc951377c0e61e2a8169153a1f836673ccce80e62929181900390910190a15050565b61280e611c1b565b5061148282826121d3565b612821611db2565b612860576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b60c88411156128a05760405162461bcd60e51b8152600401808060200182810382526025815260200180613ecf6025913960400191505060405180910390fd5b6103e88311156128e15760405162461bcd60e51b815260040180806020018281038252602b815260200180613d80602b913960400191505060405180910390fd5b6064821115612937576040805162461bcd60e51b815260206004820181905260248201527f43616e27742068617665207472616e73616374696f6e20666565203e20313025604482015290519081900360640190fd5b600a8110156129775760405162461bcd60e51b8152600401808060200182810382526028815260200180613d586028913960400191505060405180910390fd5b6007849055600b8390556009829055600d8190557f3450d20c21ea671871fed271900cc8ff03badafa9b6fe2ff7f86991950e86b6b848484846129b8611da3565b6040805195865260208601949094528484019290925260608401526001600160a01b03166080830152519081900360a00190a150505050565b6129f9611db2565b612a38576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b612a4181613ae1565b50565b6001600160a01b03161590565b612a5a33611290565b612a99576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b3360009081526005602052604090206002810154612af6576040805162461bcd60e51b81526020600482015260156024820152744e6f20756e6465726c79696e672062616c616e636560581b604482015290519081900360640190fd5b6002810180546000909155612b0b33826137fd565b6040805182815233602082015281517fea0bff65fa9380b944e9a761f9c6a665ad2d31e74706a52773ddb45c8a57c83d929181900390910190a15050565b6000612b53611dd6565b15612b93576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b6001600160a01b03831660009081526005602052604090208054612bbd908463ffffffff612cfa16565b908190559392505050565b3390565b6001600160a01b038316612c115760405162461bcd60e51b815260040180806020018281038252602481526020018061408a6024913960400191505060405180910390fd5b6001600160a01b038216612c565760405162461bcd60e51b8152600401808060200182810382526022815260200180613e1b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061113583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506130a9565b600082820183811015611135576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080612d75601660089054906101000a90046001600160a01b0316613b81565b601854909150600090612d90906001600160a01b0316613b81565b600f54600d54919250600091612dbe9190612db290889063ffffffff6137a416565b9063ffffffff6137a416565b601054600e54919250600391820b910b016000612de5846125e58a8863ffffffff6137a416565b601654909150600390810b90600090819085810b9084900b1215612e295782850360030b915083612e2087600a85900a63ffffffff6137a416565b11159050612e4b565b84830360030b9150612e4584600a84900a63ffffffff6137a416565b86111590505b9a9950505050505050505050565b6001600160a01b038216612eb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354612ec7908263ffffffff612cfa16565b6003556001600160a01b038216600090815260016020526040902054612ef3908263ffffffff612cfa16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038316612f905760405162461bcd60e51b81526004018080602001828103825260258152602001806140656025913960400191505060405180910390fd5b6001600160a01b038216612fd55760405162461bcd60e51b8152600401808060200182810382526023815260200180613d356023913960400191505060405180910390fd5b61301881604051806060016040528060268152602001613ea9602691396001600160a01b038616600090815260016020526040902054919063ffffffff6130a916565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461304d908263ffffffff612cfa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156131385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130fd5781810151838201526020016130e5565b50505050905090810190601f16801561312a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b031660009081526005602052604090205490565b60165461317790600160401b90046001600160a01b0316612a44565b156131b8576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156131b2573d6000803e3d6000fd5b50611482565b6016546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151600160401b9093049091169163a9059cbb916044808201926020929091908290030181600087803b15801561321657600080fd5b505af115801561322a573d6000803e3d6000fd5b505050506040513d602081101561324057600080fd5b50505050565b61324e6112b5565b6132895760405162461bcd60e51b815260040180806020018281038252602d815260200180613fa0602d913960400191505060405180910390fd5b61329281611290565b6132d1576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526005602052604090208261333b576040805162461bcd60e51b815260206004820152601860248201527f43616e27742065786572636973652030206f546f6b656e730000000000000000604482015290519081900360640190fd5b806001015483111561337e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806140ae602e913960400191505060405180910390fd5b8261338833611b6f565b10156133d0576040805162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f756768206f546f6b656e7360701b604482015290519081900360640190fd5b60006133db84611b2b565b60028301549091506133f3908263ffffffff612cfa16565b600283015560408051808201909152600181526000602082018190529061341b9086906138a3565b604080518082019091526009548152600a54600390810b810b900b602082015290915060009061344c9087906138a3565b601454909150613462908263ffffffff612cfa16565b6014556000613477838363ffffffff612cfa16565b85549091508111156134d0576040805162461bcd60e51b815260206004820181905260248201527f5661756c7420756e64657277617465722c2063616e2774206578657263697365604482015290519081900360640190fd5b84546134e2908263ffffffff612cb816565b855560018501546134f9908863ffffffff612cb816565b6001860155601754613513906001600160a01b0316612a44565b1561356757833414613562576040805162461bcd60e51b8152602060048201526013602482015272496e636f7272656374206d73672e76616c756560681b604482015290519081900360640190fd5b61363e565b601754604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156135c157600080fd5b505af11580156135d5573d6000803e3d6000fd5b505050506040513d60208110156135eb57600080fd5b505161363e576040805162461bcd60e51b815260206004820152601c60248201527f436f756c64206e6f74207472616e7366657220696e20746f6b656e7300000000604482015290519081900360640190fd5b61364833886139c7565b613652338461315b565b604080518581526020810185905233818301526001600160a01b038816606082015290517ffa7bab37479e50a9b24a9412b879d400de9bcaa1e3a2b343e90bb370d85bbaa79181900360800190a150505050505050565b6000806136ca601660089054906101000a90046001600160a01b0316613b81565b6018549091506000906136e5906001600160a01b0316613b81565b600f5485519192506000916136ff9163ffffffff6137a416565b601054602087015191925060030b016000613724846125e58a8863ffffffff6137a416565b601654909150600390810b90600090819085810b9084900b12156137755782850360030b915061376e61376187600a85900a63ffffffff6137a416565b859063ffffffff61398516565b9050612e4b565b84830360030b9150613795866125e586600a86900a63ffffffff6137a416565b9b9a5050505050505050505050565b6000826137b357506000611138565b828202828482816137c057fe5b04146111355760405162461bcd60e51b8152600401808060200182810382526021815260200180613f586021913960400191505060405180910390fd5b601754613812906001600160a01b0316612a44565b1561384d576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156131b2573d6000803e3d6000fd5b6017546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561321657600080fd5b6000806138c4601660089054906101000a90046001600160a01b0316613b81565b6018549091506000906138df906001600160a01b0316613b81565b9050600061390782612db28760000151612db2600f600001548b6137a490919063ffffffff16565b6016546020870151601054929350600391820b92820b01919091039060009082900b811215613955578161394d866125e58663ffffffff808616600a0a8116906137a416565b91505061397a565b6000829003613976866125e58663ffffffff808616600a0a81169061398516565b9150505b979650505050505050565b600061113583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613c20565b6001600160a01b038216613a0c5760405162461bcd60e51b81526004018080602001828103825260218152602001806140156021913960400191505060405180910390fd5b613a4f81604051806060016040528060228152602001613dab602291396001600160a01b038516600090815260016020526040902054919063ffffffff6130a916565b6001600160a01b038316600090815260016020526040902055600354613a7b908263ffffffff612cb816565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b031660009081526005602052604090206001015490565b6001600160a01b038116613b265760405162461bcd60e51b8152600401808060200182810382526026815260200180613df56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216613ba05750670de0b6b3a76400006112b0565b601954604080516341976e0960e01b81526001600160a01b038581166004830152915191909216916341976e09916024808301926020929190829003018186803b158015613bed57600080fd5b505afa158015613c01573d6000803e3d6000fd5b505050506040513d6020811015613c1757600080fd5b505190506112b0565b60008183613c6f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156130fd5781810151838201526020016130e5565b506000838581613c7b57fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613cc657805160ff1916838001178555613cf3565b82800160010185558215613cf3579182015b82811115613cf3578251825591602001919060010190613cd8565b50613cff929150613d1a565b5090565b604080518082019091526000808252602082015290565b6111e291905b80821115613cff5760008155600101613d2056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737343616e27742068617665206d696e436f6c6c61746572616c697a6174696f6e526174696f203c203143616e2774206c6971756964617465206d6f7265207468616e2031303025206f6620746865207661756c7445524332303a206275726e20616d6f756e7420657863656564732062616c616e6365455448206973206e6f74207468652073706563696669656420636f6c6c61746572616c20747970654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737343616e277420636f6c6c65637420636f6c6c61746572616c20756e74696c20657870697279436f756c64206e6f74207472616e7366657220696e20636f6c6c61746572616c20746f6b656e735661756c7420646f6573206e6f7420657869737400000000000000000000000045524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543616e27742068617665203e323025206c69717569646174696f6e20696e63656e74697665537065636966696564207661756c7473206861766520696e73756666696369656e7420636f6c6c61746572616c43616e206f6e6c79206c6971756964617465206c69717569646174696f6e20666163746f7220617420616e7920676976656e2074696d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e27742072656d6f7665206d6f726520636f6c6c61746572616c207468616e206f776e656443616e2774206578657263697365206f757473696465206f66207468652065786572636973652077696e646f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742065786572636973652066726f6d2061207661756c74207468617420646f65736e277420657869737445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e2774206578657263697365206d6f7265206f546f6b656e73207468616e20746865206f776e6572206861734f7074696f6e7320636f6e74726163742065787069726564000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7230582078d274c261df68e9d5018737bd71b890ed72cabfe0e584eb1d201ad752666c9564736f6c634300050a003245786572636973652077696e646f772063616e2774206265206c6f6e676572207468616e2074686520636f6e74726163742773206c6966657370616e636f6c6c61746572616c206578706f6e656e74206e6f742077697468696e2065787065637465642072616e67656f546f6b656e2065786368616e67652072617465206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765737472696b65207072696365206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765756e6465726c79696e67206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765';\nexport default bytes;\n","import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\nimport { checkAddressAndAddToStorage } from '../../utils/storage';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    checkAddressAndAddToStorage(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\ntype switchThemeProps = {\n  theme: string,\n  updateTheme: Function\n}\n\nfunction SwitchMode({ theme, updateTheme }: switchThemeProps) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"Theme\"\n    />\n  );\n}\n\n\nexport default SwitchMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Bar, BackButton, LinkBase,\n  Tag,\n} from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SwitchTheme';\n\ntype NavbarProps = {\n  theme:string,\n  updateTheme: Function,\n  user: string,\n  setUser: Function\n}\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}:NavbarProps) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"Home\"\n              onClick={() => {\n                history.push('/');\n              }}\n              isSelected={history.location.pathname === '/'}\n            />\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n              isSelected={history.location.pathname === '/myvaults/'}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n              isSelected={history.location.pathname === '/options/'}\n            />\n            <LinkButton\n              title=\"Uniswap\"\n              onClick={() => {\n                history.push('/uniswap/');\n              }}\n              isSelected={history.location.pathname.includes('/uniswap/')}\n            />\n            <LinkButton\n              title=\"Trade\"\n              onClick={() => {\n                history.push('/trade/oeth-usdc');\n              }}\n              isSelected={history.location.pathname.includes('/trade/')}\n            />\n            <Tag> beta </Tag>\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\ntype linkButtonProps = {\n  title:string,\n  onClick: Function,\n  isSelected?:boolean\n}\n\nfunction LinkButton({ title, onClick, isSelected = false }:linkButtonProps) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: isSelected ? 1 : 0.5, fontSize: 17 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, Box, LinkBase, Tag,\n} from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Monitor\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Exchange\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://i.imgur.com/4eX8GlY.png\"\n            onClick={() => {\n              history.push('/uniswap/');\n            }}\n          />\n        </div>\n\n      </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"Trade\"\n            tag=\"new\"\n            description=\"Trade ETH Options on 0x\"\n            iconUrl=\"https://cdn.worldvectorlogo.com/logos/0x-virtual-money-.svg\"\n            onClick={() => {\n              history.push('/trade/oeth-usdc');\n            }}\n          />\n        </div>\n      </div>\n\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  iconUrl: string,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","export const USDC = {\n  addr: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  decimals: 6,\n  symbol: 'USDC',\n};\n\nexport const OPYN_ETH = {\n  addr: '0x0000000000000000000000000000000000000000',\n  decimals: 18,\n  symbol: 'ETH',\n};\n\nexport const cDAI = {\n  addr: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n  decimals: 8,\n  symbol: 'cDai',\n};\n\nexport const cUSDC = {\n  addr: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n  decimals: 8,\n  symbol: 'cUSDC',\n};\n\nexport const CurveFi = {\n  addr: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n  decimals: 18,\n  symbol: 'yDAI+yUSDC+yUSDT+yTUSD',\n};\n\nexport const WETH = {\n  addr: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  decimals: 18,\n  symbol: 'WETH',\n};\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { ETHOption } from '../../types'\nexport const eth_calls: ETHOption[] = [\n  {\n    addr: '0xbcae1db14f1b366cd4611c75aab2031492b136e9',\n    title: 'ETH Call $250 05/29/20',\n\n    // constants in contract\n    symbol: 'oETH $250 Call',\n    name: 'Opyn ETH Call $250 05/29/20',\n    decimals: 6,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.USDC,\n    strike: tokens.OPYN_ETH,\n    strikePrice: 4e-9,\n    strikePriceInUSD: 250,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xb1C9e4d652259467e4556BA627B00b284481744E', // wrong\n    expiry: 1590739200,\n  },\n];\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { ETHOption } from '../../types'\n\nexport const eth_puts: ETHOption[] = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0xaefc7b368f7b536c9e5e3f342bf534931ce58584',\n    title: 'ETH Put $150 04/24/20',\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 04/24/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xD2840757B0DeF8fBC2A7DC990CEF75975C2d3F0e',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0x461cd647add2159e85ad57141cb5371566fceed3',\n    title: 'ETH Put $160 05/01/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/01/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xd03f7298aE74a8618711Ec43F45Ad2225F141aa4',\n    expiry: 1588320000,\n  },\n  {\n    addr: '0xc8f95e13eff0165e5e381ea1878c56d93562d7d7',\n    title: 'ETH Put $160 05/08/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/08/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x572040e32c69b29a262392Ba7967B9f25724da39',\n    expiry: 1588924800,\n  },\n  {\n    addr: '0xd79ab5a71fa2099ef30df0e8a81f8c200aac36f1',\n    title: 'ETH Put $200 05/08/20',\n    symbol: 'oETH $200 Put',\n    name: 'Opyn ETH Put $200 05/08/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 2e-5,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x05c0Fd229017b40CaDbffeDEd73ceaeac68Fa4C2',\n    expiry: 1588924800,\n  },\n  {\n    addr: '0x684a1d736e934a45f6f5d00c62ddf7a0b7d2064b',\n    title: 'ETH Put $200 05/15/20',\n    symbol: 'oETH $200 Put',\n    name: 'Opyn ETH Put $200 05/15/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 2e-5,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xA7f55C14200136343450B93067d587D112EB7c54',\n    expiry: 1589529600,\n  },\n  {\n    addr: '0xecf6f2fd8d2a8e17397066348d449566d5407174',\n    title: 'ETH Put $150 05/29/20',\n\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 05/29/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x75B865EA22a2b6633038E15647357268C7F9Ac54',\n    expiry: 1590739200,\n  },\n  // {\n  //   addr: '0x09974afd06cc921a8389d03a06b1ab7bd5f39ffc',\n  //   title: 'ETH Put $180 07/29/20',\n\n  //   // constants in contract\n  //   symbol: 'oETH $180 Put',\n  //   name: 'Opyn ETH Put $180 07/29/20',\n  //   decimals: 7,\n  //   oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n  //   collateral: tokens.USDC,\n  //   underlying: tokens.OPYN_ETH,\n  //   strike: tokens.USDC,\n  //   strikePrice: 1.8e-5,\n  //   strikePriceInUSD: 180,\n  //   minRatio: 1,\n  //   exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n  //   uniswapExchange: '0x75B865EA22a2b6633038E15647357268C7F9Ac54',\n  //   expiry: 1596009600,\n  // },\n  \n];\n","import * as tokens from '../tokens';\nimport { option } from '../../types'\n/* eslint-disable import/prefer-default-export */\nexport const insurances: option[] = [\n  {\n    title: 'cDai Insurance',\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cUSDC,\n    strike: tokens.USDC,\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.CurveFi,\n    strike: tokens.USDC,\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n","import { eth_calls } from './calls';\nimport { eth_puts } from './puts';\nimport { insurances } from './insurances';\n\n\nexport const eth_options = eth_puts.concat(eth_calls);\nexport const allOptions = insurances.concat(eth_options);\nexport {\n  eth_calls, eth_puts, insurances,\n};\n","import React from 'react';\nimport { IdentityBadge } from '@aragon/ui';\n\ntype AddressBlockProps = {\n  label:string,\n  address: string\n}\n\nfunction AddressBlock({ label, address }: AddressBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nexport default AddressBlock;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n}\n\nfunction BalanceBlock({ asset, balance }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\n\ntype RatioTagProps = {\n  isSafe: boolean,\n  ratio: number,\n  useCollateral? : boolean,\n}\nfunction RatioTag({ isSafe, ratio, useCollateral = true }:RatioTagProps) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }:{title: string}) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle;\n","import React from 'react';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }:{ onClick: Function }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton;\n","import React from 'react';\n\nfunction HelperText({ label, amt }: { label: string, amt: string }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default HelperText;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}:{label:string, amt: string|number|BigNumber, symbol?:string, forceDisplay?:boolean }) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default PriceSection;\n","import React from 'react';\nimport { useTheme } from '@aragon/ui';\n\nfunction WarningText({ text }:{text:string}) {\n  const theme = useTheme();\n  return (\n    <div style={{ color: theme.warning, fontSize: 12, padding: '3px' }}>\n      {text}\n    </div>\n  );\n}\n\n\nexport default WarningText;\n","import React, { ReactChild } from 'react';\n\ntype commentProps = {\n  text: string | ReactChild\n}\n\nfunction Comment({ text }: commentProps) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage()} label=\"Manage\" />;\n}\n\ntype openVaultButtonProps = {\n  oToken: string,\n  user: string,\n  goToMangePage?: boolean\n}\n\nfunction OpenVaultButton({ oToken, user, goToMangePage = true }: openVaultButtonProps) {\n  const history = useHistory();\n\n  const openAndGoToVault = async () => {\n    await openVault(oToken);\n    if (goToMangePage) history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={openAndGoToVault}\n      label=\"Open\"\n    />\n  );\n}\n\n\nexport { ManageVaultButton, OpenVaultButton };\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\ntype checkBoxProps = {\n  text: string,\n  checked: boolean,\n  onCheck: Function\n}\n\nfunction MyCheckBox({ text, checked, onCheck }: checkBoxProps) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import ReactGA from 'react-ga';\nconst projectId = process.env.REACT_APP_GA_PROJECT_ID || ''\nReactGA.initialize(projectId);\n\nexport default ReactGA;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs,\n} from '@aragon/ui';\n\nimport { insurances, eth_options } from '../../constants/options';\nimport { Comment, CheckBox } from '../common';\nimport { getPreference, storePreference } from '../../utils/storage';\n\nimport tracker from '../../utils/tracker';\n\nfunction AllContracts() {\n  useEffect(() => {\n    tracker.pageview('/options/');\n  }, []);\n\n  const storedOptionTab = getPreference('optionTab', '0');\n  const storedShowExpired = getPreference('showExpired', '0');\n\n  const [tabSelected, setTabSelected] = useState(parseInt(storedOptionTab, 10));\n  const [showExpired, setShowExpired] = useState(storedShowExpired === '1'); // whether to show expired options\n\n  const history = useHistory();\n  const goToToken = (addr:string) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Choose an option contract to proceed.\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n            checked={showExpired}\n          />\n        </div>\n      </div>\n      <Tabs\n        items={['DeFi Insurance', 'ETH Options']}\n        selected={tabSelected}\n        onChange={(choice:number) => {\n          setTabSelected(choice);\n          storePreference('optionTab', choice.toString());\n        }}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', '']}\n          entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      ) : (\n        <DataView\n          header=\"Options\"\n          fields={['Name', 'Contract', 'Expiry', '']}\n          entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }: {addr:string, title:string, expiry:number}) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            new Date(expiry * 1000).toDateString(),\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/options';\n\nimport { Comment, CheckBox } from '../common';\nimport { storePreference, getPreference } from '../../utils/storage';\nimport tracker from '../../utils/tracker';\n\nfunction TradeLanding() {\n  const history = useHistory();\n\n  useEffect(() => {\n    tracker.pageview('/uniswap/');\n  }, []);\n\n  const goToTrade = (addr:string) => {\n    history.push(`/uniswap/${addr}`);\n  };\n\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n\n  return (\n    <>\n      <Header primary=\"Trade on Uniswap\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Buy or Sell DeFi Insurance\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            checked={showExpired}\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n          />\n        </div>\n      </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n\n        ]}\n      />\n    </>\n  );\n}\n\n\n\nfunction GoToUniswapFunction({ token }:{token:string}) {\n  return (\n    <Button onClick={() => {\n      tracker.event({\n        category: 'link',\n        action: 'uniswap',\n      })\n      window.open(\n      `https://uniswap.exchange/swap?inputCurrency=${token}`,\n      '_blank',\n    )}\n  }\n    >\n      <img alt=\"uniswap\" src=\"https://i.imgur.com/4eX8GlY.png\" style={{ padding: 2, height: 25, width: 23 }} />\n    </Button>\n  );\n}\n\n\nexport default TradeLanding;\n","import styled from 'styled-components';\n\n// For option board\n\nexport const BidText = styled.div`{\n  color: #7aae1a;\n  font-size: 17px;\n}`;\n\nexport const AskText = styled.div`{\n  color: #da5750;\n  font-size: 17px;\n}`;\n\n\n// For buy and sell part\nexport const FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 18px 0;\n`;\nexport const BuyAndSellBlock = styled.div`  \n  width: 100%;\n  min-height: 509px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.border};\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.surface};\n`;\nexport const Header = styled.div`\n  width: 100%;\n  height: 35px;\n  font-size: 13px;\n  font-family: aragon-ui;\n  border-bottom: 1px solid ${(props) => props.theme.border};\n  background-color: ${(props) => props.theme.surface};\n  color: ${(props) => props.theme.contentSecondary};\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  justify-content: center;\n  // font-weight: bold;\n`;\nexport const BuySellTopPart = styled.div`\n  margin: 10px 0;\n  background-color: ${(props) => props.theme.surface};\n  min-height: 50px;\n`;\nexport const BuySellTopPartText = styled.div``;\nexport const BuySellLowerPart = styled.div`\n  background-color: ${(props) => props.theme.background};\n`;\nexport const Tab = styled.div`\n  width: 50%;\n  height: 50px;\n  color: ${(props) => (props.active ? props.theme.content : props.theme.surfaceContentSecondary)};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  border-bottom: ${(props) => (props.active ? `2px solid ${props.theme.selected}` : `1px solid ${props.theme.border}`)};\n  cursor: pointer;\n`;\n\nexport const Label = styled.div`\n  height: 14px;\n  font-size: 14px;\n  color: ${(props) => props.theme.content};\n  margin: 20px 0 15px 0;\n`;\n\nexport const BottomText = styled.div`\n  height: 20px;\n`;\nexport const Wrapper = styled.div`\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Flex = styled.div`\n  display:flex;\n  width: 90%;\n`;\nexport const TabWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  background-color: ${(props) => props.theme.surface};\n  padding-top: 10px;\n  border: ${(props) => props.theme.border}\n`;\nexport const BottomTextWrapper = styled(FlexWrapper)`\n  height: 27px;\n  border-bottom: solid 1px #979797;\n  border-bottom-style: dotted;\n`;\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nexport const GroupButton = styled.div`\n  height: 40px;\n  width: 33%;\n  border: 1px solid ${(props) => props.theme.border};\n  border-width: ${(props) => (props.index === 1 ? '1px 0px' : '1px')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  background: ${(props) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;\n","import BigNumber from 'bignumber.js';\n\nconst Web3 = require('web3')\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n */\nexport function toBaseUnitBN(rawAmt:string| number| BigNumber, decimals: number):BigNumber {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n */\nexport const toTokenUnitsBN = (tokenAmount:string|number|BigNumber, tokenDecimals:number): BigNumber => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision:number) {\n  return parseFloat(num).toFixed(percision);\n}\n\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast.toString(), 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt((secondsPast / 60).toString(), 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt((secondsPast / 3600).toString(), 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = (ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/) as RegExpMatchArray)[0] \n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nexport const isAddress = web3.utils.isAddress;\n","/* eslint-disable no-restricted-syntax */\nimport { assetDataUtils } from '@0x/order-utils';\nimport BigNumber from 'bignumber.js';\nimport { USDC } from '../constants/tokens';\n\nimport { toTokenUnitsBN } from './number';\nimport * as types from '../types'\n\nconst Promise = require('bluebird');\n\nconst endpoint = 'https://api.0x.org/';\n\ntype entries = {\n  total:number,\n  page:number,\n  perPage:number,\n  records: types.order[]\n}\n\n\n/**\n * get orderbook: BASE:QUOTE\n */\nexport async function getOrderBook(base:string, quote:string): Promise<{\n  asks:entries, bids:entries\n}> {\n  const baseAsset = assetDataUtils.encodeERC20AssetData(base);\n  const quoteAsset = assetDataUtils.encodeERC20AssetData(quote);\n  return request(`sra/v3/orderbook?baseAssetData=${baseAsset}&quoteAssetData=${quoteAsset}&perPage=${100}`);\n}\n\n/**\n * get oToken:WETH stats (v1) for all options\n * @param {Array<{addr:string, decimals:number}>} options\n * @param {{addr:string, decimals:number}} quoteAsset\n * @return {Promise<Array<\n * {option: string, bestAskPrice: BigNumber, bestAskPrice:BigNumber,\n * totalBidAmt:BigNumber, totalAskAmt:BigNumber,\n * bestAsk:{}, bestBid:{}\n * }>>}\n */\nexport async function getBasePairAskAndBids(options: types.option[], quoteAsset:types.token): Promise<types.OptionRealTimeStat[]> {\n  const bestAskAndBids = await Promise.map(options, async ({ addr: option, decimals }) => {\n    const { asks, bids } = await getOrderBook(option, USDC.addr);\n    let totalBidAmt = new BigNumber(0);\n    let totalAskAmt = new BigNumber(0);\n    let bestAskPrice = new BigNumber(0);\n    let bestBidPrice = new BigNumber(0);\n    let bestAsk: types.order|undefined; \n    let bestBid: types.order|undefined;\n    const validAsks = asks.records.filter((record) => isValid(record));\n    if (validAsks.length > 0) {\n      totalAskAmt = validAsks\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          getRemainingMakerAndTakerAmount(cur).remainingMakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: askTokenAmt, takerAssetAmount: askQuoteAmt } = validAsks[0].order;\n      bestAskPrice = toTokenUnitsBN(askQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(askTokenAmt, decimals));\n      bestAsk = validAsks[0];\n    }\n\n    const validBids = bids.records.filter((record) => isValid(record));\n    if (validBids.length > 0) {\n      totalBidAmt = validBids\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          cur.metaData.remainingFillableTakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: bidQuoteAmt, takerAssetAmount: bidTokenAmt } = validBids[0].order;\n      bestBidPrice = toTokenUnitsBN(bidQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(bidTokenAmt, decimals));\n      bestBid = validBids[0];\n    }\n\n    return {\n      option, bestAskPrice, bestBidPrice, bestAsk, bestBid, totalBidAmt, totalAskAmt,\n    };\n  });\n  return bestAskAndBids;\n}\n\n/**\n *\n * @param {string} path\n */\nasync function request(path:string): Promise<any> {\n  const res = await fetch(`${endpoint}${path}`);\n  return res.json();\n}\n\n/**\n * Return true if the order is valid\n */\nexport const isValid = (entry: types.order) => {\n  const notExpired = parseInt(entry.order.expirationTimeSeconds, 10) > Date.now() / 1000;\n  const notDust = parseInt(getOrderFillRatio(entry)) < 100;\n  return notExpired && notDust;\n};\n\n/**\n * Create Order Object\n */\nexport const createOrder = (maker:string, makerAsset:string, takerAsset:string, makerAssetAmount:BigNumber, takerAssetAmount:BigNumber, expiry:number) => {\n  const salt = BigNumber.random(20).times(new BigNumber(10).pow(new BigNumber(20))).integerValue().toString(10);\n  const order = {\n    senderAddress: '0x0000000000000000000000000000000000000000',\n    makerAddress: maker,\n    takerAddress: '0x0000000000000000000000000000000000000000',\n    makerFee: '0',\n    takerFee: '0',\n    makerAssetAmount: makerAssetAmount.toString(),\n    takerAssetAmount: takerAssetAmount.toString(),\n    makerAssetData: assetDataUtils.encodeERC20AssetData(makerAsset),\n    takerAssetData: assetDataUtils.encodeERC20AssetData(takerAsset),\n    salt,\n    exchangeAddress: '0x61935cbdd02287b511119ddb11aeb42f1593b7ef',\n    feeRecipientAddress: '0x1000000000000000000000000000000000000011',\n    expirationTimeSeconds: expiry.toString(),\n    makerFeeAssetData: '0x',\n    chainId: 1,\n    takerFeeAssetData: '0x',\n  };\n  return order;\n};\n\n/**\n * Send orders to the mesh node\n * @param {*} orders\n */\nexport const broadcastOrders = async (orders: types.order[]) => {\n  const url = `${endpoint}sra/v3/orders`;\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(orders),\n  });\n  if (res.status === 200) return;\n  const jsonRes = await res.json();\n  throw jsonRes.validationErrors[0].reason;\n};\n\n/**\n * Calculate the price of a bid order\n */\nexport const getBidPrice = (bid: types.order, makerAssetDecimals:number, takerAssetDecimals:number):BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(bid.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(bid.order.takerAssetAmount, takerAssetDecimals);\n  return makerAssetAmount.div(takerAssetAmount);\n};\n\n/**\n * Calculate price of an ask order\n * @description maker want to sell oToken\n * takerAssetAmount 100 weth\n * makerAssetAmount 1 oToken\n */\nexport const getAskPrice = (ask: types.order, makerAssetDecimals:number, takerAssetDecimals:number): BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(ask.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(ask.order.takerAssetAmount, takerAssetDecimals);\n  return takerAssetAmount.div(makerAssetAmount);\n};\n\nexport const getOrderFillRatio = (order: types.order) => new BigNumber(100)\n  .minus(new BigNumber(order.metaData.remainingFillableTakerAssetAmount)\n    .div(new BigNumber(order.order.takerAssetAmount))\n    .times(100)).toFixed(2);\n\n/**\n *\n * @param {*} order\n * @return { {remainingTakerAssetAmount: BigNumber, remainingMakerAssetAmount: BigNumber} }\n */\nexport const getRemainingMakerAndTakerAmount = (order: types.order): {\n  remainingTakerAssetAmount: BigNumber,\n  remainingMakerAssetAmount: BigNumber } => {\n  const remainingTakerAssetAmount = new BigNumber(order.metaData.remainingFillableTakerAssetAmount);\n  const makerAssetAmountBN = new BigNumber(order.order.makerAssetAmount);\n  const takerAssetAmountBN = new BigNumber(order.order.takerAssetAmount);\n  const remainingMakerAssetAmount = remainingTakerAssetAmount.multipliedBy(makerAssetAmountBN).div(takerAssetAmountBN);\n  return { remainingTakerAssetAmount, remainingMakerAssetAmount };\n};\n\n/**\n *\n * @param {{}[]} orders\n * @return {}\n */\nexport const getOrdersTotalFillables = (orders: types.order[]): {\n  totalFillableTakerAmount: BigNumber,\n  totalFillableMakerAmount:BigNumber, \n  fillableTakerAmounts: string[]\n} => {\n  const totalFillableTakerAmount = orders\n    .map((order) => new BigNumber(order.metaData.remainingFillableTakerAssetAmount))\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const totalFillableMakerAmount = orders\n    .map((order) => getRemainingMakerAndTakerAmount(order).remainingMakerAssetAmount)\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const fillableTakerAmounts = orders.map((o) => o.metaData.remainingFillableTakerAssetAmount);\n\n  return { totalFillableTakerAmount, totalFillableMakerAmount, fillableTakerAmounts };\n};\n\n/**\n * Get lastest gas price info from ethgasstation\n */\nexport const getGasPrice = async (): Promise<{\n  fast: number, fastest: number ,safeLow: number,average: number,block_time: number,speed: number,safeLowWait: number,avgWait: number,fastWait: number,fastestWait: number,}> => {\n  const url = 'https://ethgasstation.info/json/ethgasAPI.json';\n  const res = await fetch(url);\n  return res.json();\n};\n\ntype targetAsset = 'maker' | 'taker'\n\n/**\n * Return Minimal orders needed for target amount\n */\nexport const findMinOrdersForAmount = (selectedOrders: types.order[], targetAmount: BigNumber, targetAsset: targetAsset) => {\n  let sum = new BigNumber(0);\n  const requiredOrders: types.order[] = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const order of selectedOrders) {\n    const amount = targetAsset === 'maker'\n      ? new BigNumber(order.order.makerAssetAmount)\n      : new BigNumber(order.order.takerAssetAmount);\n    sum = sum.plus(amount);\n    requiredOrders.push(order);\n\n    if (sum.gt(targetAmount)) {\n      break;\n    }\n  }\n  return requiredOrders;\n};\n\n/**\n * @description Loop through selected orders and see what's the exact taker amount\n * and maker amount fulfilling the requirement\n */\nexport const getFillAmountsOfOrders = (\n  selectedOrders: types.order[], \n  targetTakerAstAmount: BigNumber | undefined, \n  targetMakerAstAmount: BigNumber | undefined\n  ): {\n    sumTakerAmount:BigNumber,\n    sumMakerAmount: BigNumber,\n    takerAmountArray: string[]\n  } => {\n  // const fillables = getRemainingMakerAndTakerAmount(selectedOrders);\n  let sumTakerAmount = new BigNumber(0);\n  let sumMakerAmount = new BigNumber(0);\n  const takerAmountArray: string[] = [];\n  for (const order of selectedOrders) {\n    const {\n      remainingMakerAssetAmount: makerAmount,\n      remainingTakerAssetAmount: takerAmount,\n    } = getRemainingMakerAndTakerAmount(order);\n    if (targetTakerAstAmount !== undefined) {\n      if (sumTakerAmount.plus(takerAmount).lte(targetTakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const takerAmountNeeded = targetTakerAstAmount.minus(sumTakerAmount);\n        const makerAmountNeeded = takerAmountNeeded.div(takerAmount).times(makerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else if (targetMakerAstAmount !== undefined) {\n      // user enter mekr ast amount\n      if (sumMakerAmount.plus(makerAmount).lte(targetMakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const makerAmountNeeded = targetMakerAstAmount.minus(sumMakerAmount);\n        const takerAmountNeeded = makerAmountNeeded.div(makerAmount).multipliedBy(takerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else {\n      throw new Error('wrong input to CalculateMixRate');\n    }\n  }\n  return { sumTakerAmount, sumMakerAmount, takerAmountArray };\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  DataView, DropDown, LinkBase, Radio, Header, Tag,\n} from '@aragon/ui';\nimport { AskText, BidText } from './styled';\n\nimport { SectionTitle } from '../common';\n\nimport { getBasePairAskAndBids } from '../../utils/0x';\nimport * as types from '../../types';\n\nimport { eth_puts, eth_calls } from '../../constants/options';\n\nconst optionsByDate = groupByDate(eth_puts, eth_calls);\n\n\ntype dataViewEntryType = {\n  strikePrice: number,\n  call?: types.ETHOption,\n  callDetail?: types.OptionRealTimeStat,\n  put?: types.ETHOption,\n  putDetail?: types.OptionRealTimeStat\n}\n\n\ntype strikePricePair = {\n  strikePrice: number,\n  call: types.ETHOption | undefined,\n  put: types.ETHOption | undefined\n}\n\ntype entriesForExpiry = { \n  expiry: number, \n  expiryText: string, \n  pairs: strikePricePair[]\n}\n\ntype OptionBoardProps = {\n  baseAsset: types.token,\n  quoteAsset: types.token,\n  setBaseAsset: Function,\n  setTradeType: Function,\n  setSelectedOrders: Function,\n};\n\nfunction OptionBoard({\n  baseAsset, quoteAsset, setBaseAsset, setTradeType, setSelectedOrders,\n}:OptionBoardProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedExpiryIdx, setExpiryIdx] = useState(0);\n  const [entriesToDisplay, setEntriesToDisplay] = useState<dataViewEntryType[]>([]);\n\n  // on expiry change: start the call and put update function on the options of that day\n  useEffect(() => {\n    setIsLoading(true);\n    let isCancelled = false;\n\n    const updateBoardStats = async () => {\n      const callsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.call !== undefined)\n        .map((pair) => pair.call);\n\n      const putsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.put !== undefined)\n        .map((pair) => pair.put);\n\n      const [callData, putData] = await Promise.all([\n        getBasePairAskAndBids(callsOfExpiry as types.ETHOption[] , quoteAsset),\n        getBasePairAskAndBids(putsOfExpiry as types.ETHOption[], quoteAsset),\n      ]);\n\n      const displayEntries: dataViewEntryType[] = [];\n      optionsByDate[selectedExpiryIdx].pairs.forEach((pair) => {\n        const { call, put, strikePrice } = pair;\n        const entry: dataViewEntryType = { strikePrice };\n        if (call !== undefined) {\n          // has call option on this strikePrice\n          entry.call = call;\n          entry.callDetail = callData.find((c) => c.option === call.addr);\n        }\n        if (put !== undefined) {\n          entry.put = put;\n          entry.putDetail = putData.find((p) => p.option === put.addr);\n        }\n        displayEntries.push(entry);\n      });\n\n      if (!isCancelled) {\n        setIsLoading(false);\n        setEntriesToDisplay(displayEntries);\n      }\n    };\n    updateBoardStats();\n    const id = setInterval(updateBoardStats, 3000);\n\n    return () => {\n      clearInterval(id);\n      isCancelled = true;\n    };\n  }, [selectedExpiryIdx, quoteAsset]);\n\n  // when selection change: update selected order to the first option of the expiry\n  const onExpiryChange = (idx) => {\n    setExpiryIdx(idx);\n    for (const { call, put } of optionsByDate[idx].pairs) {\n      if (call !== undefined) {\n        setBaseAsset(call);\n        return;\n      } if (put !== undefined) {\n        setBaseAsset(put);\n        return;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        {' '}\n        <Header primary=\"Option Trading\" />\n        {' '}\n        <div style={{ paddingTop: '24px' }}>\n          <Tag> beta </Tag>\n        </div>\n        <div style={{ paddingTop: '28px', paddingLeft: '36px' }}>\n          <DropDown\n            items={optionsByDate.map((item) => item.expiryText)}\n            selected={selectedExpiryIdx}\n            onChange={onExpiryChange}\n          />\n        </div>\n      </div>\n\n      {/* <div style={{ display: 'flex' }}> */}\n\n      {/* </div> */}\n      <div style={{ display: 'flex', padding: '0px' }}>\n        <SectionTitle title=\"Calls\" />\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 0,\n          }}\n        >\n          <SectionTitle title=\"Puts\" />\n        </div>\n      </div>\n      {/* Calls */}\n      <DataView\n        mode=\"table\"\n        status={isLoading ? 'loading' : 'default'}\n        fields={[\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'strike', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'last' },\n\n        ]}\n        entries={entriesToDisplay}\n        renderEntry={({\n          call,\n          put,\n          putDetail,\n          callDetail,\n          strikePrice,\n        }) => {\n          const lastCallPrice = '-';\n          let callAsk = '-';\n          let callBid = '-';\n          let callBidAmt = '-';\n          let callAskAmt = '-';\n          let callOnclick = () => { };\n          let callBidOnclick = () => { };\n          let callAskOnclick = () => { };\n\n          const lastPutPrice = '-';\n          let putAsk = '-';\n          let putBid = '-';\n          let putBidAmt = '-';\n          let putAskAmt = '-';\n          let putOnclick = () => { };\n          let putBidOnclick = () => { };\n          let putAskOnclick = () => { };\n\n          if (callDetail !== undefined) {\n            // have call option has this strike price\n            callAsk = callDetail.bestAskPrice.toFixed(4);\n            callBid = callDetail.bestBidPrice.toFixed(4);\n            callAskAmt = callDetail.totalAskAmt.toFixed(2);\n            callBidAmt = callDetail.totalBidAmt.toFixed(2);\n            callOnclick = () => { setBaseAsset(call); };\n\n            callBidOnclick = () => {\n              setTradeType('sell');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestBid ? [callDetail.bestBid] : []);\n            };\n            callAskOnclick = () => {\n              setTradeType('buy');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestAsk ? [callDetail.bestAsk] : []);\n            };\n          }\n          if (putDetail !== undefined) {\n            // has put option has this strike price\n            putAsk = putDetail.bestAskPrice.toFixed(4);\n            putBid = putDetail.bestBidPrice.toFixed(4);\n            putAskAmt = putDetail.totalAskAmt.toFixed(2);\n            putBidAmt = putDetail.totalBidAmt.toFixed(2);\n\n            putOnclick = () => { setBaseAsset(put); };\n\n            putBidOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('sell');\n              setSelectedOrders(putDetail.bestBid ? [putDetail.bestBid] : []);\n            };\n            putAskOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('buy');\n              setSelectedOrders(putDetail.bestAsk ? [putDetail.bestAsk] : []);\n            };\n          }\n\n          return [\n            <Cell onClick={callOnclick} text={lastCallPrice} type=\"normal\" />,\n            <Cell onClick={callBidOnclick} text={callBid} type=\"bid\" />,\n            <Cell onClick={callBidOnclick} text={callBidAmt} type=\"normal\" />,\n\n            <Cell onClick={callAskOnclick} text={callAsk} type=\"ask\" />,\n            <Cell onClick={callAskOnclick} text={callAskAmt} type=\"normal\" />,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!call}\n                onChange={() => setBaseAsset(call)}\n                checked={call && call.addr === baseAsset.addr}\n              />\n            </div>,\n            <div style={{ fontSize: 20, width: '50px', padding: '10px' }}>{strikePrice}</div>,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!put}\n                onChange={() => (setBaseAsset(put))}\n                checked={put && put.addr === baseAsset.addr}\n              />\n            </div>,\n            <Cell onClick={putOnclick} text={lastPutPrice} type=\"normal\" />,\n            <Cell onClick={putBidOnclick} text={putBid} type=\"bid\" />,\n            <Cell onClick={putBidOnclick} text={putBidAmt} type=\"normal\" />,\n            <Cell onClick={putAskOnclick} text={putAsk} type=\"ask\" />,\n            <Cell onClick={putBidOnclick} text={putAskAmt} type=\"normal\" />,\n\n          ];\n        }}\n      />\n    </div>\n  );\n}\n\n\n\nexport default OptionBoard;\n\n/**\n *\n */\nfunction groupByDate(puts: types.ETHOption[], calls: types.ETHOption[]): entriesForExpiry[] {\n  const result: entriesForExpiry[] = [];\n  const allOptions = puts.concat(calls).filter((option) => option.expiry > Date.now() / 1000);\n  const distinctExpirys = [...new Set(allOptions.map((option) => option.expiry))];\n\n  for (const expiry of distinctExpirys) {\n    const optionsExpiresThisDay = allOptions.filter((o) => o.expiry === expiry);\n    const strikePrices = [\n      ...new Set(optionsExpiresThisDay.map((option) => option.strikePriceInUSD)),\n    ];\n\n    // const allStrikesForThisDay = {};\n    const pairs: strikePricePair[] = [];\n    for (const strikePrice of strikePrices) {\n      const put = puts.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      const call = calls.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      pairs.push({\n        strikePrice,\n        call,\n        put,\n      });\n    }\n    pairs.sort((a, b) => (a.strikePrice > b.strikePrice ? 1 : -1));\n    const expiryText = new Date(expiry * 1000).toDateString();\n    result.push({\n      expiry,\n      expiryText,\n      pairs,\n    });\n  }\n  return result;\n}\n\ntype CellProps = {\n  onClick: Function,\n  text: string,\n  type: 'bid' | 'ask' | 'normal'\n}\n\nfunction Cell({\n  onClick, text, type,\n}:CellProps) {\n  return (\n    <LinkBase onClick={onClick}>\n      <div style={{ width: '60px', textAlign: 'center' }}>\n        {type === 'bid' ? (\n          <BidText>\n            {' '}\n            {text}\n            {' '}\n          </BidText>\n        ) : type === 'ask' ? (\n          <AskText>\n            {' '}\n            {text}\n            {' '}\n          </AskText>\n        ) : (\n              <div>\n                {' '}\n                {text}\n                {' '}\n              </div>\n            )}\n      </div>\n    </LinkBase>\n  );\n}\n\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\n\nimport {\n  DataView, Timer, Button,\n} from '@aragon/ui';\n\nimport { cancelOrders } from '../../utils/web3';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\ntype MyOrdersProps = {\n  asks: types.order[],\n  bids: types.order[],\n  user: string,\n  option: types.option,\n  quoteAsset: types.token,\n};\n\nfunction MyOrders({\n  asks, bids, option, user, quoteAsset,\n}: MyOrdersProps) {\n  const [myOrdersPage, setMyOrdersPage] = useState(0);\n  const [selectedOrders, setSelectedOrders] = useState<types.order[]>([]);\n  const userAsks = asks\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      // return { ...o, type: 'Ask' }\n      o.type = 'Ask';\n      return o;\n    });\n  const userBids = bids\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      // return { ...o, type: 'Bid' }\n      o.type = 'Bid';\n      return o;\n    });\n\n  return (\n    <>\n      <DataView\n        entriesPerPage={4}\n        statusEmpty={(\n          <div>\n            No Open Orders for\n            {' '}\n            {option.title}\n          </div>\n)}\n        page={myOrdersPage}\n        onPageChange={setMyOrdersPage}\n        onSelectEntries={setSelectedOrders}\n        fields={['digest', 'type', 'price', 'amount', 'filled', 'expiration', '']}\n        entries={userAsks.concat(userBids)\n          .sort((a, b) => (a.order.expirationTimeSeconds > b.order.expirationTimeSeconds ? 1 : -1))}\n        renderEntry={function(order: types.order) {\n          return [\n            order.metaData.orderHash.slice(2, 8),\n            order.type === 'Ask' ? <AskText>{order.type}</AskText> : <BidText>{order.type}</BidText>,\n            order.type === 'Ask'\n              ? zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(6)\n              : zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(6),\n            order.type === 'Ask'\n              ? toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(3)\n              : toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(3),\n            `${zeroXUtil.getOrderFillRatio(order)}%`,\n            <Timer end={new Date(parseInt(order.order.expirationTimeSeconds) * 1000)} />,\n  \n            selectedOrders.length > 0\n              ? (\n                <Button onClick={() => {\n                  cancelOrders(selectedOrders.map((o) => o.order));\n                }}\n                >\n                  Cancel Selected\n                </Button>\n              )\n              : (\n                <Button onClick={() => {\n                  cancelOrders([order.order]);\n                }}\n                >\n                  Cancel Order\n                </Button>\n              ),\n          ]\n        }\n          \n          }\n      />\n    </>\n  );\n}\n\nexport default MyOrders;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\n\nimport { DataView, Timer } from '@aragon/ui';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\ntype OrderbookProps = {\n  asks: types.order[],\n  bids: types.order[],\n  option: types.option,\n  quoteAsset: types.token,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[],\n  setTradeType: Function,\n  setSelectedOrders: Function,\n};\n\nfunction OrderBook({\n  asks, bids, option, quoteAsset, setTradeType, setSelectedOrders, selectedOrders, tradeType,\n}:OrderbookProps) {\n  const [askPage, setAskPage] = useState(0);\n  const [bidPage, setBidPage] = useState(0);\n\n  const [askSelectedIndexs, setAskSelectedIndexes] = useState<number[]>([]);\n  const [bidSelectedIndexs, setBidSelectedIndexes] = useState<number[]>([]);\n\n  const onSelectAskEntry = (entries, indexes) => {\n    setTradeType('buy'); // Filling ask orders is a bid\n    setSelectedOrders(entries);\n    setAskSelectedIndexes(indexes);\n  };\n\n  const onSelectBidEntry = (entries, indexes) => {\n    setTradeType('sell'); // Filling bid orders is a ask\n    setSelectedOrders(entries);\n    setBidSelectedIndexes(indexes);\n  };\n\n  // everytime tradeType or selectedOrders changed, the selection is updated\n  useEffect(() => {\n    if (tradeType === 'buy') { // user select and ask order\n      setBidSelectedIndexes([]); // reset bid selections\n      const selectedIdxs: number[] = [];\n      for (let i = 0; i < asks.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(asks[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setAskSelectedIndexes(selectedIdxs);\n    } else {\n      setAskSelectedIndexes([]);\n      const selectedIdxs: number[] = [];\n      for (let i = 0; i < bids.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(bids[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setBidSelectedIndexes(selectedIdxs);\n    }\n  }, [selectedOrders, tradeType, asks, bids]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Sell Orders</div>}\n            entriesPerPage={4}\n            page={askPage}\n            onPageChange={setAskPage}\n            entries={asks}\n            onSelectEntries={onSelectAskEntry}\n            // If other operation reset selected orders, should change selected accordingly\n            selection={askSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <AskText>{zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(4)}</AskText>,\n              toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Buy Orders</div>}\n            entriesPerPage={4}\n            page={bidPage}\n            onPageChange={setBidPage}\n            entries={bids}\n            onSelectEntries={onSelectBidEntry}\n            selection={bidSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <BidText>{zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(4)}</BidText>,\n              toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n      </div>\n\n\n    </>\n  );\n}\n\nexport default OrderBook;\n","import React, { useState } from 'react';\nimport { Tabs } from '@aragon/ui';\n\nimport MyOrders from './MyOrders';\nimport OrderBook from './OrderBook';\n\nimport * as types from '../../types';\n\ntype TabBoardProps = {\n  asks: types.order[],\n  bids: types.order[],\n  option: types.option,\n  user: string,\n  quoteAsset: types.token,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[],\n  setTradeType: Function,\n  setSelectedOrders: Function\n}\n\nfunction Orders({\n  asks, bids, option, user, quoteAsset,\n  tradeType,\n  selectedOrders,\n  setTradeType,\n  setSelectedOrders,\n}: TabBoardProps) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <Tabs\n        items={['OrderBook', 'My Orders']}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      { selectedTab === 0\n        ? (\n          <OrderBook\n            asks={asks}\n            bids={bids}\n            option={option}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        )\n        : (\n          <MyOrders asks={asks} bids={bids} option={option} user={user} quoteAsset={quoteAsset} />\n        )}\n\n    </>\n  );\n}\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js';\n\n\nimport {\n  SidePanel, Button, TextInput, useTheme,\n} from '@aragon/ui';\nimport { BalanceBlock, SectionTitle, Comment } from '../common/index';\n\nimport { wrapETH, unwrapETH } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { getBalance } from '../../utils/infura';\n\n\n\ntype WrapETHModalProps = {\n  user: string,\n  helperText: string,\n  setHelperText: Function,\n  wethBalance: BigNumber,\n  opened: boolean,\n  setOpen: Function,\n};\n\nfunction WrapETHModal({\n  user, wethBalance, opened, setOpen, helperText, setHelperText,\n}: WrapETHModalProps) {\n  const theme = useTheme();\n  const [wrapAmount, setWrapAmount] = useState(new BigNumber(0));\n  const [unWrapAmount, setUnwrapAmount] = useState(new BigNumber(0));\n\n  const [ethBalance, setETHBalance] = useState(new BigNumber(0));\n\n  const onChangeWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setWrapAmount(new BigNumber(0));\n      return;\n    }\n    setWrapAmount(new BigNumber(amount));\n  };\n\n  const onChangeUnWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setUnwrapAmount(new BigNumber(0));\n      return;\n    }\n    setUnwrapAmount(new BigNumber(amount));\n  };\n\n  useEffect(() => {\n    if (!opened || !user) return;\n    let isCancelled = false;\n\n    const updateETHBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getBalance(user);\n      if (!isCancelled) {\n        setETHBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateETHBalance();\n    const idETHBalance = setInterval(updateETHBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idETHBalance);\n    };\n  }, [opened, user]);\n\n  return (\n    <SidePanel\n      title=\"\"\n      opened={opened}\n      onClose={() => {\n        setOpen(false);\n        setHelperText('');\n      }}\n    >\n      <br />\n\n      <div style={{ color: theme.warning }}>\n        {helperText}\n      </div>\n\n      <SectionTitle title=\"Wrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your ETH Balance\" balance={ethBalance.toNumber()} />\n      </div>\n\n      {/* </div> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={wrapAmount.toNumber()} onChange={onChangeWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              wrapETH(toBaseUnitBN(wrapAmount, 18).toString());\n            }}\n            label=\"Wrap\"\n          />\n        </div>\n      </div>\n\n      <Comment text=\"After you wrap your ETH to WETH, you can unwrap them back to ETH anytime.\" />\n      <br />\n      <SectionTitle title=\"Unwrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your WETH Balance\" balance={toTokenUnitsBN(wethBalance, 18).toNumber()} />\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={unWrapAmount.toNumber()} onChange={onChangeUnWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              unwrapETH(toBaseUnitBN(unWrapAmount, 18).toString());\n            }}\n            label=\"Unwrap\"\n          />\n        </div>\n      </div>\n    </SidePanel>\n  );\n}\n\nexport default WrapETHModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, useTheme, TextInput, Help, useToast, LinkBase,\n} from '@aragon/ui';\n\nimport { BuyAndSellBlock, Wrapper, BottomTextWrapper, BottomText, Header,\n  BuySellTopPart,\n  FlexWrapper,\n  BuySellTopPartText,\n  Flex,\n  TabWrapper,\n  Tab,\n  BuySellLowerPart,\n  Label,\n  GroupButtonWrapper,\n  GroupButton, } from './styled'\n\nimport BigNumber from 'bignumber.js';\nimport { WarningText } from '../common/index';\nimport {\n  createOrder, broadcastOrders, getOrdersTotalFillables, getGasPrice, getFillAmountsOfOrders,\n} from '../../utils/0x';\nimport { signOrder, fillOrders, approve } from '../../utils/web3';\nimport { toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport WrapETHPanel from './WrapETHSidePanel';\n\nimport { getAllowance } from '../../utils/infura';\nimport { ZeroX_ERC20Proxy } from '../../constants/contracts';\n\nimport { WETH } from '../../constants/tokens';\n\nimport * as types from '../../types'\n\ntype BuyAndSellProps = {\n  user:string,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[], //\n  setSelectedOrders: Function,\n  setTradeType: Function,\n  baseAsset: types.ETHOption,\n  quoteAsset: types.token,\n  baseAssetBalance: BigNumber,\n  quoteAssetBalance: BigNumber,\n}\n\nfunction BuyAndSell({\n  user,\n  tradeType, // ask || bid\n  selectedOrders, //\n  setTradeType,\n  setSelectedOrders,\n\n  // vault,\n  baseAsset,\n  quoteAsset,\n  // collateral,\n\n  // ethBalance, // in ETH (0.5)\n  baseAssetBalance, // in base uinit\n  quoteAssetBalance, // in base Unit\n}: BuyAndSellProps) {\n  const theme = useTheme();\n  const toast = useToast();\n\n  const [quoteAssetAmount, setQuoteAssetAmount] = useState(new BigNumber(0));\n  const [fillingtakerAmounts, setFillingTakerAmounts] = useState<string[]>([]);\n\n  // these two add up to total oToken displayed on the Amount section\n  const [baseAmountToFill, setBaseAmountToFill] = useState(new BigNumber(0));\n  const [baseAmountToCreate, setBaseAmountToCreate] = useState(new BigNumber(0));\n\n  const [rate, setRate] = useState(new BigNumber(0));\n\n  // gasPrice is needed to calculate 0x fee\n  const [fastGasPrice, setFastGasPrice] = useState(new BigNumber(5)); //  in GWei\n\n  // const quoteAssetAmount = price.times(baseAssetAmount);\n\n  const [selectedOrderFillables, setSelectedOrdersFillable] = useState({\n    totalFillableMakerAmount: new BigNumber(0),\n    totalFillableTakerAmount: new BigNumber(0),\n  });\n\n  const [isFillingAndCreating, setIsFillingAndCreating] = useState(false);\n\n  const hasSelectedOrders = selectedOrders.length > 0;\n  const feeInETH = hasSelectedOrders\n    ? fastGasPrice.times(new BigNumber(selectedOrders.length)).times(new BigNumber(0.00015))\n    : new BigNumber(0);\n\n  // for weth side panel\n  const [panelOpend, setPanelOpended] = useState(false);\n  const [wethPanelHelperText, setPanelHelperText] = useState('');\n\n  // expiry button\n  const [activeButton, setActiveButton] = useState(0);\n  const expirySeconds = activeButton === 0\n    ? 3600 : (activeButton === 1 ? 86400 : 604800);\n  const expiry = parseInt((Date.now() / 1000).toString(), 10) + expirySeconds;\n\n\n  // update gasPrice\n  useEffect(() => {\n    let isCanceled = false;\n    async function fetchGasPrice() {\n      const { fast } = await getGasPrice();\n      if (!isCanceled) setFastGasPrice(new BigNumber(fast).div(new BigNumber(10)));\n    }\n    fetchGasPrice();\n    const id = setInterval(fetchGasPrice, 10000);\n\n    return () => {\n      isCanceled = true;\n      clearInterval(id);\n    };\n  }, []);\n\n  // when selected orders changed\n  useEffect(() => {\n    // This update only take effect when user has selected orders\n    if (selectedOrders.length === 0) {\n      setBaseAmountToFill(new BigNumber(0));\n      return;\n    }\n    setIsFillingAndCreating(false);\n\n    const selectedFillables = getOrdersTotalFillables(selectedOrders);\n    setFillingTakerAmounts(selectedFillables.fillableTakerAmounts);\n\n    let baseMaxFillingAmount = new BigNumber(0);\n    let quoteMaxFillingAmount = new BigNumber(0);\n    // Step 1. set oToken and WETH amount to order total\n    if (tradeType === 'buy') {\n      // ask: takerAsset: weth, makerAsset: oToken\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, quoteAsset.decimals);\n    } else {\n      // comming bids: takerAsset: oToken, makerAsset: weth\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, quoteAsset.decimals);\n    }\n    setBaseAmountToFill(baseMaxFillingAmount);\n    setBaseAmountToCreate(new BigNumber(0));\n    // setBaseAssetAmount(baseMaxFillingAmount);\n    setQuoteAssetAmount(quoteMaxFillingAmount);\n    setSelectedOrdersFillable(selectedFillables);\n\n    // Change Price according to total base / quote\n    const aggregateRate = quoteMaxFillingAmount.div(baseMaxFillingAmount);\n    setRate(aggregateRate);\n  }, [selectedOrders, baseAsset, tradeType, quoteAsset]);\n\n\n  const onChangeBaseAmount = (amount) => {\n    // 1. Update amount field\n    if (!amount) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(amount);\n    if (amountBN.lte(0)) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n\n    // If is filling Mode\n    if (hasSelectedOrders) {\n      const totalOtokenInSelectedOrders = tradeType === 'buy'\n        ? toTokenUnitsBN(selectedOrderFillables.totalFillableMakerAmount, baseAsset.decimals) // oToken is the maker asset of ask orders\n        : toTokenUnitsBN(selectedOrderFillables.totalFillableTakerAmount, baseAsset.decimals);\n\n      // user is filling lower than all orders combined\n      if (totalOtokenInSelectedOrders.gte(amountBN)) {\n        // [FILLING MODE]\n        console.log('FILLING MODE');\n        setIsFillingAndCreating(false);\n        setBaseAmountToFill(amountBN);\n        setBaseAmountToCreate(new BigNumber(0));\n\n        // Update Rates\n        const baseAmountTotal = toBaseUnitBN(amountBN, baseAsset.decimals);\n\n        let quoteAmountTotal;\n        if (tradeType === 'buy') {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, undefined, baseAmountTotal);\n          quoteAmountTotal = fillingAmounts.sumTakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray);\n        } else {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, baseAmountTotal, undefined);\n          quoteAmountTotal = fillingAmounts.sumMakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray); // only need to record taker amount array\n        }\n\n        const quoteAmountTk = toTokenUnitsBN(quoteAmountTotal, quoteAsset.decimals);\n        setRate(quoteAmountTk.div(amountBN));\n        setQuoteAssetAmount(quoteAmountTk);\n      } else {\n        // [CREATING AND FILLING MODE]\n        console.log('CREATING + FILLING');\n        setIsFillingAndCreating(true);\n\n        setBaseAmountToFill(totalOtokenInSelectedOrders);\n        setBaseAmountToCreate(amountBN.minus(totalOtokenInSelectedOrders));\n\n        // Fix rate at current, dont have to change.\n        const quoteAmount = rate.times(amountBN);\n        setQuoteAssetAmount(quoteAmount);\n      }\n    } else {\n      // [CREATING MODE]\n      console.log('CREATING');\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(amountBN);\n\n      // create mode wont change rate when put in amount\n      const quoteAmount = rate.times(amountBN);\n      setQuoteAssetAmount(quoteAmount);\n    }\n  };\n\n  const onChangeRate = (newrate) => {\n    if (!newrate) {\n      setRate(new BigNumber(0));\n      return;\n    }\n    const rateBN = new BigNumber(new BigNumber(newrate).toFixed(4));\n    setRate(rateBN);\n\n    // adjusting rate will not be filling orders anymore\n    if (hasSelectedOrders) {\n      setSelectedOrders([]);\n    }\n\n    // enter create mode.\n    const quoteAmount = rateBN.times((baseAmountToCreate));\n    setQuoteAssetAmount(quoteAmount);\n  };\n\n  const checkAndAllowQuoteAsset = async (quoteAssetAmountInBase) => {\n    const quoteAllowance = new BigNumber(await getAllowance(quoteAsset.addr, user, ZeroX_ERC20Proxy));\n    if (quoteAllowance.lt(quoteAssetAmountInBase)) {\n      toast(`Please approve 0x to spend your oToken ${quoteAsset.symbol}`);\n      await approve(quoteAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const checkQuoteAssetBalance = (quoteAssetAmountInBase) => {\n    if (quoteAssetAmountInBase.gt(quoteAssetBalance)) {\n      if (quoteAsset.addr === WETH.addr) {\n        setPanelHelperText('You dont have enough WETH to make this order, you may need to wrap some ETH into WETH.');\n        setPanelOpended(true);\n        return false;\n      }\n      toast(`Insufficient ${quoteAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkBaseAssetBalance = (baseAssetAmountInBase: BigNumber) => {\n    if (baseAssetAmountInBase.gt(baseAssetBalance)) {\n      toast(`Insufficient ${baseAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkAndAllowBaseAsset = async (baseAssetAmountBase: BigNumber) => {\n    const tokenAllowance = new BigNumber(await getAllowance(baseAsset.addr, user, ZeroX_ERC20Proxy));\n    if (tokenAllowance.lt(baseAssetAmountBase)) {\n      toast(`Please approve 0x to spend your oToken ${baseAsset.symbol}`);\n      await approve(baseAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const clickCreateOrder = async () => {\n    if (user === '') {\n      toast('Please connect wallet first');\n      return;\n    }\n    let order;\n    if (tradeType === 'buy') {\n      const quoteAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals);\n\n      // check quote asset balance\n      if (!checkQuoteAssetBalance(quoteAssetInBaseUnit)) return;\n\n      // check quote asset allowance\n      await checkAndAllowQuoteAsset(quoteAssetInBaseUnit);\n\n      // create order\n      order = createOrder(\n        user,\n        quoteAsset.addr,\n        baseAsset.addr,\n        quoteAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate, baseAsset.decimals),\n        expiry,\n      );\n    } else {\n      const baseAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate, baseAsset.decimals);\n\n      if (!checkBaseAssetBalance(baseAssetInBaseUnit)) return;\n\n      await checkAndAllowBaseAsset(baseAssetInBaseUnit);\n\n      order = createOrder(\n        user,\n        baseAsset.addr,\n        quoteAsset.addr,\n        baseAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals),\n        expiry,\n      );\n    }\n    const signedOrder = await signOrder(order);\n    try {\n      await broadcastOrders([signedOrder]);\n    } catch (error) {\n      toast(error);\n    }\n  };\n\n  const clickFillOrders = async () => {\n    const takerAmountBase = fillingtakerAmounts.reduce((prev, cur) => prev.plus(new BigNumber(cur)), new BigNumber(0));\n    if (tradeType === 'buy') {\n      if (!checkQuoteAssetBalance(takerAmountBase)) return;\n      await checkAndAllowQuoteAsset(takerAmountBase);\n    } else {\n      if (!checkBaseAssetBalance(takerAmountBase)) return;\n      await checkAndAllowBaseAsset(takerAmountBase);\n    }\n    await fillOrders(\n      selectedOrders.map((o) => o.order),\n      fillingtakerAmounts,\n      selectedOrders.map((o) => o.order.signature),\n      toBaseUnitBN(feeInETH, 18).toString(),\n      fastGasPrice.toString(),\n    );\n  };\n\n  const clickFillAndCreate = async () => {\n    await clickCreateOrder();\n    await clickFillOrders();\n  };\n\n  return (\n    <>\n      <BuyAndSellBlock theme={theme}>\n        <Header theme={theme}>\n          <Wrapper>Balance</Wrapper>\n        </Header>\n        <Wrapper>\n          <BuySellTopPart theme={theme}>\n            <FlexWrapper>\n              <div>{baseAsset.symbol}</div>\n              <BuySellTopPartText>{toTokenUnitsBN(baseAssetBalance, baseAsset.decimals).toFormat(4)}</BuySellTopPartText>\n            </FlexWrapper>\n            <FlexWrapper>\n              <div>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>\n                    <LinkBase onClick={() => setPanelOpended(true)}>\n                      {quoteAsset.symbol}\n                    </LinkBase>\n                  </p>\n                  { quoteAsset.symbol === WETH.addr ? (\n                    <Help hint=\"What is WETH?\">\n                      WETH is Wraped ETH, the erc20 version of ETH. You must have WETH to create and fill orders on 0x.\n                      {' '}\n                      <LinkBase onClick={() => setPanelOpended(true)}>Click here to wrap your ETH now!</LinkBase>\n                    </Help>\n                  ) : <></> }\n                </Flex>\n              </div>\n              <BuySellTopPartText>{toTokenUnitsBN(quoteAssetBalance, quoteAsset.decimals).toFormat(4)}</BuySellTopPartText>\n            </FlexWrapper>\n          </BuySellTopPart>\n        </Wrapper>\n        <Wrapper>\n          <TabWrapper theme={theme}>\n            <Tab\n              active={tradeType === 'buy'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('buy');\n              }}\n              theme={theme}\n            >\n              Buy\n            </Tab>\n            <Tab\n              active={tradeType === 'sell'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('sell');\n              }}\n              theme={theme}\n            >\n              Sell\n            </Tab>\n          </TabWrapper>\n          <BuySellLowerPart>\n            <Label>Amount</Label>\n            { baseAsset.symbol.toLowerCase().includes('call')\n              ? <WarningText text={`Buy ${baseAsset.strikePriceInUSD} ${baseAsset.symbol} to hedge 1 ETH.`} />\n              : <></> }\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeBaseAmount(e.target.value)}\n              value={baseAmountToCreate.plus(baseAmountToFill).toNumber()}\n              adornmentPosition=\"end\"\n              adornment={baseAsset.symbol}\n            />\n\n            <Label>Price Per Token</Label>\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeRate(e.target.value)}\n              value={rate.toNumber()}\n              adornmentPosition=\"end\"\n              adornment={quoteAsset.symbol}\n            />\n\n            <Label>Expires After</Label>\n            <GroupButtonWrapper>\n              {['1 Hour', '1 Day', '1 Week'].map((x, i) => (\n                <GroupButton\n                  disabled={hasSelectedOrders && !isFillingAndCreating}\n                  theme={theme}\n                  onClick={() => setActiveButton(i)}\n                  key={x}\n                  index={i}\n                  isActive={activeButton === i}\n                >\n                  {x}\n                </GroupButton>\n              ))}\n            </GroupButtonWrapper>\n\n            <BottomTextWrapper>\n              <BottomText>{tradeType === 'buy' ? 'Cost' : 'Premium'}</BottomText>\n              <BottomText>{`${quoteAssetAmount.toFixed(4)} ${quoteAsset.symbol}`}</BottomText>\n            </BottomTextWrapper>\n            <BottomTextWrapper>\n              <BottomText>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>Fee</p>\n                  <Help hint=\"Why am I paying?\">\n                    This is the protocol fee charged by 0x.\n                    In addition to this, you still need to pay for gas if you are taking orders.\n                  </Help>\n                </Flex>\n              </BottomText>\n              <BottomText>{`${feeInETH} ETH` }</BottomText>\n            </BottomTextWrapper>\n          </BuySellLowerPart>\n        </Wrapper>\n        <Flex>\n          { hasSelectedOrders // is filling orders\n            ? isFillingAndCreating\n              ? (\n                <Button\n                  onClick={clickFillAndCreate}\n                  label=\"Create And Fill\"\n                  wide\n                />\n              )\n              : (\n                <Button\n                  onClick={clickFillOrders}\n                  label=\"Fill Orders\"\n                  wide\n                />\n              )\n            : (\n              <Button\n                onClick={clickCreateOrder}\n                label={tradeType === 'buy' ? 'Create Buy Order' : 'Create Sell Order'}\n                wide\n              />\n            )}\n\n        </Flex>\n      </BuyAndSellBlock>\n      <WrapETHPanel\n        user={user}\n        opened={panelOpend}\n        setOpen={setPanelOpended}\n        wethBalance={quoteAssetBalance}\n        helperText={wethPanelHelperText}\n        setHelperText={setPanelHelperText}\n      />\n    </>\n  );\n}\n\nexport default BuyAndSell;\n\n\n","import React, { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\n\nimport { Header } from '@aragon/ui';\nimport OptionBoard from './OptionBoard';\nimport TabBoard from './TabBoard';\nimport BuyAndSell from './BuyAndSell';\n\nimport { getTokenBalance } from '../../utils/infura';\nimport { getOrderBook, isValid } from '../../utils/0x';\n// import { getVault } from '../../utils/graph';\nimport { eth_puts, eth_calls } from '../../constants/options';\nimport * as types from '../../types'\nimport * as tokens from '../../constants/tokens';\n\nimport tracker from '../../utils/tracker';\n\nconst quoteAsset = tokens.USDC;\n\nfunction OptionTrading({ user }: { user: string }) {\n  const [baseAsset, setBaseAsset] = useState<types.ETHOption | undefined>(\n    eth_puts.concat(eth_calls).find((o) => o.expiry > Date.now() / 1000),\n  );\n\n  useEffect(() => {\n    tracker.pageview('/trade/');\n  }, []);\n\n  const [asks, setAsks] = useState<types.order[]>([]);\n  const [bids, setBids] = useState<types.order[]>([]);\n\n  const [tradeType, setTradeType] = useState<types.tradeType>('buy');\n  const [selectedOrders, setSelectedOrders] = useState([]);\n\n  // user balance\n  // const [userETHBalance, setUserETHBalance] = useState(BigNumber(0)); // in eth\n  const [baseAssetBalance, setBaseAssetBalance] = useState(new BigNumber(0));\n  const [quoteAssetBalance, setQuoteAssetBalance] = useState(new BigNumber(0));\n\n  // const [vault, setVault] = useState({});\n\n\n  // BaseAsset changeed: Update orderbook and base asset\n  useEffect(() => {\n    let isCancelled = false;\n\n    // update orderbook\n    const updateOrderBook = async () => {\n      const res = await getOrderBook(baseAsset!.addr, quoteAsset.addr);\n      if (!isCancelled) {\n        setAsks(res.asks.records.filter((record) => isValid(record)));\n        setBids(res.bids.records.filter((record) => isValid(record)));\n      }\n    };\n\n    // update baseAsset Balance\n    const updateBaseBalance = async () => {\n      const baseBalance = await getTokenBalance(baseAsset!.addr, user);\n      if (!isCancelled) {\n        setBaseAssetBalance(new BigNumber(baseBalance));\n      }\n    };\n\n    // const updateVaultData = async () => {\n    //   if (user === '') return;\n    //   const userVault = await getVault(user, baseAsset.addr);\n    //   if (!isCancelled) setVault(userVault);\n    // };\n    updateOrderBook();\n    updateBaseBalance();\n    // updateVaultData();\n    const idOrderBook = setInterval(updateOrderBook, 2000);\n    const idBaseBalance = setInterval(updateBaseBalance, 30000);\n    // const idUpdateVault = setInterval(updateVaultData, 10000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idOrderBook);\n      clearInterval(idBaseBalance);\n      // clearInterval(idUpdateVault);\n    };\n  }, [baseAsset, user]);\n\n  // update quote asset\n  useEffect(() => {\n    let isCancelled = false;\n    const updateQuoteBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getTokenBalance(quoteAsset.addr, user);\n      if (!isCancelled) {\n        setQuoteAssetBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateQuoteBalance();\n    const idQuoteAssetBalance = setInterval(updateQuoteBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idQuoteAssetBalance);\n    };\n  }, [user]);\n\n  return (\n    <WholeScreen>\n      <FlexWrapper>\n        <LeftPart>\n          <Header />\n          <br />\n          <br />\n          <BuyAndSell\n            user={user}\n            baseAsset={baseAsset!}\n            quoteAsset={quoteAsset}\n\n            baseAssetBalance={baseAssetBalance}\n            quoteAssetBalance={quoteAssetBalance}\n\n            // collateral={baseAsset!.collateral}\n            // vault={vault}\n\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        </LeftPart>\n        <RightPart>\n          {/* <Header primary=\"Trade ETH Options\" /> */}\n          <OptionBoard\n            quoteAsset={quoteAsset}\n            baseAsset={baseAsset!}\n            setBaseAsset={setBaseAsset}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          <br />\n          {/* <FixBottom> */}\n          <TabBoard\n            asks={asks}\n            bids={bids}\n            user={user}\n            option={baseAsset!}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            selectedOrders={selectedOrders}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          {/* </FixBottom> */}\n        </RightPart>\n      </FlexWrapper>\n    </WholeScreen>\n  );\n}\n\n\nconst LeftPart = styled.div`\n  width: 20%;\n  padding-right: 1.5%;\n`;\n\nconst RightPart = styled.div`\n  width: 80%;\n`;\n\nconst WholeScreen = styled.div`\n  textAlign: center;\n  padding-left: 5%;\n  padding-right: 5%;\n  position:fixed;\n  overflow-y:scroll;\n  overflow-x:hidden;\n  left: 0;\n  bottom: 0;\n  top: 6%;\n  width: 100%;\n  overflow: auto\n`;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  height:87%\n`;\n\nexport default OptionTrading;\n","import React, { useState } from 'react';\nimport {\n  TextInput, DataView, Button, LinkBase, EthIdenticon, useToast,\n} from '@aragon/ui';\nimport { getPreference, checkAddressAndAddToStorage } from '../../utils/storage';\n\nimport { Comment } from '../common/';\nimport { isAddress } from '../../utils/number';\nimport { resolveENS } from '../../utils/infura';\n\nfunction PleaseLogin({ setWatchAddress }: { setWatchAddress: Function }) {\n  const toast = useToast();\n  const [InAddress, setAddress] = useState('');\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n\n  return (\n    <>\n      {/* <Header></Header> */}\n      <Comment text=\"Please connect wallet to proceed or enter an address to use Watch Mode.\" />\n      <br />\n      <br />\n      <p style={{ fontSize: 20 }}> Watch Mode </p>\n      <Comment text=\"You won't be able to interact with any smart contract under Watch Mode.\" />\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <TextInput\n            placeholder=\"Ethereum address or ENS\"\n            value={InAddress}\n            onChange={(e) => { setAddress(e.target.value.toLowerCase()); }}\n            wide\n          />\n\n          {usedAddresses.length > 0 ? (\n            <div style={{ paddingTop: '3%' }}>\n              <DataView\n                entries={usedAddresses.reverse()}\n                fields={['used']}\n                entriesPerPage={5}\n                renderEntry={(address: string) => [\n                  <LinkBase onClick={() => {\n                    setWatchAddress(address);\n                    checkAddressAndAddToStorage(address);\n                  }}\n                  >\n                    {/* <IdentityBadge entity={address} /> */}\n                    <EthIdenticon\n                      address={address}\n                      scale={1.3}\n                      radius={5}\n                    />\n                    <span style={{ paddingLeft: 8, fontSize: 15, fontFamily: 'aragon-ui-monospace' }}>{address}</span>\n                  </LinkBase>,\n                ]}\n              />\n            </div>\n          ) : <></>}\n        </div>\n        <div style={{ width: '8%', paddingLeft: '1%', paddingRight: '1%' }}>\n          <Button\n            label=\"Watch Address\"\n            onClick={async () => {\n              if (isAddress(InAddress)) {\n                setWatchAddress(InAddress);\n                checkAddressAndAddToStorage(InAddress);\n              } else {\n                try {\n                  const address = await resolveENS(InAddress);\n                  setWatchAddress(address);\n                  checkAddressAndAddToStorage(address);\n                } catch (error) {\n                  toast('Invalid Address');\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default PleaseLogin;\n","const opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * Get vaults for one option\n */\nexport async function getAllVaultsForOption(\n  optionAddress: string\n): Promise<\n  {\n    collateral: string;\n    oTokensIssued: string;\n    owner: string;\n  }[]\n> {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\n/**\n * Get all vaults for a user\n */\nexport async function getAllVaultsForUser(\n  owner: string\n): Promise<\n  {\n    optionsContract: {\n      address: string;\n    };\n    oTokensIssued: string;\n    collateral: string;\n    underlying: string;\n  }[]\n> {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n      underlying\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults\n}\n\n/**\n * Return target vault or null\n */\nexport async function getVault(\n  owner: string,\n  option: string\n): Promise<{ underlying: string; collateral: string; oTokensIssued: string, owner: string }> {\n  const query = `{\n    vault(\n     id: \"${option.toLowerCase()}-${owner.toLowerCase()}\"\n    ) {\n      owner\n      underlying\n      collateral\n      oTokensIssued\n    }\n  }`;\n  const response = await postQuery(query);\n  const vault = response.data.vault;\n  return vault\n  \n}\n\nexport async function getLiquidationHistory(\n  owner: string\n): Promise<\n  {\n    vault: {\n      owner: string;\n      optionsContract: {\n        address: string;\n      };\n    };\n    liquidator: string;\n    collateralToPay: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    liquidateActions(where: {\n      vault_contains: \"${owner}\"\n    }) {\n      vault {\n        owner,\n        optionsContract {\n          address\n        }\n      },\n      liquidator,\n      collateralToPay,\n      timestamp\n      transactionHash\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\n/**\n * Get all exercise history for one user\n */\nexport async function getExerciseHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amtCollateralToPay: string;\n    exerciser: string;\n    oTokensToExercise: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\n/**\n * get RemoveUnderlying Event history\n */\nexport async function getRemoveUnderlyingHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amount: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    removeUnderlyingActions(\n      where: {\n        vault_contains: \"${option}\"\n        owner: \"${owner}\"   \n      }\n    ) {\n      timestamp\n      transactionHash\n      amount\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.removeUnderlyingActions;\n}\n\nconst postQuery = async (query: string) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import BigNumber from 'bignumber.js';\nimport { getPrice } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number} collateralDecimals\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral:string,\n  strike:string,\n  oracle:string,\n  collateralDecimals: number,\n): Promise<BigNumber> => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral: BigNumber;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      collateralDecimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n * Calculate collateral ratio\n */\nexport const calculateRatio = (\n  collateral: string|number|BigNumber,\n  tokenIssued: string|number|BigNumber,\n  strikePrice: string|number|BigNumber,\n  strikeValueInCollateral: BigNumber): number => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  \n  const result = colalteralBN.div(tokenIssuedBN).div(strikePriceBN).div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo, useEffect, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Card,\n  TextInput,\n  useToast,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  SectionTitle, OpenVaultButton, Comment, HelperText, WarningText,\n} from '../common';\nimport * as types from '../../types';\n\nimport { openVaultAddCollateralAndMint } from '../../utils/web3';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { calculateStrikeValueInCollateral, calculateRatio } from '../../utils/calculation';\n\ntype openVaultModalProps = {\n  user: string,\n  option: types.option\n}\n\nfunction OpenVaultModal({ user, option }: openVaultModalProps) {\n  const toast = useToast();\n  const history = useHistory();\n\n  const [opened, setOpened] = useState(false);\n\n  // for Open vault, add collateral and mint tokens\n  const [collateralAmt, setCollateralAmt] = useState(new BigNumber(0));\n  const [mintTokenAmt, setMintTokenAmt] = useState(new BigNumber(0));\n\n  const [strikeValueInCollateral, setStrikeValueInCollateral] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(1);\n\n  useMemo(async () => {\n    if (!opened) return;\n    const strikeValueInColltrl = await calculateStrikeValueInCollateral(\n      option.collateral.addr,\n      option.strike.addr,\n      option.oracle,\n      option.collateral.decimals,\n    );\n    setStrikeValueInCollateral(strikeValueInColltrl);\n  },\n  [option, opened]);\n\n  //  when input changed\n  useEffect(() => {\n    // calculate new ratio\n    const newRatio = calculateRatio(\n      toBaseUnitBN(collateralAmt, option.collateral.decimals),\n      toBaseUnitBN(mintTokenAmt, option.decimals),\n      option.strikePrice,\n      strikeValueInCollateral,\n    );\n    setRatio(newRatio);\n  },\n  [collateralAmt, mintTokenAmt, strikeValueInCollateral, option]);\n\n  const onCollateralChange = (value) => {\n    if (!value) {\n      setCollateralAmt(new BigNumber(0));\n      return;\n    }\n    const amtBn = new BigNumber(value);\n    setCollateralAmt(amtBn);\n  };\n\n  const onMintTokenAmtChange = (value) => {\n    if (!value) {\n      setMintTokenAmt(new BigNumber(0));\n      return;\n    }\n    setMintTokenAmt(new BigNumber(value));\n  };\n\n  const mint = async () => {\n    if (ratio < option.minRatio) {\n      toast(`Collateral ratio must > ${option.minRatio}`);\n      return;\n    }\n    await openVaultAddCollateralAndMint(\n      option.addr,\n      option.collateral.addr,\n      toBaseUnitBN(collateralAmt, option.collateral.decimals).toString(),\n      toBaseUnitBN(mintTokenAmt, option.decimals).toString(),\n    );\n    history.push(`/manage/${option.addr}/${user}`);\n  };\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Open Vault\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Open Vault\" />\n        <Comment text=\"Select how you want to open a vault.\" />\n        {/* <div style={{ display: 'flex' }}> */}\n        {/* <div style={{ width: '30%' }}> */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Open Empty Vault\" />\n          <Comment text=\"You can add collateral and mint tokens later.\" />\n          <br />\n          <OpenVaultButton oToken={option.addr} user={user} goToMangePage />\n          <br />\n        </Card>\n        <br />\n\n        {/* Option C, Create, add and mint */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Add Collateral and Mint Tokens\" />\n          <Comment text=\"Open vault, add collateral and mint some options in one transaction.\" />\n          <div style={{ display: 'flex', paddingBottom: 15 }}>\n            <TextInput\n              type=\"number\"\n              value={collateralAmt.toNumber()}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => onCollateralChange(event.target.value)}\n              adornmentPosition=\"end\"\n              adornment={option.collateral.symbol}\n            />\n            <div style={{ paddingLeft: 15 }}>\n              <TextInput\n                type=\"number\"\n                value={mintTokenAmt.toNumber()}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => onMintTokenAmtChange(event.target.value)}\n                adornmentPosition=\"end\"\n                adornment={option.symbol}\n              />\n            </div>\n          </div>\n          { option.symbol.toLowerCase().includes('call')\n            ? <WarningText text={`1 ${option.collateral.symbol} can create ${(option as types.ETHOption).strikePriceInUSD} ${option.symbol}`} />\n            : <></>}\n          <Button label=\"Mint\" onClick={mint} />\n          { ratio === Infinity\n            ? <> </>\n            : <HelperText label=\"Collateral Ratio \" amt={ratio.toString()} />}\n\n          <br />\n        </Card>\n      </Modal>\n    </>\n  );\n}\n\nexport default OpenVaultModal;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  Header, DataView, IdentityBadge,\n} from '@aragon/ui';\nimport NoWalletView from './NoWallet';\nimport * as types from '../../types'\nimport { allOptions } from '../../constants/options';\nimport {\n  SectionTitle, ManageVaultButton, Comment, CheckBox,\n} from '../common/index';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPreference, storePreference } from '../../utils/storage';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport tracker from '../../utils/tracker';\nimport OpenVaultModal from './OpenVaultModal';\n\nconst Promise = require('bluebird');\n\nexport type vaultWithDetail = {\n  oToken:string,\n  collateral: string,\n  oTokenName:string\n  collateralDecimals: number\n  expiry:number\n  ratio: number\n}\n\nfunction MyVaults({ user }: {user: string}) {\n  useEffect(() => {\n    tracker.pageview('/myvaults/');\n  }, []);\n  const [opendVaults, setOpenedVaults] = useState<vaultWithDetail[]>([]);\n  const [tokensToOpen, setTokensToOpen] = useState<types.option[]>([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // enable not logged in user to use this feature\n  const [watchAddress, setWatchAddress] = useState('');\n  const isWatchMode = user === '' && watchAddress !== '';\n  const hasAddressConnected = user !== '' || watchAddress !== '';\n\n  // checkbox\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n  const [showEmpty, setShowEmpty] = useState(getPreference('showEmpty', '1') === '1');\n\n  const displayVaults = opendVaults\n    .filter((vault) => showExpired || vault.expiry * 1000 > Date.now())\n    .filter((vault) => showEmpty || new BigNumber(vault.collateral).gt(new BigNumber(0)));\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!hasAddressConnected) return;\n    const userVaults = await getAllVaultsForUser(isWatchMode ? watchAddress : user);\n    const openedVaults: vaultWithDetail[] = [];\n    const notOpenedTokens: types.option[] = [];\n    await Promise.map(allOptions, async (option: types.option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      \n      if (entry !== undefined) {\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral.addr,\n          option.strike.addr,\n          option.oracle,\n          option.collateral.decimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: option.collateral.decimals,\n          expiry: option.expiry,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        // only put non-expired token to \"can open\" list\n        notOpenedTokens.push(option);\n      }\n    });\n    setIsLoading(false);\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [user, watchAddress, hasAddressConnected, isWatchMode]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {hasAddressConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n\n              <div style={{ display: 'flex' }}>\n                <SectionTitle title=\"Existing Vaults\" />\n                <div style={{ marginLeft: 'auto' }}>\n                  <div style={{ display: 'flex' }}>\n                    <CheckBox\n                      text=\"Expired\"\n                      checked={showExpired}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showExpired', checked ? '1' : '0');\n                        setShowExpired(checked);\n                      }}\n                    />\n                    <CheckBox\n                      text=\"Empty\"\n                      checked={showEmpty}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showEmpty', checked ? '1' : '0');\n                        setShowEmpty(checked);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={displayVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio,\n                }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={isWatchMode ? watchAddress : user} />,\n                ]}\n              />\n            </div>\n          ) : isLoading ? (\n            <Comment text=\"Loading\" />\n          ) : (\n            <Comment text=\"No Opened Vaults\" />\n          )}\n          {tokensToOpen.length > 0 && !isWatchMode ? (\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                \n                renderEntry={(option: types.option) => {\n                  return [\n                    option.title,\n                    <IdentityBadge entity={option.addr} shorten={false} />,\n                    <OpenVaultModal user={user} option={option} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <NoWalletView\n          // watchAddress={watchAddress}\n          setWatchAddress={setWatchAddress}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useMemo } from 'react';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common/index';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as types from '../../types'\n\ntype ExerciseModalProps = {\n  option: types.option,\n  user: string,\n  vaults: types.vaultWithoutUnderlying[]\n}\n\nfunction ExerciseModal({\n  user,\n  vaults,\n  option\n}:ExerciseModalProps) {\n  \n  const underlyingIsETH = option.underlying.addr === ETH_ADDRESS;\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying.addr, user),\n        option.underlying.decimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(option.addr, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [option, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator:BigNumber, current: types.vaultWithoutUnderlying) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      option.addr,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, option.underlying.decimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={option.underlying.symbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={option.underlying.symbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count: number) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              option.addr,\n              option.underlying.addr,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\nimport * as types from '../../types'\n\ntype VaultModalProps = {\n  option: types.option,\n  vault: types.vaultWithRatio,\n  collateralIsETH: boolean\n}\n\nfunction VaultModal({\n  option,\n  vault,\n  collateralIsETH\n}: VaultModalProps) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      if (!vault.useCollateral) return;\n      const maxLiquidatable = await getMaxLiquidatable(option.addr, vault.owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option, opened, vault.owner, vault.useCollateral]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[vault]}\n          entriesPerPage={1}\n          renderEntry={(vault: types.vaultWithRatio) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, option.collateral.decimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            <RatioTag isSafe={vault.isSafe} ratio={vault.ratio} useCollateral={vault.useCollateral} />\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(option.addr, vault.owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral.addr,\n                      option.addr,\n                      vault.owner,\n                      toBaseUnitBN(addValue, option.collateral.decimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {vault.useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={vault.isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(option.addr, vault.owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport {\n  formatDigits, compareVaultRatio, compareVaultIssued, toTokenUnitsBN,\n} from '../../utils/number';\n\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport * as types from '../../types'\n\ntype VaultOwnerListProps = {\n  user: string,\n  option: types.option,\n  vaults: types.vaultWithoutUnderlying[],\n  collateralIsETH: boolean\n}\n\nfunction VaultOwnerList({\n  user, option, vaults, collateralIsETH,\n}:VaultOwnerListProps) {\n  const vaultUsesCollateral = option.collateral.addr !== option.strike.addr;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState<types.vaultWithRatio[]>([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n          };\n        })\n        .sort(vaultUsesCollateral ? compareVaultRatio : compareVaultIssued);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralIsETH, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={(vault: types.vaultWithRatio) => [\n          <IdentityBadge entity={vault.owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(vault.collateral, option.collateral.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(vault.oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(vault.ratio, 5),\n          <RatioTag isSafe={vault.isSafe} ratio={vault.ratio} useCollateral={vault.useCollateral} />,\n          <VaultModal\n            option={option}\n            vault={vault}\n            collateralIsETH={collateralIsETH}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { getTotalSupply, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types'\n\ntype OptionOverviewProps = {\n  option: types.option,\n  collateralIsETH: boolean\n}\n\nfunction OptionOverview({\n  option,\n  collateralIsETH,\n}:OptionOverviewProps) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt:BigNumber;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(option.addr));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral.addr, option.addr);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, option.collateral.decimals);\n      }\n      const supply = await getTotalSupply(option.addr);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(toTokenUnitsBN(supply, option.decimals));\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralIsETH, option]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={option.addr} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toFormat(4)}\n                {' '}\n                {option.collateral.symbol}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply.toFormat(4)}\n            {' '}\n            {option.symbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React, { useMemo, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport tracker from '../../utils/tracker';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nimport * as types from '../../types'\n\nfunction OptionPage({ user }: { user: string }) {\n  const { token } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/option/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState<types.vaultWithoutUnderlying[]>([]);\n\n  const collateralIsETH = option!.collateral.addr === ETH_ADDRESS;\n\n  useMemo(async () => {\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [token]);\n\n  return (\n    <>\n      <Header\n        primary={option!.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            option={option!}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        option={option!}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        option={option!}\n        user={user}\n        vaults={vaults}\n        collateralIsETH={collateralIsETH}\n      />\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common/index';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\n\ntype HeaderDashboardProps= {\n  ratio: number,\n  minRatio: number,\n  symbol: string,\n  vault: types.vault,\n  decimals: number,\n  newRatio: number,\n  collateralDecimals: number,\n  useCollateral: boolean,\n};\n\nconst HeaderDashboard = ({\n  ratio,\n  minRatio,\n  symbol,\n  vault,\n  decimals,\n  newRatio,\n  collateralDecimals,\n  useCollateral,\n}:HeaderDashboardProps) => {\n  const tokenInUnit = vault.oTokensIssued\n    ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber()\n    : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? (\n              <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} />\n            ) : (\n              <></>\n            )}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n            .\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n                /\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? (\n              ''\n            ) : (\n              <HelperText label=\"New Ratio\" amt={newRatio.toString()} />\n            )}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as types from '../../types';\n\ntype CollateralManagementProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  collateral: types.token,\n  collateralAssetBalance: BigNumber,\n  token: string,\n  owner: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  setNewRatio: Function,\n\n}\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateral,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}: CollateralManagementProps) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: `Your ${collateral.symbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateral.decimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateral.addr,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateral.decimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateral.decimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateral.addr,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateral.decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton, WarningText } from '../common/index';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\n\nimport * as types from '../../types';\n\n\ntype IssueTokenProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  tokenBalance: BigNumber,\n  token: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  decimals: number,\n  symbol: string,\n  setNewRatio: Function,\n  strikePriceInUSD: number | undefined,\n  collateralSymbol: string\n}\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n  strikePriceInUSD,\n  collateralSymbol,\n}:IssueTokenProps) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <WarningText text={`1 ${collateralSymbol} can create ${strikePriceInUSD} ${symbol}`} />\n        : <></>}\n    </Box>\n  );\n}\n\n\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\ntype LiqActions = {\n  vault: {\n    owner: string,\n    optionsContract: {\n      address: string,\n    }\n  },\n  liquidator: string,\n  collateralToPay: string,\n  timestamp: string,\n  transactionHash: string,\n}\n\ntype LiquidationHistoryProps = {\n  owner: string,\n  token: string,\n  isOwner: Boolean,\n  tokenDecimals: number,\n  collateralDecimals:number,\n  userTokenBalance: BigNumber,\n};\n\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance, collateralDecimals\n}: LiquidationHistoryProps) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<LiqActions[]>([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n    updateLiquidatable();\n  }, [owner, token, tokenDecimals]);\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n          <Box heading=\"Liquidate\">\n            <>\n              <div style={{ display: 'flex' }}>\n                {/* balance */}\n                <div style={{ width: '30%' }}>\n                  <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n                </div>\n                <div style={{ width: '70%', paddingTop: '2%' }}>\n                  <div style={{ display: 'flex' }}>\n                    <div style={{ width: '60%' }}>\n                      <>\n                        <TextInput\n                          type=\"number\"\n                          wide\n                          value={amountToLiquidate}\n                          onChange={(event) => {\n                            setAmtToLiquidate(event.target.value);\n                          }}\n                        />\n                        <MaxButton\n                          onClick={() => {\n                            const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                            setAmtToLiquidate(maximum);\n                          }}\n                        />\n                      </>\n                    </div>\n                    <div style={{ width: '40%' }}>\n                      <Button\n                        disabled={maxLiquidatable <= 0}\n                        label=\"Liquidate\"\n                        onClick={() => {\n                          const amtToLiquidate = toBaseUnitBN(\n                            amountToLiquidate,\n                            tokenDecimals,\n                          ).toString();\n                          liquidate(token, owner, amtToLiquidate);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          </Box>\n        )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(toTokenUnitsBN(collateralToPay, collateralDecimals), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp, 10) * 1000),\n            ]}\n        />\n      </Box>\n    </>\n  );\n}\n\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype exerciseEntry = {\n  amtCollateralToPay: string;\n  exerciser: string;\n  oTokensToExercise: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<exerciseEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }: exerciseEntry) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useMemo } from 'react';\nimport {\n  Box, DataView, Button, TransactionBadge,\n} from '@aragon/ui';\nimport { BalanceBlock } from '../common/index';\nimport { removeUnderlying } from '../../utils/web3';\nimport { getRemoveUnderlyingHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype RemoveUnderlyingHistoryEntry = {\n  amount: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\ntype RemoveUnderlyingProps = {\n  owner: string,\n  token: string,\n  underlyingDecimals: number,\n  underlyingAmount: string,\n}\n\nfunction RemoveUnderlying({\n  owner, token, underlyingDecimals, underlyingAmount,\n}: RemoveUnderlyingProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<RemoveUnderlyingHistoryEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getRemoveUnderlyingHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n\n      <Box heading=\"Underlying\">\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>\n            {BalanceBlock({\n              asset: 'Redeemable',\n              balance: formatDigits(toTokenUnitsBN(underlyingAmount, underlyingDecimals), 6),\n            })}\n          </div>\n          <div style={{ width: '70%', padding: '2%' }}>\n            <Button\n              label=\"Redeem Underlying\"\n              onClick={() => { removeUnderlying(token); }}\n            />\n          </div>\n        </div>\n        <br />\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Timestamp']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            transactionHash, amount, timestamp,\n          }: RemoveUnderlyingHistoryEntry) => [\n            <TransactionBadge shorten={false} transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amount, underlyingDecimals).toNumber(),\n              5,\n            ),\n            timeSince(parseInt(timestamp, 10)* 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default RemoveUnderlying;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\nimport UnderlyingManagement from './UnderlyingManagement';\n\nimport { Comment } from '../common/index';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance } from '../../utils/infura';\nimport { getVault } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\nimport * as types from '../../types'\nimport tracker from '../../utils/tracker';\n\nfunction ManageVault({ user }: { user: string }) {\n  const { token, owner } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/manage/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  \n\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio,\n    collateral, expiry, underlying\n  } = option!;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState<types.vault>({\n    collateral: '0',\n    oTokensIssued: '0',\n    owner,\n    underlying: '0'\n  });\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n  const vaultUsesCollateral = collateral.addr !== strike.addr;\n\n  useMemo(() => {\n    let isCancelled = false;\n    async function updateInfo() {\n      const vaultToManage = await getVault(owner, token);\n      if (vaultToManage === null) {\n        setIsLoading(false);\n        return;\n      }\n\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      // let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral.addr, user);\n        collateralBalance = toTokenUnitsBN(userColltBalance, collateral.decimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValInCollt);\n        setVault(vaultToManage);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n        setIsLoading(false);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault\n    ? isLoading ? (\n      <Comment text=\"Loading...\" />\n    )\n      : (\n        <Comment text=\"No Vault Found for this user under this contract\" />\n      ) : (\n        <>\n          <Header\n            primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n            secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n          />\n\n          <HeaderDashboard\n            // user={user}\n            ratio={ratio}\n            minRatio={minRatio}\n            vault={vault}\n            decimals={decimals}\n            symbol={symbol}\n            newRatio={newRatio}\n            useCollateral={vaultUsesCollateral}\n            // collateralIsETH={collateralIsETH}\n            collateralDecimals={collateral.decimals}\n          />\n\n          <Tabs\n            items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise', 'Underlying Redemption']}\n            selected={tabSelected}\n            onChange={setTabSelected}\n          />\n\n          {tabSelected === 0 ? (\n            <CollateralManagement\n              isOwner={isOwner}\n              vault={vault}\n              collateralAssetBalance={userCollateralAssetBalance}\n              collateral={collateral}\n              token={token}\n              owner={owner}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 1 ? (\n            <IssuedTokenManagement\n              isOwner={isOwner}\n              vault={vault}\n              tokenBalance={ownerTokenBalance}\n              token={token}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              decimals={decimals}\n              symbol={symbol}\n              setNewRatio={setNewRatio}\n              // for call heler text\n              strikePriceInUSD={(option as types.ETHOption).strikePriceInUSD}\n              collateralSymbol={collateral.symbol}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 2 ? (\n            vaultUsesCollateral ? (\n              <LiquidationHistory\n                userTokenBalance={userTokenBalance}\n                isOwner={isOwner}\n                owner={owner}\n                token={token}\n                collateralDecimals={collateral.decimals}\n                tokenDecimals={decimals}\n              />\n            ) : (\n              <Box> This vault cannot be liquidated </Box>\n            )\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 3 ? (\n            <ExerciseHistory\n              owner={owner}\n              token={token}\n              tokenDecimals={decimals}\n              collateralDecimals={collateral.decimals}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 4 ? (\n            <UnderlyingManagement\n              owner={owner}\n              token={token}\n              underlyingDecimals={underlying.decimals}\n              underlyingAmount={vault.underlying}\n            />\n          ) : <> </>}\n        </>\n    );\n}\n\n\n\nexport default ManageVault;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, AddressBlock } from '../common/index';\n\ntype  TradePageHeaderProps = {\n  symbol: string,\n  poolETHBalance: BigNumber,\n  poolTokenBalance: BigNumber,\n  uniswapExchange: string,\n};\n\nconst TradePageHeader = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}: TradePageHeaderProps) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\n\nexport default TradePageHeader;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  WarningText, BalanceBlock, MaxButton, PriceSection,\n} from '../common/index';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\n\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\n\ntype UniswapBuySellProps = {\n  symbol: string,\n  strikePriceInUSD: number | undefined,\n  tokenBalance: BigNumber,\n  token: string,\n  exchange: string,\n  decimals: number,\n};\n\nfunction OptionExchange({\n  symbol, tokenBalance, token, exchange, decimals, strikePriceInUSD,\n}: UniswapBuySellProps) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(toTokenUnitsBN(premium, 16));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"\" />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} />\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <WarningText text={`Buy ${strikePriceInUSD} ${symbol} to hedge 1 ETH`} />\n        : <></> }\n    </Box>\n  );\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype AddliquidityProps = {\n  otoken: string,\n  otokenSymbol: string,\n  otokenDecimals: number,\n  poolTokenBalance: BigNumber,\n  poolETHBalance:BigNumber,\n  liquidityTokenSupply: BigNumber,\n  liquidityTokenDecimals: number,\n  userTokenBalance: BigNumber,\n  userETHBalance:BigNumber\n  uniswapExchange: string\n}\n\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: AddliquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype RemoveLiquidityProps = {\n  otokenDecimals: number,\n  otokenSymbol: string,\n  uniswapExchange: string\n  userliquidityTokenBalance: BigNumber\n  poolTokenBalance: BigNumber\n  poolETHBalance: BigNumber\n  liquidityTokenDecimals: number,\n  liquidityTokenSupply: BigNumber\n}\n\n\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: RemoveLiquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getTokenBalance, getBalance, getTotalSupply,\n} from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport { allOptions } from '../../constants/options';\n\nimport TradePageHeader from './Header';\nimport UniswapBuySell from './UniswapBuySell';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nimport tracker from '../../utils/tracker';\nimport * as types from '../../types'\n\nfunction UniswapPool({ user }: {user: string}) {\n  const liquidityTokenDecimals = 18;\n  const { token } = useParams();\n\n  useEffect(() => {\n    tracker.pageview(`/uniswap/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange,\n  } = option!;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n\n  // Update Uniswap Pool Info\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liqTokenTotalSupply] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getTotalSupply(uniswapExchange),\n      ]);\n      // const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenSupply(toTokenUnitsBN(liqTokenTotalSupply, liquidityTokenDecimals));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  // Update User balances\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <TradePageHeader\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <UniswapBuySell\n        strikePriceInUSD={(option as types.ETHOption).strikePriceInUSD}\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n    </>\n  );\n}\n\nexport default UniswapPool;\n","import React, { ReactChild } from 'react'\nimport { Box } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\ntype FieldCardProps = {\n  title:string,\n  description:string, \n  child: ReactChild\n}\n\nfunction FiledCard({title, description, child}:FieldCardProps){\n  \n  return (\n    <Box>\n      <div style={{display:'flex', padding:100}}>\n        <div style={{width:'40%'}}>\n        <SectionTitle title={title}/>\n        <div style={{paddingLeft:5}}><Comment text={description} /></div>\n        </div>\n        <div style={{width:'60%', padding:30}}>\n          {child}\n        </div>\n      </div>\n    </Box>\n  )\n  \n}\n\nexport default FiledCard","import React from 'react'\nimport { Header, IdentityBadge, IconCircleCheck } from '@aragon/ui'\n\nimport { Comment } from '../common'\n\ntype CompleteCreate = {\n  address: string,\n  setDetailComplete: boolean,\n}\n\nfunction ComplateCreate({ address, setDetailComplete }: CompleteCreate) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary=\"Option Created!\" />\n        <div style={{padding: 24}}><IconCircleCheck size=\"large\" /></div>\n      </div>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n      <IdentityBadge entity={address} shorten={false} />\n      </div>\n      <br></br>\n      {!setDetailComplete\n        ? <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Comment text=\"Remeber to set the token name and symbol!\" />\n        </div>\n        : <></>}\n    </div>\n  )\n\n}\n\nexport default ComplateCreate","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Box, Header, Button, useTheme, useToast, LoadingRing } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\nimport CompleteCreate from './Complete'\n\nimport { USDC, OPYN_ETH } from '../../constants/tokens'\n\nimport { setDetail, deployOTokenContract } from '../../utils/web3'\n\ntype ConfirmOptionProps = {\n  user: string,\n  putOrCall: 0 | 1; //'Put' | 'Call',\n  americanOrEuropean: 0 | 1; // 'american' | 'european',\n  strikePrice: number,\n  expiration: Date,\n  strikePriceIsValid: Boolean,\n  setProgress: Function\n}\n\nfunction ConfirmETHOption(\n  {\n    user,\n    putOrCall,\n    americanOrEuropean,\n    strikePrice,\n    expiration,\n    strikePriceIsValid,\n    setProgress\n  }: ConfirmOptionProps) {\n  const toast = useToast()\n\n  const [isCreating, setIsCreating] = useState(false)\n  const [isSettingDetail, setIsSettingDetail] = useState(false)\n  const [allComplete , setAllComplete] = useState(false)\n\n  const type = putOrCall === 0 ? 'Put' : 'Call'\n  const expiry = new BigNumber(expiration.getTime()).div(1000).toNumber()\n  const window = americanOrEuropean === 0\n    ? expiry\n    : new BigNumber(expiry).minus(86400).toNumber()\n  const name = `Opyn ETH ${type} $${strikePrice} ${FormatDate(expiration)}`\n  const symbol = `oETH $${strikePrice} ${type} ${FormatDate(expiration)}`\n\n  const [newTokenAddr, setNewTokenAddr] = useState('')\n\n\n  // Create option -> Check user permission -> Set detail\n  const onClickCreate = async () => {\n    if (!user) {\n      toast(\"Please connect wallet\")\n      return\n    }\n    if (!strikePriceIsValid) {\n      toast(\"Invalid strike price.\")\n      return\n    }\n    let newTokenAddr = ''\n    setIsCreating(true)\n    try {\n      if (type === 'Put') {\n        const oToken = await deployOTokenContract(\n          USDC.addr, // collateral\n          -1 * USDC.decimals,\n          OPYN_ETH.addr, // underlying\n          -1 * OPYN_ETH.decimals,\n          -7, // decimals\n          new BigNumber(strikePrice).div(10).integerValue().toNumber(), //strike price\n          -6, // strikePrice exp\n          USDC.addr,\n          expiry,\n          window\n        )\n\n        newTokenAddr = oToken\n      } else { // Create a eth call\n        const strikePriceNum = new BigNumber(10000000).div(strikePrice).integerValue().toNumber()\n        const oToken = await deployOTokenContract(\n          OPYN_ETH.addr, // collateral\n          -1 * OPYN_ETH.decimals,\n          USDC.addr, // underlying\n          -1 * USDC.decimals,\n          -7, // decimals\n          strikePriceNum, //strike price\n          -14, // strikePrice exp\n          OPYN_ETH.addr,\n          expiry,\n          window\n        )\n\n        newTokenAddr = oToken\n      }\n    } catch (error) {\n      setIsCreating(false)\n      return\n    }\n\n    setIsCreating(false)\n    setNewTokenAddr(newTokenAddr)\n\n    setIsSettingDetail(true)\n    setProgress(0.9)\n\n    try {\n      await setDetail(newTokenAddr, symbol, name)\n      setAllComplete(true)\n    } catch (error) {\n      console.log(error)\n    }\n    \n    setIsSettingDetail(false)\n    setProgress(1)\n  }\n\n  return (\n    <Box>\n      {\n        // not created\n        newTokenAddr === '' ?\n          isCreating\n            ? <ProcessingBox text=\"Creating Option...\" />\n            // Wait for confirm\n            : <ConfirmDiv\n              americanOrEuropean={americanOrEuropean}\n              name={name}\n              symbol={symbol}\n              onClickCreate={onClickCreate}\n            />\n\n          : isSettingDetail\n            ? <ProcessingBox text=\"Setting Detail...\" />\n            : <CompleteCreate address={newTokenAddr} setDetailComplete={allComplete} />\n      }\n    </Box>\n  )\n\n}\n\nexport default ConfirmETHOption\n\ntype ConfirmDivProps = {\n  americanOrEuropean: 0 | 1,\n  name: string,\n  symbol: string\n  onClickCreate: Function\n}\nfunction ConfirmDiv({ americanOrEuropean, name, symbol, onClickCreate }: ConfirmDivProps) {\n  const theme = useTheme()\n  return (\n    <div style={{ display: 'flex', height: 300 }}>\n      <div style={{ width: '40%', paddingTop: 100, paddingLeft: 100 }}>\n        <SectionTitle title=\"Almost done!\" />\n        <div style={{ paddingLeft: 5 }}><Comment text=\"Confirm Detail\" /></div>\n      </div>\n      <div style={{ width: '15%', paddingTop: 100, color: theme.surfaceContentSecondary }}>\n        <div>Type</div>\n        <div>Name</div>\n        <div>Symbol</div>\n      </div>\n      <div style={{ width: '30%', paddingTop: 100 }}>\n        <div>{americanOrEuropean ? 'European Option' : 'American Option'}</div>\n        <div>{name}</div>\n        <div>{symbol}</div>\n      </div>\n      <div style={{ width: '10%', paddingTop: 130 }}>\n        <Button label=\"Create\" onClick={onClickCreate}></Button>\n      </div>\n    </div>\n  )\n}\n\nfunction ProcessingBox({ text }: { text: string }) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary={text} />\n        <div style={{ padding: 25 }}><LoadingRing mode=\"half-circle\" /></div>\n      </div>\n    </div>\n  )\n}\n\n\n/**\n * Format datetime to dd/mm/yy\n * @param date \n */\nfunction FormatDate(date: Date) {\n  var dd = date.getDate().toString();\n  var mm = (date.getMonth() + 1).toString();\n  var yy = date.getFullYear().toString().substr(-2);\n\n  if (parseInt(dd) < 10) {\n    dd = '0' + dd\n  }\n  if (parseInt(mm) < 10) {\n    mm = '0' + mm\n  }\n\n  return dd + '/' + mm + '/' + yy;\n}","import styled from 'styled-components'\n\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props: { theme: { content: any; }; }) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nexport const GroupButton = styled.div`\n  height: 40px;\n  width: 50%;\n  border: 1px solid ${(props: { theme: { border: any; }; }) => props.theme.border};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props: { index: number; }) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props: { index: number; }) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props: { index: number; }) => (props.index === 1 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props: { index: number; }) => (props.index === 1 ? '5px' : '0px')};\n  background: ${(props: { disabled: any; theme: { surface: any; surfaceHighlight: any; }; isActive: boolean; }) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport ItemsCarousel from 'react-items-carousel';\nimport FieldCard from './FieldCard'\nimport ConfirmBox from './ConfirmETHOptionBox'\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\n\nimport {\n  IconArrowRight,\n  IconArrowLeft,\n  Button,\n  ProgressBar,\n  TextInput,\n  useTheme\n} from '@aragon/ui'\nimport { GroupButton, GroupButtonWrapper } from './GroupButton'\n\ntype CreateOETHProps = {\n  user: string\n}\n\nconst timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n\nfunction CreateOETH({ user }: CreateOETHProps) {\n\n  const theme = useTheme()\n  // put or call\n  const [putOrCall, setPutOrCall] = useState<0|1>(0)\n  const [americanOrEuropean, setAmOrEuro] = useState<0|1>(0)\n  // strike price\n  const [strikePriceForoETH, setStrikePriceForOETH] = useState<number>(200)\n  const strikePriceIsValid = new BigNumber(strikePriceForoETH).mod(10).eq(0)\n\n  const [expiration, setExpiration] = useState<Date>(new Date())\n\n  // index of ItemsCarousel\n  const [step, setStep] = useState(3)\n  const [progress, setProgress] = useState(0)\n\n  const onChangeDatePicker = (dateTime:Date) => {\n    setExpiration(dateTime)\n  }\n\n  return (\n    <>\n      <ItemsCarousel\n        requestToChangeActive={setStep}\n        activeItemIndex={step}\n        numberOfCards={1}\n        rightChevron={<div style={{ margin: '20px' }}><Button label=\"next\" icon={<IconArrowRight />} display=\"icon\" /></div>}\n        leftChevron={<Button label=\"prev\" icon={<IconArrowLeft />} display=\"icon\" />}\n        outsideChevron={false}\n        chevronWidth={40}\n      >\n        {/* \b\bOption Type */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"American or European?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['American', 'European',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setAmOrEuro(i as 0 | 1)}\n                    isActive={americanOrEuropean === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* Call or Put */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"Put or Call?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['Put', 'Call',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setPutOrCall(i as 0 | 1)}\n                    isActive={putOrCall === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* \b\bStrikePrice */}\n        <FieldCard\n          title={'Strike Price'}\n          description=\"Enter Strike Price\"\n          child={\n            <div style={{ width: '100%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment=\"USDC\"\n                type=\"number\"\n                value={strikePriceForoETH}\n                onChange={(e) => setStrikePriceForOETH(e.target.value)} />\n              {\n                strikePriceIsValid\n                  ? <></>\n                  : <div style={{ fontSize: 14, color: theme.warning }}> Strike price must be dividable by 10 </div>\n              }\n            </div>\n          }\n        />\n        <FieldCard\n          title={'Expiration'}\n          description={`Choose Expiration Time (${timezone})`}\n          child={\n            <div style={{ width: '80%' }}>\n              <DateTimePicker\n                onChange={onChangeDatePicker}\n                />\n            </div>\n          } />\n        <ConfirmBox\n          user={user}\n          putOrCall={putOrCall}\n          americanOrEuropean={americanOrEuropean}\n          strikePrice={strikePriceForoETH}\n          strikePriceIsValid={strikePriceIsValid}\n          expiration={expiration}\n          setProgress={setProgress}\n        />\n\n      </ItemsCarousel>\n      <ProgressBar value={progress ? progress : step / 5} />\n    </>\n  )\n\n}\n\nexport default CreateOETH","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Box, Header, Button, useTheme, useToast, LoadingRing } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\nimport CompleteCreate from './Complete'\n\nimport { deployOTokenContract, setDetail } from '../../utils/web3'\n\nimport * as types from '../../types'\n\ntype ConfirmOptionProps = {\n  symbol: string,\n  name: string,\n  decimals: number,\n  underlying: types.token,\n  strike: types.token,\n  collateral: types.token,\n  user: string,\n  americanOrEuropean: 0 | 1; // 'american' | 'european',\n  strikePrice: BigNumber,\n  expiration: Date,\n  setProgress: Function\n}\n\nfunction ConfirmCustomOption(\n  {\n    decimals,\n    symbol,\n    name,\n    underlying,\n    strike,\n    collateral,\n    user,\n    americanOrEuropean,\n    strikePrice,\n    expiration,\n    setProgress\n  }: ConfirmOptionProps) {\n  const toast = useToast()\n\n  const [isCreating, setIsCreating] = useState(false)\n  const [isAllComplete, setAllComplete] = useState(false)\n  const [isSettingDetail, setIsSettingDetail] = useState(false)\n\n  const expiry = new BigNumber(expiration.getTime()).div(1000).toNumber()\n  const window = americanOrEuropean === 0\n    ? expiry\n    : new BigNumber(expiry).minus(86400).toNumber()\n\n  const [newTokenAddr, setNewTokenAddr] = useState('')\n\n\n  // Create option -> Check user permission -> Set detail\n  const onClickCreate = async () => {\n    if (!user) {\n      toast(\"Please connect wallet\")\n      return\n    }\n    let newTokenAddr = ''\n    setIsCreating(true)\n    try {\n      const oToken = await deployOTokenContract(\n        collateral.addr, // collateral\n        -1 * collateral.decimals,\n        underlying.addr, // underlying\n        -1 * underlying.decimals,\n        -1 * decimals, // decimals\n        strikePrice.c ? strikePrice.c[0] : 1, //strike price\n        strikePrice.e ? -1 * strikePrice.e : -1, // strikePrice exp\n        strike.addr,\n        expiry,\n        window\n      )\n      newTokenAddr = oToken\n    } catch (error) {\n      setIsCreating(false)\n      return\n    }\n\n    setIsCreating(false)\n    setNewTokenAddr(newTokenAddr)    \n    setIsSettingDetail(true)\n    setProgress(0.9)\n    try {\n      await setDetail(newTokenAddr, symbol, name)\n      setAllComplete(true)\n    } catch (error) {\n      console.log(error)\n    }\n    setIsSettingDetail(false)\n    setProgress(1)\n  }\n\n  return (\n    <Box>\n      {\n        // not created\n        newTokenAddr === '' ?\n          isCreating\n            ? <ProcessingBox text=\"Creating Option...\" />\n            // Wait for confirm\n            : <ConfirmDiv\n              americanOrEuropean={americanOrEuropean}\n              name={name}\n              symbol={symbol}\n              onClickCreate={onClickCreate}\n              collateral={collateral}\n              underlying={underlying}\n              strike={strike}\n              strikePrice={strikePrice}\n            />\n\n          // Already created\n          : isSettingDetail\n              ? <ProcessingBox text=\"Setting Detail...\" />\n              : <CompleteCreate address={newTokenAddr} setDetailComplete={isAllComplete} />\n      }\n    </Box>\n  )\n\n}\n\nexport default ConfirmCustomOption\n\ntype ConfirmDivProps = {\n  collateral: types.token,\n  underlying: types.token,\n  strike: types.token,\n  strikePrice: BigNumber,\n  americanOrEuropean: 0 | 1,\n  name: string,\n  symbol: string\n  onClickCreate: Function\n}\nfunction ConfirmDiv({ americanOrEuropean, name, symbol, onClickCreate, collateral, underlying, strike, strikePrice }: ConfirmDivProps) {\n  const theme = useTheme()\n  return (\n    <div style={{ display: 'flex', height: 300 }}>\n      <div style={{ width: '40%', paddingTop: 100, paddingLeft: 100 }}>\n        <SectionTitle title=\"Almost done!\" />\n        <div style={{ paddingLeft: 5 }}><Comment text=\"Confirm Detail\" /></div>\n      </div>\n      <div style={{ width: '15%', paddingTop: 60, color: theme.surfaceContentSecondary }}>\n        <div>Type</div>\n        <div>Name</div>\n        <div>Symbol</div>\n        <div>Underlying</div>\n        <div>Strike</div>\n        <div>Collateral</div>\n      </div>\n      <div style={{ width: '30%', paddingTop: 60 }}>\n        <div>{americanOrEuropean ? 'European Option' : 'American Option'}</div>\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{underlying.symbol}</div>\n        <div>{strike.symbol}</div>\n        <div>{collateral.symbol}</div>\n      </div>\n      <div style={{ width: '10%', paddingTop: 130 }}>\n        <Button label=\"Create\" onClick={onClickCreate}></Button>\n      </div>\n    </div>\n  )\n}\n\nfunction ProcessingBox({ text }: { text: string }) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary={text} />\n        <div style={{ padding: 25 }}><LoadingRing mode=\"half-circle\" /></div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport ItemsCarousel from 'react-items-carousel';\nimport FieldCard from './FieldCard'\n\nimport {\n  DropDown,\n  Box,\n  IconArrowRight,\n  IconArrowLeft,\n  Button,\n  ProgressBar,\n  DateRangePicker,\n  TextInput,\n  useTheme\n} from '@aragon/ui'\nimport { SectionTitle, Comment } from '../common'\nimport { GroupButton, GroupButtonWrapper } from './GroupButton'\nimport ConfirmDetail from './ConfirmCustomOption'\n\n// import * as types from '../../types'\nimport * as tokens from '../../constants/tokens'\n\n\ntype CreateCustomOption = {\n  user: string,\n  today: Date,\n  tomorrow: Date,\n  localOffset: number\n}\n\n\nfunction CreateCustomOption({ user, today, tomorrow, localOffset }: CreateCustomOption) {\n\n  const theme = useTheme()\n\n  const tokensAvailable = [tokens.OPYN_ETH, tokens.USDC, tokens.WETH, tokens.cDAI, tokens.cUSDC]\n\n  const [name, setName] = useState('')\n  const [symbol, setSymbol] = useState('')\n  const [decimals, setDecimals] = useState(0)\n\n  const [collateralIdx, setCollateralIdx] = useState<number>(0)\n  const [underlyingIdx, setUnderlyingIdx] = useState<number>(3)\n  const [strikeIdx, setStrikeIdx] = useState<number>(1)\n\n  const [americanOrEuropean, setAmOrEuro] = useState<0 | 1>(0)\n  // strike price\n  const [strikePrice, setStrikePrice] = useState<BigNumber>(new BigNumber(0))\n\n  const [expiration, setExpiration] = useState<Date>(tomorrow)\n\n  // index of ItemsCarousel\n  const [step, setStep] = useState(0)\n  const [progress, setProgress] = useState(0)\n\n  const onChangeDatePicker = ({ end }: { end: Date }) => {\n    const endUTCs = end.getTime() + 1 + localOffset\n    const endUTC = new Date(endUTCs)\n    setExpiration(endUTC)\n  }\n\n  return (\n    <>\n      <ItemsCarousel\n        requestToChangeActive={setStep}\n        activeItemIndex={step}\n        numberOfCards={1}\n        rightChevron={<div style={{ margin: '20px' }}><Button label=\"next\" icon={<IconArrowRight />} display=\"icon\" /></div>}\n        leftChevron={<Button label=\"prev\" icon={<IconArrowLeft />} display=\"icon\" />}\n        outsideChevron={false}\n        chevronWidth={40}\n      >\n        {/* Basic Info */}\n        <Box>\n          <div style={{ display: 'flex', padding: 100, height: 300 }}>\n            <div style={{ width: '40%' }}>\n              <SectionTitle title=\"Create New Option\" />\n              <div style={{ paddingLeft: 5 }}><Comment text=\"Basic Token info\" /></div>\n            </div>\n            <div style={{ width: '60%', padding: 0, display:'flex' }}>\n              \n              <div style={{width: '100%'}}> \n                <div><TextInput type='text' placeholder=\"Token Name\" value={name} onChange={(event) => setName(event.target.value)} /></div>\n                <div><TextInput type='text' placeholder=\"Symbol\" value={symbol} onChange={(event) => setSymbol(event.target.value)} /></div>\n                <div><TextInput type='number' placeholder=\"Decimals\" value={decimals ? decimals : undefined} onChange={(event) => setDecimals(event.target.value)} /></div>\n              </div>\n              \n            </div>\n          </div>\n        </Box>\n\n        {/* \b\bOption Type */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"American or European?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['American', 'European',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setAmOrEuro(i as 0 | 1)}\n                    isActive={americanOrEuropean === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* Underlying */}\n        <FieldCard\n          title={'Underlying Asset'}\n          description=\"Protected asset\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown \n                items={tokensAvailable.map(o => o.symbol)} \n                selected={underlyingIdx}\n                onChange={(idx) => setUnderlyingIdx(idx)}/>\n            </div>}\n        />\n        {/* Underlying */}\n        <FieldCard\n          title={'Strike Asset'}\n          description=\"The asset use as protection\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown items={tokensAvailable.map(o => o.symbol)}\n              selected={strikeIdx}\n              onChange={(idx) => setStrikeIdx(idx)}/>\n            </div>}\n        />\n\n        {/* \b\bStrikePrice */}\n        <FieldCard\n          title={'Strike Price'}\n          description=\"Enter Strike Price\"\n          child={\n            <div style={{ width: '100%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                type=\"number\"\n                value={strikePrice.toNumber()}\n                onChange={(e) => setStrikePrice(e.target.value)} />\n            </div>\n          }\n        />\n        {/* Collateral */}\n        <FieldCard\n          title={'Collateral'}\n          description=\"Set Collateral asset\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown items={tokensAvailable.map(o => o.symbol)}\n              selected={collateralIdx}\n              onChange={(idx) => setCollateralIdx(idx)}/>\n            </div>}\n        />\n        <FieldCard\n          title={'Expiration'}\n          description=\"Choose end date to expiration date\"\n          child={\n            <div style={{ width: '80%' }}>\n              <DateRangePicker\n                onChange={onChangeDatePicker}\n                startDate={today}\n                endDate={expiration} />\n            </div>\n          } />\n        <ConfirmDetail\n          user={user}\n          name={name}\n          symbol={symbol}\n          decimals={decimals}\n          collateral={tokensAvailable[collateralIdx]}\n          strike={tokensAvailable[strikeIdx]}\n          underlying={tokensAvailable[underlyingIdx]}\n          americanOrEuropean={americanOrEuropean}\n          strikePrice={strikePrice}\n          expiration={expiration}\n          setProgress={setProgress}\n        />\n\n      </ItemsCarousel>\n      <ProgressBar value={progress ? progress : step / 7} />\n    </>\n  )\n\n}\n\nexport default CreateCustomOption","import React, { useState } from 'react'\n\nimport {\n  Header,\n  Tabs\n} from '@aragon/ui'\n\nimport CreateETHOption from './CreateETHOption'\nimport CreateCustomOption from './CreateCustomOption'\n\nconst today = new Date(new Date().toDateString())\nconst localOffset = today.getTimezoneOffset() * 60000; // in millisecond\nconst tomorrow = new Date(today.getTime() + (24 * 60 * 60 * 1000) + localOffset);\n\nfunction CreateOption({ user }: { user: string }) {\n\n  const [selectedTab, setSelectedTab] = useState(0)\n\n\n  return (\n    <>\n      <Header primary=\"Create new option\" />\n      <Tabs\n        items={[\n          'ETH Option Series',\n          // 'Custom Option'\n        ]}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      {selectedTab === 0\n        ? <CreateETHOption user={user} /> \n        : <CreateCustomOption user={user} localOffset={localOffset} today={today} tomorrow={tomorrow} />\n      }\n      \n    </>\n  )\n}\n\n\nexport default CreateOption","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from '@aragon/ui';\n\nfunction Footer({ theme } : { theme:string }) {\n  const history = useHistory();\n\n  return (\n    history.location.pathname.includes('/trade/')\n      ? <></>\n      : (\n        <div style={{\n          backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n          textAlign: 'center',\n          padding: '17px',\n          position: 'fixed',\n          left: '0',\n          bottom: '0',\n          height: '50px',\n          width: '100%',\n          fontSize: '14px'\n        }}>\n          Powered By\n          {' '}\n          <Link external href=\"https://opyn.co/#/\">\n            Opyn\n          </Link>\n          {', '}\n          <Link external href=\"https://ui.aragon.org/\">\n            Aragon UI\n          </Link>\n          {', '}\n          <Link external href=\"https://www.blocknative.com/\">\n            Blocknative\n          </Link>\n          {'. '}\n          <Link external href=\"https://www.kollateral.co/\">\n            Kollateral\n          </Link>\n          {'. '}\n          Hosted on\n          {' '}\n          {' '}\n          <Link external href=\"https://github.com/antoncoding/opyn-monitor\">\n            GitHub\n          </Link>\n        </div>\n      )\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade/index';\nimport OptionTrading from './components/OptionTrading';\nimport MyVaults from './components/MyVaults';\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault';\nimport Uniswap from './components/UniswapTrade';\nimport CreateOption from './components/CreateOption'\nimport Footer from './components/Footer';\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme:string) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionPage user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <AllOptoins />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trading */}\n          <Route path=\"/trade/oeth-usdc/\">\n            <OptionTrading\n              user={user}\n            />\n          </Route>\n          {/* <Route path=\"/trades/test/\"><ZEROXTest /></Route> */}\n          <Route path=\"/uniswap/:token/\"><Uniswap user={user} /></Route>\n          <Route path=\"/uniswap/\">\n            <Trade />\n          </Route>\n          <Route path=\"/create/\"><CreateOption user={user}/></Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\n\nMoment.locale('en')\nmomentLocalizer()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}