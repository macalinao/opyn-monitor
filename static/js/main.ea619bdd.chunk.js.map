{"version":3,"sources":["utils/etherscan.ts","utils/blockNative.ts","utils/infura.js","utils/storage.ts","constants/contracts.js","utils/web3.js","constants/bytecode/optionContract.js","components/NavBar/ConnectButton.tsx","components/NavBar/SwitchTheme.tsx","components/NavBar/index.tsx","components/HomePage/index.tsx","constants/tokens.js","constants/options/calls.ts","constants/options/puts.ts","constants/options/insurances.ts","constants/options/index.ts","components/common/AddressBlock.tsx","components/common/BalanceBlock.tsx","components/common/RatioTag.tsx","components/common/SectionTitle.tsx","components/common/MaxButton.tsx","components/common/HelpText.tsx","components/common/PriceSection.tsx","components/common/Warning.tsx","components/common/Comment.tsx","components/common/VaultButton.tsx","components/common/Wrapper.tsx","components/common/CheckBox.tsx","utils/tracker.ts","components/AllContracts/index.tsx","utils/number.ts","components/OptionPage/ExerciseModal.tsx","components/OptionPage/VaultModal.tsx","utils/calculation.ts","components/OptionPage/VaultsList.tsx","components/OptionPage/OptionInfoBox.tsx","utils/graph.ts","components/OptionPage/index.tsx","components/MyVaults/NoWallet.tsx","components/MyVaults/OpenVaultModal.tsx","components/MyVaults/index.tsx","components/ManageVault/HeaderDashboard.tsx","components/ManageVault/CollateralManagement.tsx","components/ManageVault/IssuedTokenManagement.tsx","components/ManageVault/Liquidation.tsx","components/ManageVault/Exercise.tsx","components/ManageVault/UnderlyingManagement.tsx","components/ManageVault/index.tsx","components/ExchangeList/index.tsx","components/UniswapExchange/Header.tsx","components/UniswapExchange/UniswapBuySell.tsx","components/UniswapExchange/AddLiquidity.tsx","components/UniswapExchange/RemoveLiquidity.tsx","components/UniswapExchange/index.tsx","components/TradeUniswap/TradeModal.tsx","components/TradeUniswap/utils.ts","components/TradeUniswap/Options.tsx","components/TradeUniswap/MyPositions.tsx","components/TradeUniswap/Balances.tsx","components/TradeUniswap/TradeHistory.tsx","components/TradeUniswap/UserData.tsx","components/TradeUniswap/index.tsx","components/Trade0x/styled.js","utils/0x.ts","components/Trade0x/OptionBoard.tsx","components/Trade0x/MyOrders.tsx","components/Trade0x/OrderBook.tsx","components/Trade0x/TabBoard.tsx","components/Trade0x/WrapETHSidePanel.tsx","components/Trade0x/BuyAndSell.tsx","components/Trade0x/index.tsx","components/CreateOption/FieldCard.tsx","components/CreateOption/Complete.tsx","components/CreateOption/ConfirmETHOptionBox.tsx","components/CreateOption/GroupButton.tsx","components/CreateOption/CreateETHOption.tsx","components/CreateOption/ConfirmCustomOption.tsx","components/CreateOption/CreateCustomOption.tsx","components/CreateOption/index.tsx","components/Footer/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["getETHPrice","a","fetch","process","res","json","result","ethusd","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","KEYS","filter","k","INFURA_KEY","Math","floor","random","length","web3","Web3","ens","ENS","ETH_ADDR","resolveENS","ensName","resolver","addr","address","toLowerCase","getTokenBalance","erc20Token","user","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getTotalSupply","erc20","token","totalSupply","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem","checkAddressAndAddToStorage","watch_addrs","usedAddresses","JSON","parse","includes","push","stringify","ETH_ADDRESS","WETH","KETH","ZeroX_ERC20Proxy","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","ZX_ExchagneABI","wrapETHABI","UINT256_MAX","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","deployOTokenContract","_collateral","_collExp","_underlying","_underlyingExp","_oTokenExchangeExp","_strikePrice","_strikeExp","_strike","_expiry","_windowSize","account","deploy","data","arguments","send","from","on","hash","options","setDetail","oTokenAdr","_symbol","_name","setDetails","liquidate","oTokenAddr","owner","liquidateAmt","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","toWei","toString","addERC20Collateral","collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","removeUnderlying","tokenAddr","amt","exercise","underlying","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","openVaultAddCollateralAndMint","collateralAsset","tokenAmount","createETHCollateralOption","createERC20CollateralOption","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","uniswapExchange","deadline","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","wrapETH","amountInWei","weth","deposit","unwrapETH","withdraw","signOrder","order","MetamaskSubprovider","currentProvider","signatureUtils","ecSignOrderAsync","fillOrders","orders","amts","signatures","gasPrice","batchFillOrders","cancelOrders","batchCancelOrders","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","SwitchMode","updateTheme","display","LinkButton","title","isSelected","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","secondary","MainButton","iconUrl","tag","width","alt","src","HomePage","alignItems","marginRight","marginLeft","USDC","decimals","symbol","OPYN_ETH","cDAI","cUSDC","eth_calls","type","name","tokens","strike","strikePrice","strikePriceInUSD","minRatio","expiry","eth_puts","insurances","eth_options","concat","allOptions","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","ethPrice","amtBN","toNumber","times","WarningText","text","useTheme","warning","Comment","ManageVaultButton","OpenVaultButton","goToMangePage","openAndGoToVault","styled","div","MyCheckBox","onCheck","CheckBoxWrapper","onChange","paddingBottom","props","surfaceContentSecondary","ReactGA","initialize","AllContracts","tracker","pageview","storedOptionTab","storedShowExpired","parseInt","tabSelected","setTabSelected","showExpired","setShowExpired","goToToken","CheckBox","items","selected","choice","fields","entries","option","entriesPerPage","renderEntry","end","format","OptionList","sort","oa","ob","toLocaleDateString","timeZone","toBaseUnitBN","rawAmt","raw","base","decimalsBN","pow","integerValue","toTokenUnitsBN","tokenDecimals","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","toDateString","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","isAddress","ExerciseModal","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","opened","setOpened","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","vault","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","useMemo","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","reduce","accumulator","current","plus","gte","onChangeExerciseAmt","amount","exeAmtBN","underlyingRawAmt","map","index","visible","onClose","heading","wide","adornment","adornmentPosition","event","target","renderSelectionCount","count","selection","onSelectEntries","indexes","disabled","vaultowners","VaultModal","collateralIsETH","toast","useToast","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","catch","error","justifyContent","calculateStrikeValueInCollateral","collateralDecimals","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","VaultOwnerList","vaultUsesCollateral","isLoading","setIsLoading","vaultsWithDetail","setVaultDetail","page","setPage","updateInfo","vaultDetail","id","setInterval","clearInterval","onPageChange","status","OptionOverview","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","toFormat","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","getVault","getLiquidationHistory","liquidateActions","getExerciseHistory","exerciseActions","getRemoveUnderlyingHistory","removeUnderlyingActions","getTotalSupplys","optionsContracts","getUserOptionBalances","accountBalances","obj","getUserUniswapSells","sellOTokensActions","getUserUniswapBuys","buyOTokensActions","method","headers","body","OptionPage","useParams","find","o","setVaults","allVaults","OptionInfoBox","VaultsList","PleaseLogin","setWatchAddress","InAddress","setAddress","placeholder","e","reverse","scale","radius","fontFamily","OpenVaultModal","setCollateralAmt","mintTokenAmt","setMintTokenAmt","setStrikeValueInCollateral","setRatio","strikeValueInColltrl","newRatio","mint","amtBn","onCollateralChange","Warning","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","watchAddress","isWatchMode","hasAddressConnected","showEmpty","setShowEmpty","displayVaults","userVaults","openedVaults","notOpenedTokens","undefined","entry","optionsContract","oTokenName","collateralSymbol","NoWallet","HeaderDashboard","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actions","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","RemoveUnderlying","underlyingDecimals","underlyingAmount","ManageVault","setVault","setStrikeValue","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","vaultToManage","all","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","Liquidation","Exercise","UnderlyingManagement","GoToUniswapFunction","category","action","window","open","TradeLanding","goToTrade","TradePageHeader","poolETHBalance","poolTokenBalance","UniswapBuySell","spotPrice","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","UniswapPool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","updatePoolInfo","exTokenBalance","exchagneETHBalance","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","TradeModal","viewport","greek","iv","getGreeks","optionPrice","t","s","expectedCost","v","getImpliedVolatility","Delta","getDelta","Gamma","getGamma","Vega","getVega","Theta","getTheta","Rho","getRho","b","distinctExpirys","Set","Options","optionPrices","balances","selectedExpiryIdx","setExpiryIdx","selectedType","setSelectedType","openInterests","setOIs","displayedOptions","setDisplayOptions","ivs","displayOptions","Boolean","alignContent","tableRowHeight","statusEmpty","align","priceInUSD","greeks","defaultPostitionGreeks","totalSize","MyPositions","tokenPrices","positions","setPositions","aggregatedPositionGreeks","setPositionGreeks","forEach","userPositions","rawBalance","isZero","bought","sold","abs","eq","PNL","positionGreeks","prev","p","PositionType","Green","Red","Balances","rows","setRows","totalValueUSD","setTotalValue","balanceObj","priceInfo","totalInUSD","cur","TradeHistory","filterOptionsOnly","buys","buyEntries","buy","oTokensToBuy","premiumPaid","usdcPrice","txHash","sells","sellEntries","sell","oTokensToSell","payoutTokensReceived","allEntris","TradeType","UserData","selectedTab","setSelectedTab","hint","idx","PositionManagement","setTokenPrices","cancelled","getTokenPrices","priceUnit","_tokenPrices","setBalances","updateBalances","BidText","AskText","FlexWrapper","BuyAndSellBlock","border","surface","Header","contentSecondary","BuySellTopPart","BuySellTopPartText","BuySellLowerPart","Tab","active","content","Label","BottomText","Wrapper","Flex","TabWrapper","BottomTextWrapper","GroupButtonWrapper","GroupButton","isActive","surfaceHighlight","endpoint","getOrderBook","quote","baseAsset","assetDataUtils","encodeERC20AssetData","quoteAsset","request","getBasePairAskAndBids","asks","bids","totalBidAmt","totalAskAmt","bestAskPrice","bestBidPrice","validAsks","records","record","isValid","getRemainingMakerAndTakerAmount","remainingMakerAssetAmount","askTokenAmt","makerAssetAmount","askQuoteAmt","takerAssetAmount","bestAsk","validBids","metaData","remainingFillableTakerAssetAmount","bidQuoteAmt","bidTokenAmt","bestBid","bestAskAndBids","path","notExpired","expirationTimeSeconds","notDust","getOrderFillRatio","createOrder","maker","makerAsset","takerAsset","salt","senderAddress","makerAddress","takerAddress","makerFee","takerFee","makerAssetData","takerAssetData","exchangeAddress","feeRecipientAddress","makerFeeAssetData","chainId","takerFeeAssetData","broadcastOrders","url","validationErrors","reason","getBidPrice","bid","makerAssetDecimals","takerAssetDecimals","getAskPrice","ask","remainingTakerAssetAmount","makerAssetAmountBN","takerAssetAmountBN","multipliedBy","getGasPrice","getFillAmountsOfOrders","selectedOrders","targetTakerAstAmount","targetMakerAstAmount","sumTakerAmount","sumMakerAmount","takerAmountArray","makerAmount","takerAmount","takerAmountNeeded","makerAmountNeeded","optionsByDate","puts","calls","optionsExpiresThisDay","strikePrices","pairs","put","expiryText","groupByDate","OptionBoard","setBaseAsset","setTradeType","setSelectedOrders","entriesToDisplay","setEntriesToDisplay","updateBoardStats","callsOfExpiry","pair","putsOfExpiry","callData","putData","displayEntries","callDetail","c","putDetail","item","callAsk","callBid","callBidAmt","callAskAmt","callOnclick","callBidOnclick","callAskOnclick","putAsk","putBid","putBidAmt","putAskAmt","putOnclick","putBidOnclick","putAskOnclick","Cell","textAlign","MyOrders","myOrdersPage","setMyOrdersPage","userAsks","userBids","orderHash","slice","zeroXUtil","OrderBook","tradeType","askPage","setAskPage","bidPage","setBidPage","askSelectedIndexs","setAskSelectedIndexes","bidSelectedIndexs","setBidSelectedIndexes","selectedIdxs","i","x","showIcon","Orders","WrapETHModal","wethBalance","setOpen","helperText","setHelperText","wrapAmount","setWrapAmount","unWrapAmount","setUnwrapAmount","ethBalance","setETHBalance","updateETHBalance","quoteBalance","idETHBalance","BuyAndSell","baseAssetBalance","quoteAssetBalance","quoteAssetAmount","setQuoteAssetAmount","fillingtakerAmounts","setFillingTakerAmounts","baseAmountToFill","setBaseAmountToFill","baseAmountToCreate","setBaseAmountToCreate","rate","setRate","fastGasPrice","setFastGasPrice","totalFillableMakerAmount","totalFillableTakerAmount","selectedOrderFillables","setSelectedOrdersFillable","isFillingAndCreating","setIsFillingAndCreating","hasSelectedOrders","feeInETH","panelOpend","setPanelOpended","wethPanelHelperText","setPanelHelperText","activeButton","setActiveButton","expirySeconds","isCanceled","fetchGasPrice","fast","selectedFillables","next","fillableTakerAmounts","baseMaxFillingAmount","quoteMaxFillingAmount","aggregateRate","checkAndAllowQuoteAsset","quoteAssetAmountInBase","checkQuoteAssetBalance","checkBaseAssetBalance","baseAssetAmountInBase","checkAndAllowBaseAsset","baseAssetAmountBase","clickCreateOrder","quoteAssetInBaseUnit","baseAssetInBaseUnit","signedOrder","clickFillOrders","takerAmountBase","signature","clickFillAndCreate","totalOtokenInSelectedOrders","console","log","quoteAmountTotal","baseAmountTotal","fillingAmounts","quoteAmountTk","quoteAmount","onChangeBaseAmount","newrate","rateBN","onChangeRate","OptionTrading","buySellActive","setBuySellActive","setAsks","setBids","setBaseAssetBalance","setQuoteAssetBalance","updateOrderBook","updateBaseBalance","baseBalance","idOrderBook","idBaseBalance","buttonLabel","setButtonLabel","sidePanelTitle","setSidePanelTitle","updateQuoteBalance","idQuoteAssetBalance","TabBoard","FiledCard","child","ComplateCreate","setDetailComplete","ConfirmETHOption","putOrCall","americanOrEuropean","expiration","strikePriceIsValid","setProgress","isCreating","setIsCreating","isSettingDetail","setIsSettingDetail","allComplete","setAllComplete","FormatDate","newTokenAddr","setNewTokenAddr","onClickCreate","strikePriceNum","ProcessingBox","ConfirmDiv","Complete","date","dd","mm","getMonth","yy","substr","timezone","Intl","DateTimeFormat","resolvedOptions","CreateOETH","setPutOrCall","setAmOrEuro","strikePriceForoETH","setStrikePriceForOETH","mod","setExpiration","step","setStep","progress","requestToChangeActive","activeItemIndex","numberOfCards","rightChevron","margin","leftChevron","outsideChevron","chevronWidth","FieldCard","dateTime","ConfirmCustomOption","isAllComplete","CreateCustomOption","today","tomorrow","localOffset","tokensAvailable","setName","setSymbol","setDecimals","collateralIdx","setCollateralIdx","underlyingIdx","setUnderlyingIdx","strikeIdx","setStrikeIdx","setStrikePrice","endUTCs","endUTC","startDate","endDate","getTimezoneOffset","CreateOption","CreateETHOption","Footer","backgroundColor","position","left","bottom","external","href","App","storedTheme","setTheme","setSpot","getSpotPrice","spot","assetsUrl","newTheme","UniswapExchange","ExchangeList","hostname","Moment","locale","momentLocalizer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.ea619bdd.chunk.js","sourcesContent":["const key = process.env.REACT_APP_ETHERSCAN_KEY\n\nexport const getETHPrice = async(): Promise<string> => {\n  const res = await fetch(`https://api.etherscan.io/api?module=stats&action=ethprice&tag=latest&apikey=${key}`)\n  return (await res.json()).result.ethusd\n}\n","import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nimport ENS from 'ethereum-ens';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst KEYS = [process.env.REACT_APP_INFURA_KEY, process.env.REACT_APP_INFURA_KEY2].filter((k) => k);\nconst INFURA_KEY = KEYS[Math.floor(Math.random() * KEYS.length)];\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\nconst ens = new ENS(web3);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ENS\nexport const resolveENS = async (ensName) => {\n  const address = await ens.resolver(ensName).addr();\n  return address.toLowerCase();\n};\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  if (erc20Token === ETH_ADDR) return 18;\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\nexport const getTotalSupply = async (erc20) => {\n  const token = new web3.eth.Contract(optionContractABI, erc20);\n  const totalSupply = await token.methods.totalSupply().call();\n  return totalSupply;\n};\n\n// Option Contract\n\n\n/**\n * Get owner of the oToken\n * @param {string} oToken\n * @return {Promise<string>}\n */\nexport const getOwner = async (oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const owner = await oTokenContract.methods\n    .owner()\n    .call();\n  return owner;\n};\n\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n\nexport function checkAddressAndAddToStorage(address:string):void {\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n  if (!usedAddresses.includes(address.toLowerCase()) && !usedAddresses.includes(address)) {\n    usedAddresses.push(address);\n    storePreference('watch_addresses', JSON.stringify(usedAddresses));\n  }\n}\n","/* eslint-disable camelcase */\n\nexport const OptionFactory = '0xcc5d905b9c2c8c9329eb4e25dc086369d6c7777c';\n\nexport const OptionExchange = '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71';\nexport const Oracle = '0x7054e08461e3eCb7718B63540adDB3c3A1746415';\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n\n// 0x contracts\nexport const ZeroX_Exchange = '0x61935cbdd02287b511119ddb11aeb42f1593b7ef';\nexport const ZeroX_ERC20Proxy = '0x95e6f48254609a6ee006f7d493c8e5fb97094cef';\nexport const ZeroX_ERC721Proxy = '0xefc70a1b18c432bdc64b596838b4d138f6bc6cad';\nexport const ZeroX_Forwarder = '0x4aa817c6f383c8e8ae77301d18ce48efb16fd2be';\nexport const ZeroX_ZRXToken = '0xe41d2489571d322189246dafa5ebde1f4699f498';\n","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { MetamaskSubprovider } from '@0x/subproviders';\nimport { signatureUtils } from '@0x/order-utils';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative.ts';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { getPreference } from './storage.ts';\nimport {\n  ETH_ADDRESS,\n  Kollateral_Liquidator,\n  Kollateral_Invoker,\n  KETH,\n  ZeroX_Exchange,\n  WETH,\n  Oracle,\n  OptionExchange,\n} from '../constants/contracts';\n\nimport oTokenBytecode from '../constants/bytecode/optionContract';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\nconst ZX_ExchagneABI = require('../constants/abi/ZeroX_Exchange.json');\nconst wrapETHABI = require('../constants/abi/WETH.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: getPreference('theme', 'light') === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Monitor',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n/**\n * Deploy a new oToken contract\n * @param {string} _collateral collateral address\n * @param {number} _collExp - collateral decimals\n * @param {string} _underlying underlying address\n * @param {number} _underlyingExp - underlying decimals\n * @param {number} _oTokenExchangeExp decimals\n * @param {number} _strikePrice strikePrice\n * @param {number} _strikeExp striekPrice exp\n * @param {string} _strike strike asset address\n * @param {number} _expiry\n * @param {number} _windowSize\n */\nexport const deployOTokenContract = async (\n  _collateral,\n  _collExp,\n  _underlying,\n  _underlyingExp,\n  _oTokenExchangeExp,\n  _strikePrice,\n  _strikeExp,\n  _strike,\n  _expiry,\n  _windowSize,\n) => {\n  const account = await checkConnectedAndGetAddress();\n  const contract = new web3.eth.Contract(oTokenABI);\n  const oToken = await contract.deploy({\n    data: oTokenBytecode,\n    // eslint-disable-next-line max-len\n    arguments: [_collateral, _collExp, _underlying, _underlyingExp, _oTokenExchangeExp, _strikePrice, _strikeExp, _strike, _expiry,\n      OptionExchange, Oracle, _windowSize,\n    ],\n  })\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n\n  return oToken.options.address;\n};\n\n/**\n * Option Exchange\n */\n\n/**\n * Set token name ans symbol to newly created token\n * @param {*} oTokenAdr\n * @param {*} _symbol\n * @param {*} _name\n */\nexport const setDetail = async (oTokenAdr, _symbol, _name) => {\n  const account = await checkConnectedAndGetAddress();\n  // const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAdr);\n  await oToken.methods.setDetails(_symbol, _name)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string|BigNumber} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} token\n */\nexport const removeUnderlying = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .removeUnderlying()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVaultAddCollateralAndMint = async (\n  oTokenAddr,\n  collateralAsset,\n  collateralAmt,\n  tokenAmount,\n) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateralAsset === ETH_ADDRESS) {\n    await oToken.methods\n      .createETHCollateralOption(tokenAmount, account)\n      .send({\n        from: account,\n        value: collateralAmt,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    // check allowance\n    const allowance = await getAllowance(collateralAsset, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(collateralAmt))) {\n      await approve(collateralAsset, oTokenAddr, UINT256_MAX);\n    }\n    await oToken.methods\n      .createERC20CollateralOption(tokenAmount, collateralAmt, account)\n      .send({\n        from: account,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/*\n * 0x Protocols\n */\nexport const wrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .deposit()\n    .send({\n      from: account,\n      value: amountInWei,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const unwrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .withdraw(amountInWei)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Sign Order\n * @param {*} order\n */\nexport const signOrder = async (order) => {\n  const account = await checkConnectedAndGetAddress();\n  const provider = new MetamaskSubprovider(web3.currentProvider);\n  return signatureUtils.ecSignOrderAsync(provider, order, account);\n};\n\nexport const fillOrders = async (orders, amts, signatures, value, gasPrice) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchFillOrders(orders, amts, signatures)\n    .send({\n      from: account,\n      value, // Protocol fee: gas to be gas price * 150\n      gasPrice: web3.utils.toWei(gasPrice, 'gwei'), // gwei to wei\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const cancelOrders = async (orders) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchCancelOrders(orders)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","// eslint-disable-next-line max-len\nconst bytes = '600a608081905260021960a081905260078290556008805463ffffffff1990811663fffffffd908117909255600060c081905260e08490526009558354811682179093556101f461010081905261012092909252600b91909155600c805483169091179055610180604052601061014081905260001961016052600d55600e805463ffffffff9083161790556016805490911663ffffffee1763ffffffff60201b191667ffffffee00000000179055348015620000bb57600080fd5b5060405162004873380380620048738339818101604052610180811015620000e257600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b0151610160909b0151999a9899979896979596949593949293919290918b8b8b8b8b8b8b8b8b8b8b8b620001546001600160e01b03620005ec16565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38342106200020b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e7472616374604482015290519081900360640190fd5b8381111562000266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018062004777603c913960400191505060405180910390fd5b6200027a8b6001600160e01b03620005f016565b620002d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180620047b3602d913960400191505060405180910390fd5b620002e5896001600160e01b03620005f016565b6200033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018062004846602d913960400191505060405180910390fd5b62000350866001600160e01b03620005f016565b620003a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062004817602f913960400191505060405180910390fd5b620003bb886001600160e01b03620005f016565b62000412576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180620047e06037913960400191505060405180910390fd5b8b601660086101000a8154816001600160a01b0302191690836001600160a01b031602179055508a601660006101000a81548163ffffffff021916908360030b63ffffffff16021790555089601760006101000a8154816001600160a01b0302191690836001600160a01b0316021790555088601660046101000a81548163ffffffff021916908360030b63ffffffff1602179055506040518060400160405280600181526020018960030b81525060116000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505060405180604001604052808881526020018760030b815250600f6000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505084601860006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360158190555081601960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082600460006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060138190555050505050505050505050505050505050505050505050505062000612565b3390565b6000601e8260030b131580156200060c5750601d198260030b12155b92915050565b61415580620006226000396000f3fe6080604052600436106103975760003560e01c806390e64d13116101dc578063c52987cf11610102578063e184c9be116100a0578063ee1eab4f1161006f578063ee1eab4f14610ed3578063f2fde38b14610f0f578063f70a250814610f42578063faa2041f14610f7557610397565b8063e184c9be14610e35578063ea8c4bcf14610e4a578063eaa376b514610e7d578063ed1f41c314610ea757610397565b8063cfbea789116100dc578063cfbea78914610d86578063d8dfeb4514610db2578063dd62ed3e14610dc7578063dec44c0b14610e0257610397565b8063c52987cf14610cff578063c56749ce14610d14578063cdb4b5c214610d5357610397565b8063b2c2b13f1161017a578063b7b090ee11610149578063b7b090ee14610b4f578063b96661ba14610c85578063ba1be55414610cb1578063bcbaf48714610cc657610397565b8063b2c2b13f14610ae2578063b6e61c0814610b10578063b736554014610b25578063b76fdb6c14610b3a57610397565b80639ed3edf0116101b65780639ed3edf014610a46578063a457c2d714610a5b578063a9059cbb14610a94578063ad8f500814610acd57610397565b806390e64d13146109f657806395d89b4114610a0b5780639ce0725114610a2057610397565b806339509351116102c15780636fd865f91161025f5780638a5e8cc71161022e5780638a5e8cc7146109a25780638c765e94146109b75780638da5cb5b146109cc5780638f32d59b146109e157610397565b80636fd865f91461091b57806370a0823114610945578063715018a61461097857806386f547121461098d57610397565b806358b36dac1161029b57806358b36dac146107f55780635ca7c8a61461089d578063686c1e21146108dc5780636f307dc31461090657610397565b8063395093511461074c5780633bd33f621461078557806352f89fe3146107b657610397565b806318160ddd116103395780633226052d116103085780633226052d146106845780633237c158146106c3578063352ade55146106ed5780633667429f1461072057610397565b806318160ddd146105c65780631a0e21bd146105db57806323b872dd14610616578063313ce5671461065957610397565b8063095ea7b311610375578063095ea7b3146104d65780630d453efb146105235780630d6cd8aa146105565780630eb9af381461056b57610397565b806301b4a3c11461039c578063060ab2ea146103e757806306fdde031461044c575b600080fd5b3480156103a857600080fd5b506103d5600480360360408110156103bf57600080fd5b506001600160a01b038135169060200135610f8a565b60408051918252519081900360200190f35b3480156103f357600080fd5b506103fc61113e565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610438578181015183820152602001610420565b505050509050019250505060405180910390f35b34801561045857600080fd5b506104616111e5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561049b578181015183820152602001610483565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104e257600080fd5b5061050f600480360360408110156104f957600080fd5b506001600160a01b038135169060200135611273565b604080519115158252519081900360200190f35b34801561052f57600080fd5b5061050f6004803603602081101561054657600080fd5b50356001600160a01b0316611290565b34801561056257600080fd5b5061050f6112b5565b34801561057757600080fd5b5061059e6004803603602081101561058e57600080fd5b50356001600160a01b03166112e3565b6040805194855260208501939093528383019190915215156060830152519081900360800190f35b3480156105d257600080fd5b506103d5611317565b3480156105e757600080fd5b50610614600480360360408110156105fe57600080fd5b50803590602001356001600160a01b031661131d565b005b34801561062257600080fd5b5061050f6004803603606081101561063957600080fd5b506001600160a01b03813581169160208101359091169060400135611486565b34801561066557600080fd5b5061066e611513565b6040805160ff9092168252519081900360200190f35b34801561069057600080fd5b50610614600480360360608110156106a757600080fd5b50803590602081013590604001356001600160a01b031661151c565b3480156106cf57600080fd5b50610614600480360360208110156106e657600080fd5b5035611634565b3480156106f957600080fd5b50610702611824565b60408051928352600391820b90910b60208301528051918290030190f35b6106146004803603604081101561073657600080fd5b50803590602001356001600160a01b0316611830565b34801561075857600080fd5b5061050f6004803603604081101561076f57600080fd5b506001600160a01b038135169060200135611945565b34801561079157600080fd5b5061079a611999565b604080516001600160a01b039092168252519081900360200190f35b3480156107c257600080fd5b50610614600480360360608110156107d957600080fd5b50803590602081013590604001356001600160a01b03166119a8565b6106146004803603604081101561080b57600080fd5b81359190810190604081016020820135600160201b81111561082c57600080fd5b82018360208201111561083e57600080fd5b803590602001918460208302840111600160201b8311171561085f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506119c1945050505050565b3480156108a957600080fd5b50610614600480360360608110156108c057600080fd5b50803590602081013590604001356001600160a01b0316611ad9565b3480156108e857600080fd5b506103d5600480360360208110156108ff57600080fd5b5035611aee565b34801561091257600080fd5b5061079a611b1c565b34801561092757600080fd5b506103d56004803603602081101561093e57600080fd5b5035611b2b565b34801561095157600080fd5b506103d56004803603602081101561096857600080fd5b50356001600160a01b0316611b6f565b34801561098457600080fd5b50610614611b8a565b34801561099957600080fd5b5061050f611c1b565b3480156109ae57600080fd5b5061079a611d88565b3480156109c357600080fd5b50610702611d97565b3480156109d857600080fd5b5061079a611da3565b3480156109ed57600080fd5b5061050f611db2565b348015610a0257600080fd5b5061050f611dd6565b348015610a1757600080fd5b50610461611ddf565b6103d560048036036020811015610a3657600080fd5b50356001600160a01b0316611e3a565b348015610a5257600080fd5b50610702611f74565b348015610a6757600080fd5b5061050f60048036036040811015610a7e57600080fd5b506001600160a01b038135169060200135611f80565b348015610aa057600080fd5b5061050f60048036036040811015610ab757600080fd5b506001600160a01b038135169060200135611fee565b348015610ad957600080fd5b5061079a612002565b348015610aee57600080fd5b50610af7612011565b60408051600392830b90920b8252519081900360200190f35b348015610b1c57600080fd5b50610af7612021565b348015610b3157600080fd5b5061070261202a565b348015610b4657600080fd5b50610614612036565b348015610b5b57600080fd5b5061061460048036036040811015610b7257600080fd5b810190602081018135600160201b811115610b8c57600080fd5b820183602082011115610b9e57600080fd5b803590602001918460018302840111600160201b83111715610bbf57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610c1157600080fd5b820183602082011115610c2357600080fd5b803590602001918460018302840111600160201b83111715610c4457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612142945050505050565b61061460048036036040811015610c9b57600080fd5b50803590602001356001600160a01b03166121d3565b348015610cbd57600080fd5b506107026121e7565b348015610cd257600080fd5b5061061460048036036040811015610ce957600080fd5b506001600160a01b0381351690602001356121f3565b348015610d0b57600080fd5b506107026124f7565b348015610d2057600080fd5b5061061460048036036060811015610d3757600080fd5b50803590602081013590604001356001600160a01b0316612503565b348015610d5f57600080fd5b5061050f60048036036020811015610d7657600080fd5b50356001600160a01b0316612517565b61061460048036036040811015610d9c57600080fd5b50803590602001356001600160a01b031661253c565b348015610dbe57600080fd5b5061079a612550565b348015610dd357600080fd5b506103d560048036036040811015610dea57600080fd5b506001600160a01b0381358116916020013516612566565b348015610e0e57600080fd5b506103d560048036036020811015610e2557600080fd5b50356001600160a01b0316612591565b348015610e4157600080fd5b506103d561265c565b348015610e5657600080fd5b5061061460048036036020811015610e6d57600080fd5b50356001600160a01b0316612662565b348015610e8957600080fd5b5061061460048036036020811015610ea057600080fd5b5035612704565b61061460048036036040811015610ebd57600080fd5b50803590602001356001600160a01b0316612806565b348015610edf57600080fd5b5061061460048036036080811015610ef657600080fd5b5080359060208101359060408101359060600135612819565b348015610f1b57600080fd5b5061061460048036036020811015610f3257600080fd5b50356001600160a01b03166129f1565b348015610f4e57600080fd5b5061050f60048036036020811015610f6557600080fd5b50356001600160a01b0316612a44565b348015610f8157600080fd5b50610614612a51565b6000610f94611dd6565b15610fd4576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b601654604080516323b872dd60e01b8152336004820152306024820152604481018590529051600160401b9092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505161109b5760405162461bcd60e51b8152600401808060200182810382526027815260200180613e626027913960400191505060405180910390fd5b6110a483611290565b6110e3576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b604080516001600160a01b038516815260208101849052338183015290517f2199418ea9428ed3ff7d460860e1edaf5831452fa4ea0f8d1a60d63c603487829181900360600190a16111358383612b49565b90505b92915050565b6060806000805b6006548110156111dc576111796006828154811061115f57fe5b6000918252602090912001546001600160a01b0316611290565b156111d4576006818154811061118b57fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106111b557fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101611145565b50909150505b90565b601a805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561126b5780601f106112405761010080835404028352916020019161126b565b820191906000526020600020905b81548152906001019060200180831161124e57829003601f168201915b505050505081565b6000611287611280612bc8565b8484612bcc565b50600192915050565b6001600160a01b03811660009081526005602052604090206003015460ff165b919050565b60006112ce601354601554612cb890919063ffffffff16565b42101580156112de575060155442105b905090565b6001600160a01b03166000908152600560205260409020805460018201546002830154600390930154919390929160ff1690565b60035490565b611325611dd6565b15611365576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61136e33611290565b6113ad576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600090815260056020526040812060018101549091906113d4908563ffffffff612cfa16565b90506113e4826000015482612d54565b611426576040805162461bcd60e51b815260206004820152600e60248201526d1d5b9cd85999481d1bc81b5a5b9d60921b604482015290519081900360640190fd5b600182018190556114378385612e59565b604080516001600160a01b038516815260208101869052338183015290517f5e5aaabf04e3760968ffb551bdf9708f4dbf95d53ad98539e91a56b125e88f089181900360600190a150505b5050565b6000611493848484612f4b565b6115098461149f612bc8565b61150485604051806060016040528060288152602001613fcd602891396001600160a01b038a166000908152600260205260408120906114dd612bc8565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6130a916565b612bcc565b5060019392505050565b601c5460ff1681565b6115263383610f8a565b50611531833061131d565b600480546040805163095ea7b360e01b81526001600160a01b0390921692820192909252602481018590529051309163095ea7b39160448083019260209291908290030181600087803b15801561158757600080fd5b505af115801561159b573d6000803e3d6000fd5b505050506040513d60208110156115b157600080fd5b50506004805460408051637dafae5960e01b81526001600160a01b03858116948201949094523060248201526000604482018190526064820188905291519390921692637dafae5992608480820193929182900301818387803b15801561161757600080fd5b505af115801561162b573d6000803e3d6000fd5b50505050505050565b61163c611dd6565b1561167c576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b600081116116d1576040805162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665203020636f6c6c61746572616c000000000000604482015290519081900360640190fd5b6116da33611290565b611719576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b3360008181526005602052604090209061173290613140565b8211156117705760405162461bcd60e51b8152600401808060200182810382526027815260200180613f796027913960400191505060405180910390fd5b8054600090611785908463ffffffff612cb816565b9050611795818360010154612d54565b6117d8576040805162461bcd60e51b815260206004820152600f60248201526e5661756c7420697320756e7361666560881b604482015290519081900360640190fd5b8082556117e5338461315b565b6040805184815233602082015281517f5a945309b3c58e9bb259128c2a530a6579dc75ac1d7d61b3db4c0b8305a16821929181900390910190a1505050565b600b54600c5460030b82565b611838611c1b565b5061184382306121d3565b600480546040805163095ea7b360e01b81526001600160a01b0390921692820192909252602481018490529051309163095ea7b39160448083019260209291908290030181600087803b15801561189957600080fd5b505af11580156118ad573d6000803e3d6000fd5b505050506040513d60208110156118c357600080fd5b50506004805460408051637dafae5960e01b81526001600160a01b03858116948201949094523060248201526000604482018190526064820187905291519390921692637dafae5992608480820193929182900301818387803b15801561192957600080fd5b505af115801561193d573d6000803e3d6000fd5b505050505050565b6000611287611952612bc8565b846115048560026000611963612bc8565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff612cfa16565b6004546001600160a01b031681565b6119b0611c1b565b506119bc838383611ad9565b505050565b60005b8151811015611a9b5760008282815181106119db57fe5b602002602001015190506119ee81611290565b611a295760405162461bcd60e51b815260040180806020018281038252602f815260200180614036602f913960400191505060405180910390fd5b6001600160a01b038116600090815260056020526040902084611a4e57505050611482565b84816001015410611a6b57611a638583613246565b505050611482565b6001810154611a8190869063ffffffff612cb816565b9450611a91816001015483613246565b50506001016119c4565b5081156114825760405162461bcd60e51b815260040180806020018281038252602d815260200180613ef4602d913960400191505060405180910390fd5b611ae33383610f8a565b506119bc838261131d565b60408051808201909152600d548152600e54600390810b810b900b60208201526000906111389083906136a9565b6017546001600160a01b031681565b601654601254600091600160201b9004600390810b91810b91909103900b611b688367ffffffffffffffff808416600a0a1663ffffffff6137a416565b9392505050565b6001600160a01b031660009081526001602052604090205490565b611b92611db2565b611bd1576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000611c25611dd6565b15611c65576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b611c6e33611290565b15611cb8576040805162461bcd60e51b815260206004820152601560248201527415985d5b1d08185b1c9958591e4818dc99585d1959605a1b604482015290519081900360640190fd5b60408051608081018252600080825260208083018281528385018381526001606086018181523380875260058652888720975188559351878301559151600287015590516003909501805460ff1916951515959095179094556006805494850181559092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90920180546001600160a01b03191682179055825190815291517f66a872561db77eb92ef3079a44a5af00c68c3a09e0976814a95bd91721f57c2f9281900390910190a150600190565b6019546001600160a01b031681565b60075460085460030b82565b6000546001600160a01b031690565b600080546001600160a01b0316611dc7612bc8565b6001600160a01b031614905090565b60155442101590565b601b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561126b5780601f106112405761010080835404028352916020019161126b565b6000611e44611dd6565b15611e84576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b601654611ea090600160401b90046001600160a01b0316612a44565b611edb5760405162461bcd60e51b8152600401808060200182810382526028815260200180613dcd6028913960400191505060405180910390fd5b611ee482611290565b611f23576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b604080516001600160a01b0384168152346020820152338183015290517ff24ce6016de57e90501829715846e26ac283a0aabfc160647e0ae8b05e0f433d9181900360600190a16111388234612b49565b600954600a5460030b82565b6000611287611f8d612bc8565b84611504856040518060600160405280602581526020016140fc6025913960026000611fb7612bc8565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6130a916565b6000611287611ffb612bc8565b8484612f4b565b6018546001600160a01b031681565b601654600160201b900460030b81565b60165460030b81565b60115460125460030b82565b61203e611dd6565b6120795760405162461bcd60e51b8152600401808060200182810382526025815260200180613e3d6025913960400191505060405180910390fd5b61208233611290565b6120c1576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600081815260056020526040812080546002820180548484556001840185905593905590929091906120f4908361315b565b6120fe33826137fd565b6040805183815260208101839052338183015290517fe481532a3f7d078365ca0145442ed0a0a3e0443f3c0bae0c29cff131112678389181900360600190a1505050565b61214a611db2565b612189576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b815161219c90601a906020850190613c85565b5080516121b090601b906020840190613c85565b50601254601c805460ff191660039290920b60000360ff16919091179055611482565b6121dc33611e3a565b50611482828261131d565b600d54600e5460030b82565b6121fb611dd6565b1561223b576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61224482611290565b612283576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b6001600160a01b03821660009081526005602052604090206122a483612517565b6122e5576040805162461bcd60e51b815260206004820152600d60248201526c5661756c74206973207361666560981b604482015290519081900360640190fd5b336001600160a01b0384161415612343576040805162461bcd60e51b815260206004820181905260248201527f4f776e65722063616e2774206c6971756964617465207468656d73656c766573604482015290519081900360640190fd5b600061236883604051806040016040528060018152602001600060030b8152506138a3565b604080518082019091526007548152600854600390810b810b900b60208201529091506000906123999085906138a3565b905060006123ad838363ffffffff612cfa16565b600b5485549192506000916123c79163ffffffff6137a416565b600c549091506000600391820b90910b131561240257600c546123fb908290600390810b900b600a0a63ffffffff6137a416565b9050612426565b600c54612423908290600390810b600003900b600a0a63ffffffff61398516565b90505b808211156124655760405162461bcd60e51b8152600401808060200182810382526037815260200180613f216037913960400191505060405180910390fd5b8454612477908363ffffffff612cb816565b8555600185015461248e908763ffffffff612cb816565b600186015561249d33876139c7565b6124a7338361315b565b604080518381526001600160a01b0389166020820152338183015290517fcab8e1abb9f8235c6db895cf185336dc9461aecf477b98c1be83687ee549e66a9181900360600190a150505050505050565b600f5460105460030b82565b61250b611c1b565b50611531838330611ad9565b60008061253461252684613140565b61252f85613ac3565b612d54565b159392505050565b61254533611e3a565b50611843823061131d565b601654600160401b90046001600160a01b031681565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600061259c82612517565b15612654576001600160a01b0382166000908152600560205260408120600c54600b5482549293926125f192600390810b8503900b600a0a916125e5919063ffffffff6137a416565b9063ffffffff61398516565b600854909150600390810b600003900b600a0a61260c613d03565b60408051808201909152600754819061262b908563ffffffff612cfa16565b8152600854600390810b900b602090910152905061264983826136a9565b9450505050506112b0565b5060006112b0565b60155481565b61266a611db2565b6126a9576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b6014805460009091556126bc828261315b565b604080516001600160a01b03841681526020810183905281517f88b171bb78d3ac5e1caa8e729dddce4e1322e84c80c093ebbe52507b62c77d98929181900390910190a15050565b61270c611dd6565b1561274c576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b61275533611290565b612794576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b33600090815260056020526040902060018101546127b8908363ffffffff612cb816565b60018201556127c733836139c7565b604080513381526020810184905281517fdf8cebdea6ef1fd20576b80bc951377c0e61e2a8169153a1f836673ccce80e62929181900390910190a15050565b61280e611c1b565b5061148282826121d3565b612821611db2565b612860576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b60c88411156128a05760405162461bcd60e51b8152600401808060200182810382526025815260200180613ecf6025913960400191505060405180910390fd5b6103e88311156128e15760405162461bcd60e51b815260040180806020018281038252602b815260200180613d80602b913960400191505060405180910390fd5b6064821115612937576040805162461bcd60e51b815260206004820181905260248201527f43616e27742068617665207472616e73616374696f6e20666565203e20313025604482015290519081900360640190fd5b600a8110156129775760405162461bcd60e51b8152600401808060200182810382526028815260200180613d586028913960400191505060405180910390fd5b6007849055600b8390556009829055600d8190557f3450d20c21ea671871fed271900cc8ff03badafa9b6fe2ff7f86991950e86b6b848484846129b8611da3565b6040805195865260208601949094528484019290925260608401526001600160a01b03166080830152519081900360a00190a150505050565b6129f9611db2565b612a38576040805162461bcd60e51b81526020600482018190526024820152600080516020613ff5833981519152604482015290519081900360640190fd5b612a4181613ae1565b50565b6001600160a01b03161590565b612a5a33611290565b612a99576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b3360009081526005602052604090206002810154612af6576040805162461bcd60e51b81526020600482015260156024820152744e6f20756e6465726c79696e672062616c616e636560581b604482015290519081900360640190fd5b6002810180546000909155612b0b33826137fd565b6040805182815233602082015281517fea0bff65fa9380b944e9a761f9c6a665ad2d31e74706a52773ddb45c8a57c83d929181900390910190a15050565b6000612b53611dd6565b15612b93576040805162461bcd60e51b815260206004820152601860248201526000805160206140dc833981519152604482015290519081900360640190fd5b6001600160a01b03831660009081526005602052604090208054612bbd908463ffffffff612cfa16565b908190559392505050565b3390565b6001600160a01b038316612c115760405162461bcd60e51b815260040180806020018281038252602481526020018061408a6024913960400191505060405180910390fd5b6001600160a01b038216612c565760405162461bcd60e51b8152600401808060200182810382526022815260200180613e1b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061113583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506130a9565b600082820183811015611135576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080612d75601660089054906101000a90046001600160a01b0316613b81565b601854909150600090612d90906001600160a01b0316613b81565b600f54600d54919250600091612dbe9190612db290889063ffffffff6137a416565b9063ffffffff6137a416565b601054600e54919250600391820b910b016000612de5846125e58a8863ffffffff6137a416565b601654909150600390810b90600090819085810b9084900b1215612e295782850360030b915083612e2087600a85900a63ffffffff6137a416565b11159050612e4b565b84830360030b9150612e4584600a84900a63ffffffff6137a416565b86111590505b9a9950505050505050505050565b6001600160a01b038216612eb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354612ec7908263ffffffff612cfa16565b6003556001600160a01b038216600090815260016020526040902054612ef3908263ffffffff612cfa16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038316612f905760405162461bcd60e51b81526004018080602001828103825260258152602001806140656025913960400191505060405180910390fd5b6001600160a01b038216612fd55760405162461bcd60e51b8152600401808060200182810382526023815260200180613d356023913960400191505060405180910390fd5b61301881604051806060016040528060268152602001613ea9602691396001600160a01b038616600090815260016020526040902054919063ffffffff6130a916565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461304d908263ffffffff612cfa16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156131385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130fd5781810151838201526020016130e5565b50505050905090810190601f16801561312a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b031660009081526005602052604090205490565b60165461317790600160401b90046001600160a01b0316612a44565b156131b8576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156131b2573d6000803e3d6000fd5b50611482565b6016546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151600160401b9093049091169163a9059cbb916044808201926020929091908290030181600087803b15801561321657600080fd5b505af115801561322a573d6000803e3d6000fd5b505050506040513d602081101561324057600080fd5b50505050565b61324e6112b5565b6132895760405162461bcd60e51b815260040180806020018281038252602d815260200180613fa0602d913960400191505060405180910390fd5b61329281611290565b6132d1576040805162461bcd60e51b81526020600482015260146024820152600080516020613e89833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526005602052604090208261333b576040805162461bcd60e51b815260206004820152601860248201527f43616e27742065786572636973652030206f546f6b656e730000000000000000604482015290519081900360640190fd5b806001015483111561337e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806140ae602e913960400191505060405180910390fd5b8261338833611b6f565b10156133d0576040805162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f756768206f546f6b656e7360701b604482015290519081900360640190fd5b60006133db84611b2b565b60028301549091506133f3908263ffffffff612cfa16565b600283015560408051808201909152600181526000602082018190529061341b9086906138a3565b604080518082019091526009548152600a54600390810b810b900b602082015290915060009061344c9087906138a3565b601454909150613462908263ffffffff612cfa16565b6014556000613477838363ffffffff612cfa16565b85549091508111156134d0576040805162461bcd60e51b815260206004820181905260248201527f5661756c7420756e64657277617465722c2063616e2774206578657263697365604482015290519081900360640190fd5b84546134e2908263ffffffff612cb816565b855560018501546134f9908863ffffffff612cb816565b6001860155601754613513906001600160a01b0316612a44565b1561356757833414613562576040805162461bcd60e51b8152602060048201526013602482015272496e636f7272656374206d73672e76616c756560681b604482015290519081900360640190fd5b61363e565b601754604080516323b872dd60e01b81523360048201523060248201526044810187905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156135c157600080fd5b505af11580156135d5573d6000803e3d6000fd5b505050506040513d60208110156135eb57600080fd5b505161363e576040805162461bcd60e51b815260206004820152601c60248201527f436f756c64206e6f74207472616e7366657220696e20746f6b656e7300000000604482015290519081900360640190fd5b61364833886139c7565b613652338461315b565b604080518581526020810185905233818301526001600160a01b038816606082015290517ffa7bab37479e50a9b24a9412b879d400de9bcaa1e3a2b343e90bb370d85bbaa79181900360800190a150505050505050565b6000806136ca601660089054906101000a90046001600160a01b0316613b81565b6018549091506000906136e5906001600160a01b0316613b81565b600f5485519192506000916136ff9163ffffffff6137a416565b601054602087015191925060030b016000613724846125e58a8863ffffffff6137a416565b601654909150600390810b90600090819085810b9084900b12156137755782850360030b915061376e61376187600a85900a63ffffffff6137a416565b859063ffffffff61398516565b9050612e4b565b84830360030b9150613795866125e586600a86900a63ffffffff6137a416565b9b9a5050505050505050505050565b6000826137b357506000611138565b828202828482816137c057fe5b04146111355760405162461bcd60e51b8152600401808060200182810382526021815260200180613f586021913960400191505060405180910390fd5b601754613812906001600160a01b0316612a44565b1561384d576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156131b2573d6000803e3d6000fd5b6017546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561321657600080fd5b6000806138c4601660089054906101000a90046001600160a01b0316613b81565b6018549091506000906138df906001600160a01b0316613b81565b9050600061390782612db28760000151612db2600f600001548b6137a490919063ffffffff16565b6016546020870151601054929350600391820b92820b01919091039060009082900b811215613955578161394d866125e58663ffffffff808616600a0a8116906137a416565b91505061397a565b6000829003613976866125e58663ffffffff808616600a0a81169061398516565b9150505b979650505050505050565b600061113583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613c20565b6001600160a01b038216613a0c5760405162461bcd60e51b81526004018080602001828103825260218152602001806140156021913960400191505060405180910390fd5b613a4f81604051806060016040528060228152602001613dab602291396001600160a01b038516600090815260016020526040902054919063ffffffff6130a916565b6001600160a01b038316600090815260016020526040902055600354613a7b908263ffffffff612cb816565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b031660009081526005602052604090206001015490565b6001600160a01b038116613b265760405162461bcd60e51b8152600401808060200182810382526026815260200180613df56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216613ba05750670de0b6b3a76400006112b0565b601954604080516341976e0960e01b81526001600160a01b038581166004830152915191909216916341976e09916024808301926020929190829003018186803b158015613bed57600080fd5b505afa158015613c01573d6000803e3d6000fd5b505050506040513d6020811015613c1757600080fd5b505190506112b0565b60008183613c6f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156130fd5781810151838201526020016130e5565b506000838581613c7b57fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613cc657805160ff1916838001178555613cf3565b82800160010185558215613cf3579182015b82811115613cf3578251825591602001919060010190613cd8565b50613cff929150613d1a565b5090565b604080518082019091526000808252602082015290565b6111e291905b80821115613cff5760008155600101613d2056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737343616e27742068617665206d696e436f6c6c61746572616c697a6174696f6e526174696f203c203143616e2774206c6971756964617465206d6f7265207468616e2031303025206f6620746865207661756c7445524332303a206275726e20616d6f756e7420657863656564732062616c616e6365455448206973206e6f74207468652073706563696669656420636f6c6c61746572616c20747970654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737343616e277420636f6c6c65637420636f6c6c61746572616c20756e74696c20657870697279436f756c64206e6f74207472616e7366657220696e20636f6c6c61746572616c20746f6b656e735661756c7420646f6573206e6f7420657869737400000000000000000000000045524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543616e27742068617665203e323025206c69717569646174696f6e20696e63656e74697665537065636966696564207661756c7473206861766520696e73756666696369656e7420636f6c6c61746572616c43616e206f6e6c79206c6971756964617465206c69717569646174696f6e20666163746f7220617420616e7920676976656e2074696d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e27742072656d6f7665206d6f726520636f6c6c61746572616c207468616e206f776e656443616e2774206578657263697365206f757473696465206f66207468652065786572636973652077696e646f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742065786572636973652066726f6d2061207661756c74207468617420646f65736e277420657869737445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e2774206578657263697365206d6f7265206f546f6b656e73207468616e20746865206f776e6572206861734f7074696f6e7320636f6e74726163742065787069726564000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7230582078d274c261df68e9d5018737bd71b890ed72cabfe0e584eb1d201ad752666c9564736f6c634300050a003245786572636973652077696e646f772063616e2774206265206c6f6e676572207468616e2074686520636f6e74726163742773206c6966657370616e636f6c6c61746572616c206578706f6e656e74206e6f742077697468696e2065787065637465642072616e67656f546f6b656e2065786368616e67652072617465206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765737472696b65207072696365206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765756e6465726c79696e67206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765';\nexport default bytes;\n","import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\nimport { checkAddressAndAddToStorage } from '../../utils/storage';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    checkAddressAndAddToStorage(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\ntype switchThemeProps = {\n  theme: string,\n  updateTheme: Function\n}\n\nfunction SwitchMode({ theme, updateTheme }: switchThemeProps) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      label={'Theme'}\n      display=\"icon\"\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n    />\n  );\n}\n\n\nexport default SwitchMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Bar, BackButton, LinkBase,\n} from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SwitchTheme';\n\ntype NavbarProps = {\n  theme:string,\n  updateTheme: Function,\n  user: string,\n  setUser: Function\n}\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}:NavbarProps) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"Home\"\n              onClick={() => {\n                history.push('/');\n              }}\n              isSelected={history.location.pathname === '/'}\n            />\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n              isSelected={history.location.pathname === '/myvaults/'}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n              isSelected={history.location.pathname === '/options/'}\n            />\n            <LinkButton\n              title=\"Exchanges\"\n              onClick={() => {\n                history.push('/uniswap/');\n              }}\n              isSelected={history.location.pathname.includes('/uniswap/')}\n            />\n            <LinkButton\n              title=\"Uniswap Trade\"\n              onClick={() => {\n                history.push('/trade/uniswap');\n              }}\n              isSelected={history.location.pathname.includes('/trade/uniswap')}\n            />\n            \n            <LinkButton\n              title=\"0x Trade\"\n              onClick={() => {\n                history.push('/trade/0x');\n              }}\n              isSelected={history.location.pathname.includes('/trade/0x')}\n            />\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\ntype linkButtonProps = {\n  title:string,\n  onClick: Function,\n  isSelected?:boolean\n}\n\nfunction LinkButton({ title, onClick, isSelected = false }:linkButtonProps) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: isSelected ? 1 : 0.5, fontSize: 16 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, Box, LinkBase, Tag,\n} from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Monitor\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Exchange\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://i.imgur.com/4eX8GlY.png\"\n            onClick={() => {\n              history.push('/uniswap/');\n            }}\n          />\n        </div>\n\n      </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"Trade\"\n            tag=\"new\"\n            description=\"Trade ETH Options on 0x\"\n            iconUrl=\"https://cdn.worldvectorlogo.com/logos/0x-virtual-money-.svg\"\n            onClick={() => {\n              history.push('/trade/0x');\n            }}\n          />\n        </div>\n      </div>\n\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  iconUrl: string,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","export const USDC = {\n  addr: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  decimals: 6,\n  symbol: 'USDC',\n};\n\nexport const OPYN_ETH = {\n  addr: '0x0000000000000000000000000000000000000000',\n  decimals: 18,\n  symbol: 'ETH',\n};\n\nexport const cDAI = {\n  addr: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n  decimals: 8,\n  symbol: 'cDai',\n};\n\nexport const cUSDC = {\n  addr: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n  decimals: 8,\n  symbol: 'cUSDC',\n};\n\nexport const CurveFi = {\n  addr: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n  decimals: 18,\n  symbol: 'yDAI+yUSDC+yUSDT+yTUSD',\n};\n\nexport const WETH = {\n  addr: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  decimals: 18,\n  symbol: 'WETH',\n};\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { ETHOption } from '../../types'\nexport const eth_calls: ETHOption[] = [\n  {\n    addr: '0xbcae1db14f1b366cd4611c75aab2031492b136e9',\n    title: 'ETH Call $250 05/29/20',\n    type: 'call',\n\n    // constants in contract\n    symbol: 'oETH $250 Call',\n    name: 'Opyn ETH Call $250 05/29/20',\n    decimals: 6,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.USDC,\n    strike: tokens.OPYN_ETH,\n    strikePrice: 4e-9,\n    strikePriceInUSD: 250,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xb1C9e4d652259467e4556BA627B00b284481744E', // wrong\n    expiry: 1590739200,\n  },\n];\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { ETHOption } from '../../types'\n\nexport const eth_puts: ETHOption[] = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n    type: 'put',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n    type: 'put',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0xaefc7b368f7b536c9e5e3f342bf534931ce58584',\n    title: 'ETH Put $150 04/24/20',\n    type: 'put',\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 04/24/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xD2840757B0DeF8fBC2A7DC990CEF75975C2d3F0e',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0x461cd647add2159e85ad57141cb5371566fceed3',\n    title: 'ETH Put $160 05/01/20',\n    type: 'put',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/01/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xd03f7298aE74a8618711Ec43F45Ad2225F141aa4',\n    expiry: 1588320000,\n  },\n  {\n    addr: '0xc8f95e13eff0165e5e381ea1878c56d93562d7d7',\n    title: 'ETH Put $160 05/08/20',\n    type: 'put',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/08/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x572040e32c69b29a262392Ba7967B9f25724da39',\n    expiry: 1588924800,\n  },\n  {\n    addr: '0xd79ab5a71fa2099ef30df0e8a81f8c200aac36f1',\n    title: 'ETH Put $200 05/08/20',\n    type: 'put',\n\n    symbol: 'oETH $200 Put',\n    name: 'Opyn ETH Put $200 05/08/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 2e-5,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x05c0Fd229017b40CaDbffeDEd73ceaeac68Fa4C2',\n    expiry: 1588924800,\n  },\n  {\n    addr: '0x684a1d736e934a45f6f5d00c62ddf7a0b7d2064b',\n    title: 'ETH Put $200 05/15/20',\n    type: 'put',\n\n    symbol: 'oETH $200 Put',\n    name: 'Opyn ETH Put $200 05/15/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 2e-5,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xA7f55C14200136343450B93067d587D112EB7c54',\n    expiry: 1589529600,\n  },\n  {\n    addr: '0xecf6f2fd8d2a8e17397066348d449566d5407174',\n    title: 'ETH Put $150 05/29/20',\n    type: 'put',\n\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 05/29/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x75B865EA22a2b6633038E15647357268C7F9Ac54',\n    expiry: 1590739200,\n  },\n  {\n    addr: '0x750aea5fbcd4986f1390ef4d2b98ecce690061fa',\n    title: 'ETH Put $180 05/15/20',\n    type: 'put',\n    symbol: 'oETH $180 Put',\n    name: 'Opyn ETH Put $180 05/15/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.8e-5,\n    strikePriceInUSD: 180,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x98686D724cC49DC58Ac5366fA268CCC968B1227d',\n    expiry: 1589529600,\n  },\n  {\n    addr: '0xb036f902ff0e7847a6f2be49045a10ce55a9aa87',\n    title: 'ETH Put $200 05/22/20',\n    type: 'put',\n    symbol: 'oETH $200 Put',\n    name: 'Opyn ETH Put $200 05/22/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 2e-5,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x1D8D9FF60C8C2a579215CA4a8b44a72D01F15B3e',\n    expiry: 1590134400,\n  },\n];\n","import * as tokens from '../tokens';\nimport { option } from '../../types'\n/* eslint-disable import/prefer-default-export */\nexport const insurances: option[] = [\n  {\n    title: 'cDai Insurance',\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cUSDC,\n    strike: tokens.USDC,\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.CurveFi,\n    strike: tokens.USDC,\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n","import { eth_calls } from './calls';\nimport { eth_puts } from './puts';\nimport { insurances } from './insurances';\n\n\nexport const eth_options = eth_puts.concat(eth_calls);\nexport const allOptions = insurances.concat(eth_options);\nexport {\n  eth_calls, eth_puts, insurances,\n};\n","import React from 'react';\nimport { IdentityBadge } from '@aragon/ui';\n\ntype AddressBlockProps = {\n  label:string,\n  address: string\n}\n\nfunction AddressBlock({ label, address }: AddressBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nexport default AddressBlock;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n}\n\nfunction BalanceBlock({ asset, balance }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\n\ntype RatioTagProps = {\n  isSafe: boolean,\n  ratio: number,\n  useCollateral? : boolean,\n}\nfunction RatioTag({ isSafe, ratio, useCollateral = true }:RatioTagProps) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }:{title: string}) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle;\n","import React from 'react';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }:{ onClick: Function }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton;\n","import React from 'react';\n\nfunction HelperText({ label, amt }: { label: string, amt: string }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default HelperText;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false, ethPrice\n}:{label:string, amt: string|number|BigNumber, symbol?:string, forceDisplay?:boolean, ethPrice?:BigNumber }) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}> {amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}> {symbol}</span>\n        { ethPrice ? <span style={{ fontSize: 12 }}> ≈{ethPrice.times(amtBN).toFixed(2)} USD </span> : '' }\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default PriceSection;\n","import React from 'react';\nimport { useTheme } from '@aragon/ui';\n\nfunction WarningText({ text }:{text:string}) {\n  const theme = useTheme();\n  return (\n    <div style={{ color: theme.warning, fontSize: 12, padding: '3px' }}>\n      {text}\n    </div>\n  );\n}\n\n\nexport default WarningText;\n","import React, { ReactChild } from 'react';\n\ntype commentProps = {\n  text: string | ReactChild\n}\n\nfunction Comment({ text }: commentProps) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage()} label=\"Manage\" />;\n}\n\ntype openVaultButtonProps = {\n  oToken: string,\n  user: string,\n  goToMangePage?: boolean\n}\n\nfunction OpenVaultButton({ oToken, user, goToMangePage = true }: openVaultButtonProps) {\n  const history = useHistory();\n\n  const openAndGoToVault = async () => {\n    await openVault(oToken);\n    if (goToMangePage) history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={openAndGoToVault}\n      label=\"Open\"\n    />\n  );\n}\n\n\nexport { ManageVaultButton, OpenVaultButton };\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\ntype checkBoxProps = {\n  text: string,\n  checked: boolean,\n  onCheck: Function\n}\n\nfunction MyCheckBox({ text, checked, onCheck }: checkBoxProps) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import ReactGA from 'react-ga';\nconst projectId = process.env.REACT_APP_GA_PROJECT_ID || ''\nReactGA.initialize(projectId);\n\nexport default ReactGA;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs, Timer\n} from '@aragon/ui';\n\nimport { insurances, eth_calls, eth_puts } from '../../constants/options';\nimport { Comment, CheckBox } from '../common';\nimport { getPreference, storePreference } from '../../utils/storage';\n\nimport * as types from '../../types'\n\nimport tracker from '../../utils/tracker';\n\nfunction AllContracts() {\n  useEffect(() => {\n    tracker.pageview('/options/');\n  }, []);\n\n  const storedOptionTab = getPreference('optionTab', '0');\n  const storedShowExpired = getPreference('showExpired', '0');\n\n  const [tabSelected, setTabSelected] = useState(parseInt(storedOptionTab, 10));\n  const [showExpired, setShowExpired] = useState(storedShowExpired === '1'); // whether to show expired options\n\n  const history = useHistory();\n  const goToToken = (addr:string) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Choose an option contract to proceed.\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n            checked={showExpired}\n          />\n        </div>\n      </div>\n      <Tabs\n        items={['DeFi Insurance', 'Put Options', 'Call Options']}\n        selected={tabSelected}\n        onChange={(choice:number) => {\n          setTabSelected(choice);\n          storePreference('optionTab', choice.toString());\n        }}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', 'Expires in', '']}\n          entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Timer end={new Date(expiry * 1000)} format='Mdh' />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      ) : tabSelected === 1 ? (\n        <OptionList \n          entries={eth_puts}\n          showExpired={showExpired}\n          goToToken={goToToken}\n        />\n      ) : ( // calls\n        <OptionList \n          entries={eth_calls}\n          showExpired={showExpired}\n          goToToken={goToToken}\n        />\n      ) }\n      \n    </>\n  );\n}\n\nexport default AllContracts;\n\nfunction OptionList({ entries, showExpired, goToToken }:{entries: types.ETHOption[], showExpired: boolean, goToToken: Function}){\n  return (<DataView\n    fields={['Contract', 'Strike Price', 'Expiration', 'Expires in', '']}\n    entries={entries\n      .filter((option) => showExpired || option.expiry * 1000 > Date.now())\n      .sort((oa, ob) =>  oa.expiry > ob.expiry ? 1 : -1 )\n    }\n    entriesPerPage={6}\n    renderEntry={(option: types.ETHOption) => [\n      <IdentityBadge label={option.title} entity={option.addr} shorten={false} />,\n      <>{option.strikePriceInUSD + ' USD'}</>,\n      new Date(option.expiry * 1000).toLocaleDateString(\"en-US\", { timeZone: \"UTC\" }) ,\n      <Timer end={new Date(option.expiry * 1000)} format='dhm' />,\n      <Button onClick={() => goToToken(option.addr)}> View Vaults </Button>,\n    ]}\n  />)\n}","import BigNumber from 'bignumber.js';\n\nconst Web3 = require('web3')\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n */\nexport function toBaseUnitBN(rawAmt:string| number| BigNumber, decimals: number):BigNumber {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n */\nexport const toTokenUnitsBN = (tokenAmount:string|number|BigNumber, tokenDecimals:number): BigNumber => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision:number) {\n  return parseFloat(num).toFixed(percision);\n}\n\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast.toString(), 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt((secondsPast / 60).toString(), 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt((secondsPast / 3600).toString(), 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = (ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/) as RegExpMatchArray)[0] \n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nexport const isAddress = web3.utils.isAddress;\n","import React, { useState, useMemo } from 'react';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common/index';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as types from '../../types'\n\ntype ExerciseModalProps = {\n  option: types.option,\n  user: string,\n  vaults: types.vaultWithoutUnderlying[]\n}\n\nfunction ExerciseModal({\n  user,\n  vaults,\n  option\n}:ExerciseModalProps) {\n  \n  const underlyingIsETH = option.underlying.addr === ETH_ADDRESS;\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying.addr, user),\n        option.underlying.decimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(option.addr, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [option, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator:BigNumber, current: types.vaultWithoutUnderlying) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      option.addr,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, option.underlying.decimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={option.underlying.symbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={option.underlying.symbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count: number) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              option.addr,\n              option.underlying.addr,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\nimport * as types from '../../types'\n\ntype VaultModalProps = {\n  option: types.option,\n  vault: types.vaultWithRatio,\n  collateralIsETH: boolean\n}\n\nfunction VaultModal({\n  option,\n  vault,\n  collateralIsETH\n}: VaultModalProps) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      if (!vault.useCollateral) return;\n      const maxLiquidatable = await getMaxLiquidatable(option.addr, vault.owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option, opened, vault.owner, vault.useCollateral]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[vault]}\n          entriesPerPage={1}\n          renderEntry={(vault: types.vaultWithRatio) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, option.collateral.decimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            <RatioTag isSafe={vault.isSafe} ratio={vault.ratio} useCollateral={vault.useCollateral} />\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(option.addr, vault.owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral.addr,\n                      option.addr,\n                      vault.owner,\n                      toBaseUnitBN(addValue, option.collateral.decimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {vault.useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={vault.isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(option.addr, vault.owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={vault.isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, vault.owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\n\nexport default VaultModal;\n","import BigNumber from 'bignumber.js';\nimport { getPrice } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number} collateralDecimals\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral:string,\n  strike:string,\n  oracle:string,\n  collateralDecimals: number,\n): Promise<BigNumber> => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral: BigNumber;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      collateralDecimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n * Calculate collateral ratio\n */\nexport const calculateRatio = (\n  collateral: string|number|BigNumber,\n  tokenIssued: string|number|BigNumber,\n  strikePrice: string|number|BigNumber,\n  strikeValueInCollateral: BigNumber): number => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  \n  const result = colalteralBN.div(tokenIssuedBN).div(strikePriceBN).div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport {\n  formatDigits, compareVaultRatio, compareVaultIssued, toTokenUnitsBN,\n} from '../../utils/number';\n\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport * as types from '../../types'\n\ntype VaultOwnerListProps = {\n  user: string,\n  option: types.option,\n  vaults: types.vaultWithoutUnderlying[],\n  collateralIsETH: boolean\n}\n\nfunction VaultOwnerList({\n  user, option, vaults, collateralIsETH,\n}:VaultOwnerListProps) {\n  const vaultUsesCollateral = option.collateral.addr !== option.strike.addr;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState<types.vaultWithRatio[]>([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n          };\n        })\n        .sort(vaultUsesCollateral ? compareVaultRatio : compareVaultIssued);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralIsETH, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={(vault: types.vaultWithRatio) => [\n          <IdentityBadge entity={vault.owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(vault.collateral, option.collateral.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(vault.oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(vault.ratio, 5),\n          <RatioTag isSafe={vault.isSafe} ratio={vault.ratio} useCollateral={vault.useCollateral} />,\n          <VaultModal\n            option={option}\n            vault={vault}\n            collateralIsETH={collateralIsETH}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { getTotalSupply, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types'\n\ntype OptionOverviewProps = {\n  option: types.option,\n  collateralIsETH: boolean\n}\n\nfunction OptionOverview({\n  option,\n  collateralIsETH,\n}:OptionOverviewProps) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt:BigNumber;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(option.addr));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral.addr, option.addr);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, option.collateral.decimals);\n      }\n      const supply = await getTotalSupply(option.addr);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(toTokenUnitsBN(supply, option.decimals));\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralIsETH, option]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={option.addr} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toFormat(4)}\n                {' '}\n                {option.collateral.symbol}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply.toFormat(4)}\n            {' '}\n            {option.symbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","const opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * Get vaults for one option\n */\nexport async function getAllVaultsForOption(\n  optionAddress: string\n): Promise<\n  {\n    collateral: string;\n    oTokensIssued: string;\n    owner: string;\n  }[]\n> {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\n/**\n * Get all vaults for a user\n */\nexport async function getAllVaultsForUser(\n  owner: string\n): Promise<\n  {\n    optionsContract: {\n      address: string;\n    };\n    oTokensIssued: string;\n    collateral: string;\n    underlying: string;\n  }[]\n> {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n      underlying\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults\n}\n\n/**\n * Return target vault or null\n */\nexport async function getVault(\n  owner: string,\n  option: string\n): Promise<{ underlying: string; collateral: string; oTokensIssued: string, owner: string }> {\n  const query = `{\n    vault(\n     id: \"${option.toLowerCase()}-${owner.toLowerCase()}\"\n    ) {\n      owner\n      underlying\n      collateral\n      oTokensIssued\n    }\n  }`;\n  const response = await postQuery(query);\n  const vault = response.data.vault;\n  return vault\n  \n}\n\nexport async function getLiquidationHistory(\n  owner: string\n): Promise<\n  {\n    vault: {\n      owner: string;\n      optionsContract: {\n        address: string;\n      };\n    };\n    liquidator: string;\n    collateralToPay: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    liquidateActions(where: {\n      vault_contains: \"${owner}\"\n    }) {\n      vault {\n        owner,\n        optionsContract {\n          address\n        }\n      },\n      liquidator,\n      collateralToPay,\n      timestamp\n      transactionHash\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\n/**\n * Get all exercise history for one user\n */\nexport async function getExerciseHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amtCollateralToPay: string;\n    exerciser: string;\n    oTokensToExercise: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\n/**\n * get RemoveUnderlying Event history\n */\nexport async function getRemoveUnderlyingHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amount: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    removeUnderlyingActions(\n      where: {\n        vault_contains: \"${option}\"\n        owner: \"${owner}\"   \n      }\n    ) {\n      timestamp\n      transactionHash\n      amount\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.removeUnderlyingActions;\n}\n\nexport const getTotalSupplys = async (): Promise<{address:string, totalSupply: string}[]> => {\n  const query = `{\n    optionsContracts {\n      address\n      totalSupply\n    }\n  }`\n  const response = await postQuery(query);\n  return response.data.optionsContracts;\n}\n\nexport const getUserOptionBalances = async(address: string) : Promise<{oToken: string, balance: string}[]> => {\n  const query= `{\n    accountBalances (where: {\n      account: \"${address}\"\n    }) {\n      token {\n        address\n      }\n      amount\n    }\n  }\n  `\n  const response = await postQuery(query);\n  return response.data.accountBalances.map((obj: {amount: string, token: {address: string}}) => {\n    return {\n      oToken: obj.token.address,\n      balance: obj.amount\n    }});\n}\n\nexport const getUserUniswapSells = async(address: string) : Promise<{ token : {address: string}, payoutTokensReceived: string, oTokensToSell: string,   payoutTokenAddress: string,   payoutTokenPrice: string,   usdcPrice: string,   timestamp: string,   transactionHash: string} []> => {\n  const query= `{ \n    sellOTokensActions(where: {\n      transactionFrom: \"${address}\"\n    }) {\n      token {\n        address\n      }\n      oTokensToSell\n      payoutTokenAddress\n      payoutTokenPrice\n      payoutTokensReceived\n      usdcPrice\n      timestamp\n      transactionHash\n    }\n  }\n  `\n  const response = await postQuery(query);\n  return response.data.sellOTokensActions\n}\n \nexport const getUserUniswapBuys = async(address: string) : Promise<{ token : {address: string }, premiumPaid: string, oTokensToBuy: string, paymentTokenAddress: string, paymentTokenPrice: string, usdcPrice: string, timestamp: string, transactionHash: string } []> => {\n  const query= `{\n    buyOTokensActions(where: {\n      buyer: \"${address}\"\n    }) {\n      token {\n        address\n      }\n      oTokensToBuy\n      paymentTokenAddress\n      paymentTokenPrice\n      usdcPrice\n      premiumPaid\n      timestamp\n      transactionHash\n    }\n  }\n  `\n  const response = await postQuery(query);\n  return response.data.buyOTokensActions\n}\n\n\nconst postQuery = async (query: string) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import React, { useMemo, useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport tracker from '../../utils/tracker';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nimport * as types from '../../types'\n\nfunction OptionPage({ user }: { user: string }) {\n  const { token } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/option/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState<types.vaultWithoutUnderlying[]>([]);\n\n  const collateralIsETH = option!.collateral.addr === ETH_ADDRESS;\n\n  useMemo(async () => {\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [token]);\n\n  return (\n    <>\n      <Header\n        primary={option!.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            option={option!}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        option={option!}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        option={option!}\n        user={user}\n        vaults={vaults}\n        collateralIsETH={collateralIsETH}\n      />\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React, { useState } from 'react';\nimport {\n  TextInput, DataView, Button, LinkBase, EthIdenticon, useToast,\n} from '@aragon/ui';\nimport { getPreference, checkAddressAndAddToStorage } from '../../utils/storage';\n\nimport { Comment } from '../common/';\nimport { isAddress } from '../../utils/number';\nimport { resolveENS } from '../../utils/infura';\n\nfunction PleaseLogin({ setWatchAddress }: { setWatchAddress: Function }) {\n  const toast = useToast();\n  const [InAddress, setAddress] = useState('');\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n\n  return (\n    <>\n      {/* <Header></Header> */}\n      <Comment text=\"Please connect wallet to proceed or enter an address to use Watch Mode.\" />\n      <br />\n      <br />\n      <p style={{ fontSize: 20 }}> Watch Mode </p>\n      <Comment text=\"You won't be able to interact with any smart contract under Watch Mode.\" />\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <TextInput\n            placeholder=\"Ethereum address or ENS\"\n            value={InAddress}\n            onChange={(e) => { setAddress(e.target.value.toLowerCase()); }}\n            wide\n          />\n\n          {usedAddresses.length > 0 ? (\n            <div style={{ paddingTop: '3%' }}>\n              <DataView\n                entries={usedAddresses.reverse()}\n                fields={['used']}\n                entriesPerPage={5}\n                renderEntry={(address: string) => [\n                  <LinkBase onClick={() => {\n                    setWatchAddress(address);\n                    checkAddressAndAddToStorage(address);\n                  }}\n                  >\n                    {/* <IdentityBadge entity={address} /> */}\n                    <EthIdenticon\n                      address={address}\n                      scale={1.3}\n                      radius={5}\n                    />\n                    <span style={{ paddingLeft: 8, fontSize: 15, fontFamily: 'aragon-ui-monospace' }}>{address}</span>\n                  </LinkBase>,\n                ]}\n              />\n            </div>\n          ) : <></>}\n        </div>\n        <div style={{ width: '8%', paddingLeft: '1%', paddingRight: '1%' }}>\n          <Button\n            label=\"Watch Address\"\n            onClick={async () => {\n              if (isAddress(InAddress)) {\n                setWatchAddress(InAddress);\n                checkAddressAndAddToStorage(InAddress);\n              } else {\n                try {\n                  const address = await resolveENS(InAddress);\n                  setWatchAddress(address);\n                  checkAddressAndAddToStorage(address);\n                } catch (error) {\n                  toast('Invalid Address');\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default PleaseLogin;\n","import React, { useState, useMemo, useEffect, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Card,\n  TextInput,\n  useToast,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  SectionTitle, OpenVaultButton, Comment, HelperText, WarningText,\n} from '../common';\nimport * as types from '../../types';\n\nimport { openVaultAddCollateralAndMint } from '../../utils/web3';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { calculateStrikeValueInCollateral, calculateRatio } from '../../utils/calculation';\n\ntype openVaultModalProps = {\n  user: string,\n  option: types.option\n}\n\nfunction OpenVaultModal({ user, option }: openVaultModalProps) {\n  const toast = useToast();\n  const history = useHistory();\n\n  const [opened, setOpened] = useState(false);\n\n  // for Open vault, add collateral and mint tokens\n  const [collateralAmt, setCollateralAmt] = useState(new BigNumber(0));\n  const [mintTokenAmt, setMintTokenAmt] = useState(new BigNumber(0));\n\n  const [strikeValueInCollateral, setStrikeValueInCollateral] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(1);\n\n  useMemo(async () => {\n    if (!opened) return;\n    const strikeValueInColltrl = await calculateStrikeValueInCollateral(\n      option.collateral.addr,\n      option.strike.addr,\n      option.oracle,\n      option.collateral.decimals,\n    );\n    setStrikeValueInCollateral(strikeValueInColltrl);\n  },\n  [option, opened]);\n\n  //  when input changed\n  useEffect(() => {\n    // calculate new ratio\n    const newRatio = calculateRatio(\n      toBaseUnitBN(collateralAmt, option.collateral.decimals),\n      toBaseUnitBN(mintTokenAmt, option.decimals),\n      option.strikePrice,\n      strikeValueInCollateral,\n    );\n    setRatio(newRatio);\n  },\n  [collateralAmt, mintTokenAmt, strikeValueInCollateral, option]);\n\n  const onCollateralChange = (value) => {\n    if (!value) {\n      setCollateralAmt(new BigNumber(0));\n      return;\n    }\n    const amtBn = new BigNumber(value);\n    setCollateralAmt(amtBn);\n  };\n\n  const onMintTokenAmtChange = (value) => {\n    if (!value) {\n      setMintTokenAmt(new BigNumber(0));\n      return;\n    }\n    setMintTokenAmt(new BigNumber(value));\n  };\n\n  const mint = async () => {\n    if (ratio < option.minRatio) {\n      toast(`Collateral ratio must > ${option.minRatio}`);\n      return;\n    }\n    await openVaultAddCollateralAndMint(\n      option.addr,\n      option.collateral.addr,\n      toBaseUnitBN(collateralAmt, option.collateral.decimals).toString(),\n      toBaseUnitBN(mintTokenAmt, option.decimals).toString(),\n    );\n    history.push(`/manage/${option.addr}/${user}`);\n  };\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Open Vault\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Open Vault\" />\n        <Comment text=\"Select how you want to open a vault.\" />\n        {/* <div style={{ display: 'flex' }}> */}\n        {/* <div style={{ width: '30%' }}> */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Open Empty Vault\" />\n          <Comment text=\"You can add collateral and mint tokens later.\" />\n          <br />\n          <OpenVaultButton oToken={option.addr} user={user} goToMangePage />\n          <br />\n        </Card>\n        <br />\n\n        {/* Option C, Create, add and mint */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Add Collateral and Mint Tokens\" />\n          <Comment text=\"Open vault, add collateral and mint some options in one transaction.\" />\n          <div style={{ display: 'flex', paddingBottom: 15 }}>\n            <TextInput\n              type=\"number\"\n              value={collateralAmt.toNumber()}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => onCollateralChange(event.target.value)}\n              adornmentPosition=\"end\"\n              adornment={option.collateral.symbol}\n            />\n            <div style={{ paddingLeft: 15 }}>\n              <TextInput\n                type=\"number\"\n                value={mintTokenAmt.toNumber()}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => onMintTokenAmtChange(event.target.value)}\n                adornmentPosition=\"end\"\n                adornment={option.symbol}\n              />\n            </div>\n          </div>\n          { option.symbol.toLowerCase().includes('call')\n            ? <WarningText text={`1 ${option.collateral.symbol} can create ${(option as types.ETHOption).strikePriceInUSD} ${option.symbol}`} />\n            : <></>}\n          <Button label=\"Mint\" onClick={mint} />\n          { ratio === Infinity\n            ? <> </>\n            : <HelperText label=\"Collateral Ratio \" amt={ratio.toString()} />}\n\n          <br />\n        </Card>\n      </Modal>\n    </>\n  );\n}\n\nexport default OpenVaultModal;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  Header, DataView, IdentityBadge,\n} from '@aragon/ui';\nimport NoWalletView from './NoWallet';\nimport * as types from '../../types'\nimport { allOptions } from '../../constants/options';\nimport {\n  SectionTitle, ManageVaultButton, Comment, CheckBox,\n} from '../common/index';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPreference, storePreference } from '../../utils/storage';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport tracker from '../../utils/tracker';\nimport OpenVaultModal from './OpenVaultModal';\n\nconst Promise = require('bluebird');\n\nexport type vaultWithDetail = {\n  oToken:string,\n  collateral: string,\n  oTokenName:string\n  collateralDecimals: number,\n  collateralSymbol,\n  expiry:number\n  ratio: number\n}\n\nfunction MyVaults({ user }: {user: string}) {\n  useEffect(() => {\n    tracker.pageview('/myvaults/');\n  }, []);\n  const [opendVaults, setOpenedVaults] = useState<vaultWithDetail[]>([]);\n  const [tokensToOpen, setTokensToOpen] = useState<types.option[]>([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // enable not logged in user to use this feature\n  const [watchAddress, setWatchAddress] = useState('');\n  const isWatchMode = user === '' && watchAddress !== '';\n  const hasAddressConnected = user !== '' || watchAddress !== '';\n\n  // checkbox\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n  const [showEmpty, setShowEmpty] = useState(getPreference('showEmpty', '1') === '1');\n\n  const displayVaults = opendVaults\n    .filter((vault) => showExpired || vault.expiry * 1000 > Date.now())\n    .filter((vault) => showEmpty || new BigNumber(vault.collateral).gt(new BigNumber(0)));\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!hasAddressConnected) return;\n    const userVaults = await getAllVaultsForUser(isWatchMode ? watchAddress : user);\n    const openedVaults: vaultWithDetail[] = [];\n    const notOpenedTokens: types.option[] = [];\n    await Promise.map(allOptions, async (option: types.option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      \n      if (entry !== undefined) {\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral.addr,\n          option.strike.addr,\n          option.oracle,\n          option.collateral.decimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralSymbol: option.collateral.symbol,\n          collateralDecimals: option.collateral.decimals,\n          expiry: option.expiry,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        // only put non-expired token to \"can open\" list\n        notOpenedTokens.push(option);\n      }\n    });\n    setIsLoading(false);\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [user, watchAddress, hasAddressConnected, isWatchMode]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {hasAddressConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n\n              <div style={{ display: 'flex' }}>\n                <SectionTitle title=\"Existing Vaults\" />\n                <div style={{ marginLeft: 'auto' }}>\n                  <div style={{ display: 'flex' }}>\n                    <CheckBox\n                      text=\"Expired\"\n                      checked={showExpired}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showExpired', checked ? '1' : '0');\n                        setShowExpired(checked);\n                      }}\n                    />\n                    <CheckBox\n                      text=\"Empty\"\n                      checked={showEmpty}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showEmpty', checked ? '1' : '0');\n                        setShowEmpty(checked);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={displayVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio, collateralSymbol\n                }:vaultWithDetail) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  `${formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5)} ${collateralSymbol}`,\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={isWatchMode ? watchAddress : user} />,\n                ]}\n              />\n            </div>\n          ) : isLoading ? (\n            <Comment text=\"Loading\" />\n          ) : (\n            <Comment text=\"No Opened Vaults\" />\n          )}\n          {tokensToOpen.length > 0 && !isWatchMode ? (\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                \n                renderEntry={(option: types.option) => {\n                  return [\n                    option.title,\n                    <IdentityBadge entity={option.addr} shorten={false} />,\n                    <OpenVaultModal user={user} option={option} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <NoWalletView\n          // watchAddress={watchAddress}\n          setWatchAddress={setWatchAddress}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common/index';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\n\ntype HeaderDashboardProps= {\n  ratio: number,\n  minRatio: number,\n  symbol: string,\n  vault: types.vault,\n  decimals: number,\n  newRatio: number,\n  collateralDecimals: number,\n  useCollateral: boolean,\n};\n\nconst HeaderDashboard = ({\n  ratio,\n  minRatio,\n  symbol,\n  vault,\n  decimals,\n  newRatio,\n  collateralDecimals,\n  useCollateral,\n}:HeaderDashboardProps) => {\n  const tokenInUnit = vault.oTokensIssued\n    ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber()\n    : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? (\n              <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} />\n            ) : (\n              <></>\n            )}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n            .\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n                /\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? (\n              ''\n            ) : (\n              <HelperText label=\"New Ratio\" amt={newRatio.toString()} />\n            )}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as types from '../../types';\n\ntype CollateralManagementProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  collateral: types.token,\n  collateralAssetBalance: BigNumber,\n  token: string,\n  owner: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  setNewRatio: Function,\n\n}\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateral,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}: CollateralManagementProps) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: `Your ${collateral.symbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateral.decimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateral.addr,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateral.decimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateral.decimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateral.addr,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateral.decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton, WarningText } from '../common/index';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\n\nimport * as types from '../../types';\n\n\ntype IssueTokenProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  tokenBalance: BigNumber,\n  token: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  decimals: number,\n  symbol: string,\n  setNewRatio: Function,\n  strikePriceInUSD: number | undefined,\n  collateralSymbol: string\n}\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n  strikePriceInUSD,\n  collateralSymbol,\n}:IssueTokenProps) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <WarningText text={`1 ${collateralSymbol} can create ${strikePriceInUSD} ${symbol}`} />\n        : <></>}\n    </Box>\n  );\n}\n\n\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\ntype LiqActions = {\n  vault: {\n    owner: string,\n    optionsContract: {\n      address: string,\n    }\n  },\n  liquidator: string,\n  collateralToPay: string,\n  timestamp: string,\n  transactionHash: string,\n}\n\ntype LiquidationHistoryProps = {\n  owner: string,\n  token: string,\n  isOwner: Boolean,\n  tokenDecimals: number,\n  collateralDecimals:number,\n  userTokenBalance: BigNumber,\n};\n\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance, collateralDecimals\n}: LiquidationHistoryProps) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<LiqActions[]>([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n    updateLiquidatable();\n  }, [owner, token, tokenDecimals]);\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n          <Box heading=\"Liquidate\">\n            <>\n              <div style={{ display: 'flex' }}>\n                {/* balance */}\n                <div style={{ width: '30%' }}>\n                  <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n                </div>\n                <div style={{ width: '70%', paddingTop: '2%' }}>\n                  <div style={{ display: 'flex' }}>\n                    <div style={{ width: '60%' }}>\n                      <>\n                        <TextInput\n                          type=\"number\"\n                          wide\n                          value={amountToLiquidate}\n                          onChange={(event) => {\n                            setAmtToLiquidate(event.target.value);\n                          }}\n                        />\n                        <MaxButton\n                          onClick={() => {\n                            const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                            setAmtToLiquidate(maximum);\n                          }}\n                        />\n                      </>\n                    </div>\n                    <div style={{ width: '40%' }}>\n                      <Button\n                        disabled={maxLiquidatable <= 0}\n                        label=\"Liquidate\"\n                        onClick={() => {\n                          const amtToLiquidate = toBaseUnitBN(\n                            amountToLiquidate,\n                            tokenDecimals,\n                          ).toString();\n                          liquidate(token, owner, amtToLiquidate);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          </Box>\n        )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(toTokenUnitsBN(collateralToPay, collateralDecimals), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp, 10) * 1000),\n            ]}\n        />\n      </Box>\n    </>\n  );\n}\n\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype exerciseEntry = {\n  amtCollateralToPay: string;\n  exerciser: string;\n  oTokensToExercise: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<exerciseEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }: exerciseEntry) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useMemo } from 'react';\nimport {\n  Box, DataView, Button, TransactionBadge,\n} from '@aragon/ui';\nimport { BalanceBlock } from '../common/index';\nimport { removeUnderlying } from '../../utils/web3';\nimport { getRemoveUnderlyingHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype RemoveUnderlyingHistoryEntry = {\n  amount: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\ntype RemoveUnderlyingProps = {\n  owner: string,\n  token: string,\n  underlyingDecimals: number,\n  underlyingAmount: string,\n}\n\nfunction RemoveUnderlying({\n  owner, token, underlyingDecimals, underlyingAmount,\n}: RemoveUnderlyingProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<RemoveUnderlyingHistoryEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getRemoveUnderlyingHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n\n      <Box heading=\"Underlying\">\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>\n            {BalanceBlock({\n              asset: 'Redeemable',\n              balance: formatDigits(toTokenUnitsBN(underlyingAmount, underlyingDecimals), 6),\n            })}\n          </div>\n          <div style={{ width: '70%', padding: '2%' }}>\n            <Button\n              label=\"Redeem Underlying\"\n              onClick={() => { removeUnderlying(token); }}\n            />\n          </div>\n        </div>\n        <br />\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Timestamp']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            transactionHash, amount, timestamp,\n          }: RemoveUnderlyingHistoryEntry) => [\n            <TransactionBadge shorten={false} transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amount, underlyingDecimals).toNumber(),\n              5,\n            ),\n            timeSince(parseInt(timestamp, 10)* 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default RemoveUnderlying;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\nimport UnderlyingManagement from './UnderlyingManagement';\n\nimport { Comment } from '../common/index';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance } from '../../utils/infura';\nimport { getVault } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\nimport * as types from '../../types'\nimport tracker from '../../utils/tracker';\n\nfunction ManageVault({ user }: { user: string }) {\n  const { token, owner } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/manage/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  \n\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio,\n    collateral, expiry, underlying\n  } = option!;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState<types.vault>({\n    collateral: '0',\n    oTokensIssued: '0',\n    owner,\n    underlying: '0'\n  });\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n  const vaultUsesCollateral = collateral.addr !== strike.addr;\n\n  useMemo(() => {\n    let isCancelled = false;\n    async function updateInfo() {\n      const vaultToManage = await getVault(owner, token);\n      if (vaultToManage === null) {\n        setIsLoading(false);\n        return;\n      }\n\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      // let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral.addr, user);\n        collateralBalance = toTokenUnitsBN(userColltBalance, collateral.decimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValInCollt);\n        setVault(vaultToManage);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n        setIsLoading(false);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault\n    ? isLoading ? (\n      <Comment text=\"Loading...\" />\n    )\n      : (\n        <Comment text=\"No Vault Found for this user under this contract\" />\n      ) : (\n        <>\n          <Header\n            primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n            secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n          />\n\n          <HeaderDashboard\n            // user={user}\n            ratio={ratio}\n            minRatio={minRatio}\n            vault={vault}\n            decimals={decimals}\n            symbol={symbol}\n            newRatio={newRatio}\n            useCollateral={vaultUsesCollateral}\n            // collateralIsETH={collateralIsETH}\n            collateralDecimals={collateral.decimals}\n          />\n\n          <Tabs\n            items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise', 'Underlying Redemption']}\n            selected={tabSelected}\n            onChange={setTabSelected}\n          />\n\n          {tabSelected === 0 ? (\n            <CollateralManagement\n              isOwner={isOwner}\n              vault={vault}\n              collateralAssetBalance={userCollateralAssetBalance}\n              collateral={collateral}\n              token={token}\n              owner={owner}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 1 ? (\n            <IssuedTokenManagement\n              isOwner={isOwner}\n              vault={vault}\n              tokenBalance={ownerTokenBalance}\n              token={token}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              decimals={decimals}\n              symbol={symbol}\n              setNewRatio={setNewRatio}\n              // for call heler text\n              strikePriceInUSD={(option as types.ETHOption).strikePriceInUSD}\n              collateralSymbol={collateral.symbol}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 2 ? (\n            vaultUsesCollateral ? (\n              <LiquidationHistory\n                userTokenBalance={userTokenBalance}\n                isOwner={isOwner}\n                owner={owner}\n                token={token}\n                collateralDecimals={collateral.decimals}\n                tokenDecimals={decimals}\n              />\n            ) : (\n              <Box> This vault cannot be liquidated </Box>\n            )\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 3 ? (\n            <ExerciseHistory\n              owner={owner}\n              token={token}\n              tokenDecimals={decimals}\n              collateralDecimals={collateral.decimals}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 4 ? (\n            <UnderlyingManagement\n              owner={owner}\n              token={token}\n              underlyingDecimals={underlying.decimals}\n              underlyingAmount={vault.underlying}\n            />\n          ) : <> </>}\n        </>\n    );\n}\n\n\n\nexport default ManageVault;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/options';\n\nimport { Comment, CheckBox } from '../common';\nimport { storePreference, getPreference } from '../../utils/storage';\nimport tracker from '../../utils/tracker';\n\nfunction TradeLanding() {\n  const history = useHistory();\n\n  useEffect(() => {\n    tracker.pageview('/uniswap/');\n  }, []);\n\n  const goToTrade = (addr:string) => {\n    history.push(`/uniswap/${addr}`);\n  };\n\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n\n  return (\n    <>\n      <Header primary=\"Trade on Uniswap\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Buy or Sell DeFi Insurance\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            checked={showExpired}\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n          />\n        </div>\n      </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n\n        ]}\n      />\n    </>\n  );\n}\n\n\n\nfunction GoToUniswapFunction({ token }:{token:string}) {\n  return (\n    <Button onClick={() => {\n      tracker.event({\n        category: 'link',\n        action: 'uniswap',\n      })\n      window.open(\n      `https://uniswap.exchange/swap?inputCurrency=${token}`,\n      '_blank',\n    )}\n  }\n    >\n      <img alt=\"uniswap\" src=\"https://i.imgur.com/4eX8GlY.png\" style={{ padding: 2, height: 25, width: 23 }} />\n    </Button>\n  );\n}\n\n\nexport default TradeLanding;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, AddressBlock } from '../common/index';\n\ntype  TradePageHeaderProps = {\n  symbol: string,\n  poolETHBalance: BigNumber,\n  poolTokenBalance: BigNumber,\n  uniswapExchange: string,\n};\n\nconst TradePageHeader = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}: TradePageHeaderProps) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\n\nexport default TradePageHeader;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  WarningText, BalanceBlock, MaxButton, PriceSection,\n} from '../common/index';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\n\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\n\ntype UniswapBuySellProps = {\n  symbol: string,\n  strikePriceInUSD: number | undefined,\n  tokenBalance: BigNumber,\n  token: string,\n  exchange: string,\n  decimals: number,\n  spotPrice: BigNumber\n};\n\nfunction UniswapBuySell({\n  symbol, tokenBalance, token, exchange, decimals, strikePriceInUSD, spotPrice\n}: UniswapBuySellProps) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(toTokenUnitsBN(premium, 18));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"eth\" ethPrice={spotPrice} />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Sell Token on Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} ethPrice={spotPrice} />\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <>\n            <WarningText text={`*The unit used here is not the same as the greek board.`} /> \n            <WarningText text={`Buy ${strikePriceInUSD} ${symbol} to hedge 1 ETH.`} /> \n          </>\n        : <></> }\n    </Box>\n  );\n}\n\nexport default UniswapBuySell;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype AddliquidityProps = {\n  otoken: string,\n  otokenSymbol: string,\n  otokenDecimals: number,\n  poolTokenBalance: BigNumber,\n  poolETHBalance:BigNumber,\n  liquidityTokenSupply: BigNumber,\n  liquidityTokenDecimals: number,\n  userTokenBalance: BigNumber,\n  userETHBalance:BigNumber\n  uniswapExchange: string\n}\n\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: AddliquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype RemoveLiquidityProps = {\n  otokenDecimals: number,\n  otokenSymbol: string,\n  uniswapExchange: string\n  userliquidityTokenBalance: BigNumber\n  poolTokenBalance: BigNumber\n  poolETHBalance: BigNumber\n  liquidityTokenDecimals: number,\n  liquidityTokenSupply: BigNumber\n}\n\n\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: RemoveLiquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getTokenBalance, getBalance, getTotalSupply,\n} from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport { allOptions } from '../../constants/options';\n\nimport TradePageHeader from './Header';\nimport UniswapBuySell from './UniswapBuySell';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nimport tracker from '../../utils/tracker';\nimport * as types from '../../types'\n\nfunction UniswapPool({ user, spotPrice }: {user: string, spotPrice:BigNumber}) {\n  const liquidityTokenDecimals = 18;\n  const { token } = useParams();\n\n  useEffect(() => {\n    tracker.pageview(`/uniswap/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange,\n  } = option!;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n\n  // Update Uniswap Pool Info\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liqTokenTotalSupply] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getTotalSupply(uniswapExchange),\n      ]);\n      // const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenSupply(toTokenUnitsBN(liqTokenTotalSupply, liquidityTokenDecimals));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  // Update User balances\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <TradePageHeader\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <UniswapBuySell\n        spotPrice={spotPrice}\n        strikePriceInUSD={(option as types.ETHOption).strikePriceInUSD}\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n    </>\n  );\n}\n\nexport default UniswapPool;\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\n\nimport { Modal, Button, Header } from '@aragon/ui'\n\nimport UniswapBuySell from '../UniswapExchange/UniswapBuySell'\n\nimport * as types from '../../types'\nimport { toTokenUnitsBN } from '../../utils/number'\n// import { SectionTitle } from '../common'\n\ntype TradeModalProps = {\n  spotPrice: BigNumber\n  balance: BigNumber\n  oToken: types.ETHOption\n}\n\nfunction TradeModal({ oToken, spotPrice, balance }: TradeModalProps) {\n\n  const [opened, setOpened] = useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setOpened(true)} size=\"small\">Trade</Button>\n      <Modal \n        padding={50}\n        width={(viewport)=>{Math.min(viewport.width, 800)}} \n        visible={opened} \n        onClose={() => setOpened(false)} >\n        <Header primary={`Buy / Sell ${oToken.title} `} />\n        <br/>\n        <UniswapBuySell\n          spotPrice={spotPrice}\n          strikePriceInUSD={oToken.strikePriceInUSD}\n          symbol={oToken.symbol}\n          tokenBalance={toTokenUnitsBN(balance, oToken.decimals)}\n          token={oToken.addr}\n          exchange={oToken.exchange}\n          decimals={oToken.decimals}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default TradeModal","import { greeks as Greeks, ETHOption } from '../../types'\nimport BigNumber from 'bignumber.js'\n\nconst greek = require('greeks')\nconst iv = require(\"implied-volatility\");\n\n\nexport function getGreeks (option: ETHOption, optionPrice: BigNumber, spotPrice: BigNumber): Greeks {\n  \n  const type = option.type\n  // expiry in year\n  const t = new BigNumber(option.expiry - (Date.now() / 1000)).div(86400).div(365).toNumber()\n\n  const r = 0\n  const s = spotPrice.toNumber()\n  const k = option.strikePriceInUSD\n  const expectedCost = optionPrice.toNumber()\n\n  const v = iv.getImpliedVolatility(expectedCost, s, k, t, r, type); // 0.11406250000000001 (11.4%)\n  return {\n    iv: v,\n    Delta: greek.getDelta(s, k, t, v, r, type).toFixed(3),\n    Gamma: greek.getGamma(s, k, t, v, r).toFixed(3),\n    Vega: greek.getVega(s, k, t, v, r).toFixed(3),\n    Theta: greek.getTheta(s, k, t, v, r, type).toFixed(3),\n    Rho: greek.getRho(s, k, t, v, r, type).toFixed(3),\n  }\n}\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { useHistory } from 'react-router-dom'\nimport {\n  DataView, DropDown, Header, Tabs, LinkBase\n} from '@aragon/ui';\n\nimport TradeModal from './TradeModal'\nimport { eth_puts, eth_calls } from '../../constants/options';\nimport { ETHOption } from '../../types';\n\nimport { getGreeks } from './utils'\nimport { getTotalSupplys } from '../../utils/graph'\nimport { toTokenUnitsBN } from '../../utils/number';\n\nconst allOptions = eth_puts.concat(eth_calls).filter((option) => option.expiry > Date.now() / 1000).sort((a, b) => a > b ? 1 : -1);\nconst distinctExpirys = [...new Set(allOptions.map((option) => option.expiry))].sort((a, b) => a > b ? 1 : -1);\n\ntype OptionBoardProps = {\n  optionPrices: {\n    oToken: string,\n    price: BigNumber\n  }[]\n  spotPrice: BigNumber,\n  balances: {\n    oToken: string,\n    balance: BigNumber\n  }[]\n  ,\n};\n\nfunction Options({ optionPrices, spotPrice, balances }: OptionBoardProps) {\n  const history = useHistory()\n\n  const [selectedExpiryIdx, setExpiryIdx] = useState(0);\n  const [selectedType, setSelectedType] = useState(0)\n\n  const [openInterests, setOIs] = useState<{ oToken: string, totalSupply: string }[]>([])\n  const [displayedOptions, setDisplayOptions] = useState<ETHOption[]>([])\n\n  // get Open Interest (totalSupply)\n  useMemo(async () => {\n    const ivs = (await getTotalSupplys()).map(({ address, totalSupply }) => {\n      return {\n        oToken: address,\n        totalSupply\n      }\n    });\n    setOIs(ivs)\n  }, [])\n\n  // Update displayed options\n  useMemo(() => {\n    const displayOptions = allOptions\n      .filter((option) => {\n        return selectedExpiryIdx === 0 ? true : option.expiry === distinctExpirys[selectedExpiryIdx - 1]\n      })\n      .filter((option) => (option.type === 'call') === Boolean(selectedType))\n      .sort((a, b) => a.strikePriceInUSD > b.strikePriceInUSD ? 1 : -1)\n    setDisplayOptions(displayOptions)\n  }, [selectedExpiryIdx, selectedType])\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        <Header primary=\"Option Trading\" />\n        <img alt=\"icon\" style={{ paddingTop: 24, paddingLeft: 14, height: 64, width: 54 }} src={'https://i.imgur.com/4eX8GlY.png'} />\n        <div style={{ paddingTop: '28px', paddingLeft: '36px' }}>\n          <DropDown\n            items={['All Dates']\n              .concat(distinctExpirys.map(timestamp => new Date(timestamp * 1000).toLocaleDateString(\"en-US\", { timeZone: \"UTC\" })))\n            }\n            selected={selectedExpiryIdx}\n            onChange={setExpiryIdx}\n          />\n        </div>\n        <div style={{ paddingTop: '36px', paddingLeft: '36px' }}>\n          Spot Price: {spotPrice.toFixed(2)} USD\n        </div>\n        \n      </div>\n      <div style={{display: 'flex', alignContent: 'left'}}> \n        <div style={{marginLeft: 'auto', opacity: 0.5, fontSize: 14}}>\n          Not satisfied with the price? Create custom orders with <LinkBase onClick={()=>history.push('/trade/0x')} style={{color: 'white'}}> 0x Trade </LinkBase> \n        </div>\n      </div>\n      <Tabs\n        items={['Puts', 'Calls']}\n        selected={selectedType}\n        onChange={setSelectedType}\n      />\n      <DataView\n        tableRowHeight={40}\n        statusEmpty={<div> {`No ${selectedType === 0 ? 'Put' : 'Call'} for this expiration date`} </div>}\n        mode=\"table\"\n        fields={[\n          { label: 'strike Price', align: 'start' },\n          { label: 'expiry', align: 'start' },\n          { label: 'price', align: 'start' },\n          { label: 'Open Interest', align: 'start' },\n          { label: 'IV', align: 'start' },\n          { label: 'Delta', align: 'start' },\n          { label: 'Gamma', align: 'start' },\n          { label: 'Vega', align: 'start' },\n          { label: 'Theta', align: 'start' },\n          { label: ' ', align: 'end' }\n        ]}\n        entries={displayedOptions}\n        renderEntry={(option: ETHOption) => {\n\n          const priceInUSD = optionPrices.find(o => o.oToken === option.addr)?.price || new BigNumber(0);\n          const greeks = getGreeks(option, priceInUSD, spotPrice)\n          const balance = balances.find(b => b.oToken === option.addr)?.balance || new BigNumber(0)\n          return [\n            option.strikePriceInUSD,\n            new Date(option.expiry * 1000).toLocaleDateString(\"en-US\", { timeZone: \"UTC\" }),\n            `${priceInUSD.toFixed(5)} USD`,\n            toTokenUnitsBN(openInterests\n              .find(open => open.oToken === option.addr)?.totalSupply || 0, option.decimals)\n              .div(option.type === 'call' ? option.strikePriceInUSD : 1)\n              .toFixed(1),\n            `${(greeks.iv * 100).toFixed(2)} %`,\n            greeks.Delta,\n            greeks.Gamma,\n            greeks.Vega,\n            greeks.Theta,\n            <TradeModal oToken={option} spotPrice={spotPrice} balance={balance} />\n          ];\n        }}\n      />\n    </div>\n  );\n}\n\n\n\nexport default Options;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { DataView, IdentityBadge } from '@aragon/ui'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport * as types from '../../types'\nimport { getAllVaultsForUser } from '../../utils/graph'\n\n\nimport { eth_puts, eth_calls } from '../../constants/options';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { getGreeks } from './utils'\n\nconst allOptions = eth_puts.concat(eth_calls).filter((o) => o.expiry > Date.now() / 1000).sort((a, b) => a.expiry > b.expiry ? 1 : -1)\n\ntype MyPositionsProps = {\n  user: string,\n  spotPrice: BigNumber,\n  balances: {\n    oToken: string,\n    balance: BigNumber\n  }[]\n  tokenPrices: {\n    oToken: string,\n    price: BigNumber\n  }[]\n}\n\nconst defaultPostitionGreeks = {Delta: 0, Gamma: 0, Theta: 0, Rho: 0, Vega:0, totalSize: 0}\n\nfunction MyPositions({ user, spotPrice, tokenPrices, balances }: MyPositionsProps) {\n\n  const [vaults, setVaults] = useState<vault[]>([])\n  const [positions, setPositions] = useState<position[]>([])\n  const [aggregatedPositionGreeks, setPositionGreeks] = useState<PositionGreekType>(defaultPostitionGreeks)\n  // Get vaults\n  useMemo(async () => {\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults: vault[] = [];\n    allOptions.forEach((option: types.option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      if (entry !== undefined) {\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: option.collateral.decimals,\n          oTokensIssued: entry.oTokensIssued,\n          expiry: option.expiry,\n        });\n      }\n    });\n\n    setVaults(openedVaults)\n  }, [user]);\n\n  // Update positions when balance or vault change\n  useEffect(() => {\n    if (balances.length <= 0) return\n    let userPositions: position[] = []\n    allOptions.forEach((option) => {\n      const rawBalance = balances.find(b => b.oToken === option.addr)?.balance || new BigNumber(0)\n      const vault = vaults\n        .filter(v => !new BigNumber(v.oTokensIssued).isZero())\n        .find(v => v.oToken === option.addr)\n      const price = tokenPrices.find(entry => entry.oToken === option.addr)?.price || new BigNumber(0)\n      const greeks = getGreeks(option, price, spotPrice)\n      if (vault || rawBalance.gt(0)) {\n        const bought = toTokenUnitsBN(rawBalance, option.decimals)\n        const sold = toTokenUnitsBN(vault ? vault.oTokensIssued : 0, option.decimals)\n        const type: \"Long\" | \"Short\" = bought.gt(sold) ? \"Long\" : \"Short\";\n        const size = bought.minus(sold).abs()\n        if (!size.eq(0)) {\n          userPositions.push({\n            option: option,\n            optionPrice: price,\n            type,\n            PNL: new BigNumber(0),\n            size: option.type === 'call' ? size.div(option.strikePriceInUSD) : size,\n            ...greeks\n          })\n        }\n\n      }\n      setPositions(userPositions)\n    })\n  }, [vaults, spotPrice, tokenPrices, balances])\n\n  // update aggregated position greeks\n  useEffect(() => {\n    const positionGreeks = positions.reduce((prev, current) => {\n      return {\n        Delta: (prev.Delta) + current.size.times(current.Delta).toNumber(),\n        Gamma: (prev.Gamma) + current.size.times(current.Gamma).toNumber(),\n        Vega: (prev.Vega) + current.size.times(current.Vega).toNumber(),\n        Theta: (prev.Theta) + current.size.times(current.Theta).toNumber(),\n        Rho: (prev.Rho) + current.size.times(current.Rho).toNumber(),\n        totalSize: (prev.totalSize) + current.size.toNumber()\n      }\n    }, defaultPostitionGreeks)\n    setPositionGreeks(positionGreeks)\n  }, [positions])\n\n  return (\n    <>\n      <DataView \n        fields={['Delta', 'Gamma', 'Vega', 'Theta', 'Rho']}\n        entries={[aggregatedPositionGreeks]}\n        entriesPerPage={5}\n        tableRowHeight={45}\n        renderEntry={(p: PositionGreekType) => [\n          (p.Delta / (p.totalSize)).toFixed(3),\n          (p.Gamma/ (p.totalSize)).toFixed(3),\n          (p.Vega/ (p.totalSize)).toFixed(3),\n          (p.Theta/ (p.totalSize)).toFixed(3),\n          (p.Rho/ (p.totalSize)).toFixed(3),\n        ]}\n      />\n      <DataView\n        fields={['', 'Type', 'Price', 'Size', 'Delta', 'Gamma', 'Vega', 'Theta']}\n        entries={positions}\n        entriesPerPage={8}\n        tableRowHeight={45}\n        renderEntry={(p: position) => [\n          <IdentityBadge\n            entity={p.option.addr} label={p.option.title} />,\n          <PositionType type={p.type} />,\n          `${p.optionPrice.toFixed(5)} USD`,\n          p.size.toFixed(3) + (p.option.type === 'call' ? '*' : ''),\n          p.Delta,\n          p.Gamma,\n          p.Vega,\n          p.Theta\n        ]}\n      />\n    </>\n  );\n}\n\nexport default MyPositions;\n\nfunction PositionType({ type }: { type: 'Long' | 'Short' }) {\n  return (\n    type === 'Long' ? <Green> {type} </Green> : <Red> {type} </Red>\n  )\n}\n\nexport const Green = styled.div`{\n  color: #7aae1a;\n}`;\n\nexport const Red = styled.div`{\n  color: #da5750;\n}`;\n\ntype position = {\n  option: types.ETHOption,\n  // name: string,\n  optionPrice: BigNumber,\n  // expiration: number,\n  type: 'Long' | 'Short',\n  size: BigNumber,\n  PNL: BigNumber\n} & types.greeks\n\ntype vault = {\n  oToken: string,\n  collateral: string,\n  oTokenName: string\n  collateralDecimals: number,\n  oTokensIssued: string,\n  expiry: number\n}\n\ntype PositionGreekType = {\n  Delta: number\n  Gamma: number,\n  Rho: number,\n  Vega: number,\n  Theta: number,\n  totalSize: number\n}","import React, { useEffect, useState } from 'react';\nimport { DataView, IdentityBadge, Box } from '@aragon/ui'\nimport BigNumber from 'bignumber.js'\nimport * as types from '../../types'\nimport { toTokenUnitsBN } from '../../utils/number';\n\ntype MyPositionsProps = {\n  balances: {\n    oToken: string,\n    balance: BigNumber\n  }[]\n  tokenPrices: {\n    oToken: string,\n    price: BigNumber\n  }[]\n  allOptions: types.ETHOption[]\n}\n\ntype optionBalance = {\n  option: types.ETHOption\n  price: BigNumber\n  amount: BigNumber\n  value: BigNumber\n}\n\nfunction Balances({ tokenPrices, balances, allOptions }: MyPositionsProps) {\n  \n  const [rows, setRows] = useState<optionBalance[]>([])\n  const [totalValueUSD, setTotalValue] = useState(new BigNumber(0))\n\n  useEffect(()=>{\n    const entries = balances\n      .filter(balanceObj => balanceObj.balance.gt(0))\n      .map(({balance, oToken}) => {\n        const option = allOptions.find(option => option.addr === oToken) as types.ETHOption\n        const amount = toTokenUnitsBN(balance, option.decimals)\n          .div(option.type === 'call' ? new BigNumber(option.strikePriceInUSD) : new BigNumber(1))\n        const price = tokenPrices.find(priceInfo => priceInfo.oToken === oToken)?.price || new BigNumber(0)\n        const value = price?.times(amount)\n        return {\n          amount, price, value, option\n        }\n      })\n    \n    const totalInUSD = entries.map(b => b.value).reduce((prev, cur)=> prev.plus(cur), new BigNumber(0))\n    setRows(entries)\n    setTotalValue(totalInUSD)\n  }, [balances, allOptions, tokenPrices])\n  \n\n  return (\n    <>\n      <Box heading=\"Total USD Value\" > {totalValueUSD.toFixed(2)} USD </Box>\n      <DataView\n        fields={['Token', 'Balance','Price', 'Total value']}\n        entries={rows}\n        entriesPerPage={8}\n        tableRowHeight={45}\n        renderEntry={({ option, amount, price, value }: optionBalance) => [\n          <IdentityBadge label={option.title} entity={option.addr} />,\n          amount.toFixed(3) + (option.type === 'call' ? '*' : ''),\n          price?.toFixed(2),\n          value.toFixed(3) + ' USD'\n        ]}\n      />\n    </>\n  );\n}\n\nexport default Balances;\n","import React, { useMemo, useState } from 'react';\nimport { DataView, TransactionBadge, IdentityBadge } from '@aragon/ui'\nimport BigNumber from 'bignumber.js'\nimport { Green, Red } from './MyPositions'\nimport * as types from '../../types'\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { timeSince } from '../../utils/number'\nimport { getUserUniswapBuys, getUserUniswapSells } from '../../utils/graph'\nimport { ETHOption } from '../../types';\n\ntype MyPositionsProps = {\n  user: string\n  allOptions: types.ETHOption[]\n}\n\ntype historyEntry = {\n  option: ETHOption\n  type: 'Buy' | 'Sell'\n  amount: BigNumber,\n  premium: BigNumber,\n  price: BigNumber,\n  timestamp: number,\n  txHash: string\n} \n\nfunction TradeHistory({ user, allOptions }: MyPositionsProps) {\n  \n  const [rows, setRows] = useState<historyEntry[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useMemo(async()=>{\n    if (!user) return\n\n    function filterOptionsOnly (entry: {token: {address: string}}) {\n      return allOptions.map(o => o.addr).includes(entry.token.address)\n    } \n\n    const buys = (await getUserUniswapBuys(user)).filter(filterOptionsOnly)\n    const buyEntries: historyEntry[]  = buys.map(buy => {\n      const option = allOptions.find(o => o.addr === buy.token.address) as ETHOption\n      const amount = toTokenUnitsBN(buy.oTokensToBuy, option.decimals)\n        .div(option.type === 'call' \n        ? new BigNumber(option.strikePriceInUSD) \n        : new BigNumber(1)\n      )\n      const price = (new BigNumber(buy.premiumPaid).div(new BigNumber(buy.usdcPrice))).div(amount)\n      return {\n        option,\n        type: 'Buy',\n        amount,\n        price,\n        premium: toTokenUnitsBN(buy.premiumPaid, 18),\n        timestamp: parseInt(buy.timestamp),\n        txHash: buy.transactionHash\n      }\n    })\n    \n    const sells = (await getUserUniswapSells(user)).filter(filterOptionsOnly)\n    const sellEntries: historyEntry[]  = sells.map(sell => {\n      const option = allOptions.find(o => o.addr === sell.token.address) as ETHOption\n      const amount = toTokenUnitsBN(sell.oTokensToSell, option.decimals)\n        .div(option.type === 'call' \n          ? new BigNumber(option.strikePriceInUSD) \n          : new BigNumber(1)\n        )\n      const price = (new BigNumber(sell.payoutTokensReceived).div(new BigNumber(sell.usdcPrice))).div(amount)\n      return {\n        option,\n        type: 'Sell',\n        amount,\n        premium: toTokenUnitsBN(sell.payoutTokensReceived, 18),\n        price,\n        timestamp: parseInt(sell.timestamp),\n        txHash: sell.transactionHash\n      }\n    })\n\n    const allEntris = sellEntries.concat(buyEntries).sort((a, b)=> a.timestamp > b.timestamp ? -1 : 1 )\n    setRows(allEntris)\n    setIsLoading(false)\n  }, [allOptions, user])\n\n  return (\n    <>\n      <DataView\n        status={ isLoading ? \"loading\" : \"default\" }\n        fields={['option', 'Type', 'Size', 'Price', 'total Premium','Time', 'tx']}\n        entries={rows}\n        entriesPerPage={8}\n        tableRowHeight={45}\n        renderEntry={({ type, price, amount, timestamp, txHash, option, premium }:historyEntry) => [\n          <IdentityBadge label={option.title} entity={option.addr} />,\n          <TradeType type={type}/>,\n          amount?.toFixed(3) + (option.type === 'call' ? '*' : ''),\n          price.toFixed(3) + ' USD',\n          premium.toFixed(3) + ' ETH',\n          timeSince(timestamp*1000),\n          <TransactionBadge transaction={txHash} />\n        ]}\n      />\n    </>\n  );\n}\n\nexport default TradeHistory;\n\nfunction TradeType({ type }: { type: 'Buy' | 'Sell' }) {\n  return (\n    type === 'Buy' ? <Green> {type} </Green> : <Red> {type} </Red>\n  )\n}","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\n\nimport { Tabs, Help } from '@aragon/ui'\n\nimport Positions from './MyPositions'\nimport Balances from './Balances'\nimport History from './TradeHistory'\n\nimport { Comment } from '../common'\n\nimport { eth_calls, eth_puts } from '../../constants/options'\nimport { getPreference, storePreference } from '../../utils/storage'\nconst allOptions = eth_puts.concat(eth_calls).filter((o) => o.expiry > Date.now() / 1000)\n\ntype UserDataProps = {\n  user: string,\n  spotPrice: BigNumber\n  tokenPrices: {\n    oToken: string,\n    price: BigNumber\n  }[]\n  balances: {\n    oToken: string,\n    balance: BigNumber\n  }[]\n}\n\nfunction UserData({ user, spotPrice, tokenPrices, balances }: UserDataProps) {\n\n  const [selectedTab, setSelectedTab] = useState(parseInt(getPreference('greekboardtab', '0')))\n  \n  return (\n    <>\n      <div style={{display: 'flex', alignContent: 'left'}}> \n        <div style={{ display:'flex', marginLeft: 'auto', opacity: 0.5, fontSize: 14}}>\n          *Call option amounts already devided by strike price. <Help hint=\"why?\">\n            With Opyn v1, call options have the same units as USDC: you need 250 oETH call tokens + 250 USDC to get back 1 ETH. \n            To maker it clearer, all data on this page has been converted so that 1 call represent the right to buy 1 ETH.\n            But notice that the amount unit in trade modal has not been updated! \n          </Help>\n        </div>\n      </div>\n      <Tabs\n        items={['Positions', 'Balances', 'History']}\n        selected={selectedTab}\n        onChange={(idx:number) => {\n          setSelectedTab(idx)\n          storePreference('greekboardtab', idx.toString())\n        }}\n      />\n      {\n        user === ''\n          ? <Comment text=\"Connect wallet to see more detail\"></Comment>\n          : (selectedTab === 0 ? <Positions\n            user={user}\n            spotPrice={spotPrice}\n            tokenPrices={tokenPrices}\n            balances={balances}\n          /> : selectedTab === 1 ? <Balances \n            balances={balances}\n            tokenPrices={tokenPrices}\n            allOptions={allOptions}\n          /> : <History user={user} allOptions={allOptions} />\n          )\n      }\n    </>\n  );\n}\n\nexport default UserData;\n","import React, { useEffect, useState } from 'react';\n\nimport Options from './Options'\nimport UserData from './UserData';\n\nimport { getPremiumToPay } from '../../utils/infura'\nimport BigNumber from 'bignumber.js';\nimport { eth_puts, eth_calls } from '../../constants/options';\nimport { toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { getUserOptionBalances } from '../../utils/graph'\nimport tracker from '../../utils/tracker';\nimport { ETHOption } from '../../types';\n\nconst allOptions = eth_puts.concat(eth_calls).filter((o) => o.expiry > Date.now() / 1000)\nconst Promise = require('bluebird')\n\nfunction PositionManagement({ user, spotPrice }: { user: string, spotPrice: BigNumber }) {\n\n  useEffect(() => {\n    tracker.pageview(`/trade/uniswap/`);\n  }, []);\n  \n  // Update token price every 5 secs\n  const [tokenPrices, setTokenPrices] = useState<{ oToken: string, price: BigNumber }[]>([])\n  useEffect(() => {\n    let cancelled = false\n    async function getTokenPrices() {\n\n      const _tokenPrices = await Promise.map(allOptions, async (option:ETHOption) => {\n        if (option.uniswapExchange === '0x0000000000000000000000000000000000000000') {\n          return {\n            oToken: option.addr,\n            price: new BigNumber(0)\n          }\n        }\n        const priceUnit = await getPremiumToPay(\n          option.exchange,\n          option.addr,\n          toBaseUnitBN(1, option.decimals).toString()\n        )\n        const price = option.type === 'call'\n          ? toTokenUnitsBN(priceUnit, 18).times(spotPrice).times(option.strikePriceInUSD) // 250 call tokens = 1 call option\n          : toTokenUnitsBN(priceUnit, 18).times(spotPrice)\n        return {\n          oToken: option.addr,\n          price\n        }\n      })\n\n      if (!cancelled) {\n        setTokenPrices(_tokenPrices)\n      }\n    }\n    getTokenPrices()\n    const id = setInterval(getTokenPrices, 30000)\n    return () => {\n      cancelled = true\n      clearInterval(id)\n    }\n  }, [spotPrice])\n\n  // update token balances for all options\n  const [balances, setBalances] = useState<balance[]>([])\n  useEffect(() => {\n    let cancelled = false\n    async function updateBalances() {\n      if (!user) return\n      const balances = (await getUserOptionBalances(user))\n        .filter(obj => allOptions.find(option => option.addr === obj.oToken))\n        .map(obj => {\n          return {\n            oToken: obj.oToken,\n            balance: new BigNumber(obj.balance)\n          }\n        })\n      if (!cancelled)\n        setBalances(balances)\n    }\n    \n    updateBalances()\n    const id = setInterval(updateBalances, 5000)\n    return () => {\n      cancelled = true\n      clearInterval(id)\n    }\n\n  }, [user]);\n\n  return (\n    <>\n      <Options\n        optionPrices={tokenPrices}\n        spotPrice={spotPrice}\n        balances={balances}\n      />\n      <br />\n      <br />\n      <UserData\n        balances={balances}\n        spotPrice={spotPrice}\n        tokenPrices={tokenPrices}\n        user={user}\n      />\n      <br />\n    </>\n  );\n}\n\nexport default PositionManagement;\n\ntype balance = {\n  oToken: string,\n  balance: BigNumber\n}","import styled from 'styled-components';\n\n// For option board\n\nexport const BidText = styled.div`{\n  color: #7aae1a;\n  font-size: 17px;\n}`;\n\nexport const AskText = styled.div`{\n  color: #da5750;\n  font-size: 17px;\n}`;\n\n\n// For buy and sell part\nexport const FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 18px 0;\n`;\nexport const BuyAndSellBlock = styled.div`  \n  width: 100%;\n  min-height: 509px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.border};\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.surface};\n`;\nexport const Header = styled.div`\n  width: 100%;\n  height: 35px;\n  font-size: 13px;\n  font-family: aragon-ui;\n  border-bottom: 1px solid ${(props) => props.theme.border};\n  background-color: ${(props) => props.theme.surface};\n  color: ${(props) => props.theme.contentSecondary};\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  justify-content: center;\n  // font-weight: bold;\n`;\nexport const BuySellTopPart = styled.div`\n  margin: 10px 0;\n  background-color: ${(props) => props.theme.surface};\n  min-height: 50px;\n`;\nexport const BuySellTopPartText = styled.div``;\nexport const BuySellLowerPart = styled.div`\n  background-color: ${(props) => props.theme.background};\n`;\nexport const Tab = styled.div`\n  width: 50%;\n  height: 50px;\n  color: ${(props) => (props.active ? props.theme.content : props.theme.surfaceContentSecondary)};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  border-bottom: ${(props) => (props.active ? `2px solid ${props.theme.selected}` : `1px solid ${props.theme.border}`)};\n  cursor: pointer;\n`;\n\nexport const Label = styled.div`\n  height: 14px;\n  font-size: 14px;\n  color: ${(props) => props.theme.content};\n  margin: 20px 0 15px 0;\n`;\n\nexport const BottomText = styled.div`\n  height: 20px;\n`;\nexport const Wrapper = styled.div`\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Flex = styled.div`\n  display:flex;\n  width: 90%;\n`;\nexport const TabWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  background-color: ${(props) => props.theme.surface};\n  padding-top: 10px;\n  border: ${(props) => props.theme.border}\n`;\nexport const BottomTextWrapper = styled(FlexWrapper)`\n  height: 27px;\n  border-bottom: solid 1px #979797;\n  border-bottom-style: dotted;\n`;\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nexport const GroupButton = styled.div`\n  height: 40px;\n  width: 33%;\n  border: 1px solid ${(props) => props.theme.border};\n  border-width: ${(props) => (props.index === 1 ? '1px 0px' : '1px')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  background: ${(props) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;\n","/* eslint-disable no-restricted-syntax */\nimport { assetDataUtils } from '@0x/order-utils';\nimport BigNumber from 'bignumber.js';\nimport { USDC } from '../constants/tokens';\n\nimport { toTokenUnitsBN } from './number';\nimport * as types from '../types'\n\nconst Promise = require('bluebird');\n\nconst endpoint = 'https://api.0x.org/';\n\ntype entries = {\n  total:number,\n  page:number,\n  perPage:number,\n  records: types.order[]\n}\n\n\n/**\n * get orderbook: BASE:QUOTE\n */\nexport async function getOrderBook(base:string, quote:string): Promise<{\n  asks:entries, bids:entries\n}> {\n  const baseAsset = assetDataUtils.encodeERC20AssetData(base);\n  const quoteAsset = assetDataUtils.encodeERC20AssetData(quote);\n  return request(`sra/v3/orderbook?baseAssetData=${baseAsset}&quoteAssetData=${quoteAsset}&perPage=${100}`);\n}\n\n/**\n * get oToken:WETH stats (v1) for all options\n * @param {Array<{addr:string, decimals:number}>} options\n * @param {{addr:string, decimals:number}} quoteAsset\n * @return {Promise<Array<\n * {option: string, bestAskPrice: BigNumber, bestAskPrice:BigNumber,\n * totalBidAmt:BigNumber, totalAskAmt:BigNumber,\n * bestAsk:{}, bestBid:{}\n * }>>}\n */\nexport async function getBasePairAskAndBids(options: types.option[], quoteAsset:types.token): Promise<types.OptionRealTimeStat[]> {\n  const bestAskAndBids = await Promise.map(options, async ({ addr: option, decimals }) => {\n    const { asks, bids } = await getOrderBook(option, USDC.addr);\n    let totalBidAmt = new BigNumber(0);\n    let totalAskAmt = new BigNumber(0);\n    let bestAskPrice = new BigNumber(0);\n    let bestBidPrice = new BigNumber(0);\n    let bestAsk: types.order|undefined; \n    let bestBid: types.order|undefined;\n    const validAsks = asks.records.filter((record) => isValid(record));\n    if (validAsks.length > 0) {\n      totalAskAmt = validAsks\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          getRemainingMakerAndTakerAmount(cur).remainingMakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: askTokenAmt, takerAssetAmount: askQuoteAmt } = validAsks[0].order;\n      bestAskPrice = toTokenUnitsBN(askQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(askTokenAmt, decimals));\n      bestAsk = validAsks[0];\n    }\n\n    const validBids = bids.records.filter((record) => isValid(record));\n    if (validBids.length > 0) {\n      totalBidAmt = validBids\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          cur.metaData.remainingFillableTakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: bidQuoteAmt, takerAssetAmount: bidTokenAmt } = validBids[0].order;\n      bestBidPrice = toTokenUnitsBN(bidQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(bidTokenAmt, decimals));\n      bestBid = validBids[0];\n    }\n\n    return {\n      option, bestAskPrice, bestBidPrice, bestAsk, bestBid, totalBidAmt, totalAskAmt,\n    };\n  });\n  return bestAskAndBids;\n}\n\n/**\n *\n * @param {string} path\n */\nasync function request(path:string): Promise<any> {\n  const res = await fetch(`${endpoint}${path}`);\n  return res.json();\n}\n\n/**\n * Return true if the order is valid\n */\nexport const isValid = (entry: types.order) => {\n  const notExpired = parseInt(entry.order.expirationTimeSeconds, 10) > Date.now() / 1000;\n  const notDust = parseInt(getOrderFillRatio(entry)) < 100;\n  return notExpired && notDust;\n};\n\n/**\n * Create Order Object\n */\nexport const createOrder = (maker:string, makerAsset:string, takerAsset:string, makerAssetAmount:BigNumber, takerAssetAmount:BigNumber, expiry:number) => {\n  const salt = BigNumber.random(20).times(new BigNumber(10).pow(new BigNumber(20))).integerValue().toString(10);\n  const order = {\n    senderAddress: '0x0000000000000000000000000000000000000000',\n    makerAddress: maker,\n    takerAddress: '0x0000000000000000000000000000000000000000',\n    makerFee: '0',\n    takerFee: '0',\n    makerAssetAmount: makerAssetAmount.toString(),\n    takerAssetAmount: takerAssetAmount.toString(),\n    makerAssetData: assetDataUtils.encodeERC20AssetData(makerAsset),\n    takerAssetData: assetDataUtils.encodeERC20AssetData(takerAsset),\n    salt,\n    exchangeAddress: '0x61935cbdd02287b511119ddb11aeb42f1593b7ef',\n    feeRecipientAddress: '0x1000000000000000000000000000000000000011',\n    expirationTimeSeconds: expiry.toString(),\n    makerFeeAssetData: '0x',\n    chainId: 1,\n    takerFeeAssetData: '0x',\n  };\n  return order;\n};\n\n/**\n * Send orders to the mesh node\n * @param {*} orders\n */\nexport const broadcastOrders = async (orders: types.order[]) => {\n  const url = `${endpoint}sra/v3/orders`;\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(orders),\n  });\n  if (res.status === 200) return;\n  const jsonRes = await res.json();\n  throw jsonRes.validationErrors[0].reason;\n};\n\n/**\n * Calculate the price of a bid order\n */\nexport const getBidPrice = (bid: types.order, makerAssetDecimals:number, takerAssetDecimals:number):BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(bid.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(bid.order.takerAssetAmount, takerAssetDecimals);\n  return makerAssetAmount.div(takerAssetAmount);\n};\n\n/**\n * Calculate price of an ask order\n * @description maker want to sell oToken\n * takerAssetAmount 100 weth\n * makerAssetAmount 1 oToken\n */\nexport const getAskPrice = (ask: types.order, makerAssetDecimals:number, takerAssetDecimals:number): BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(ask.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(ask.order.takerAssetAmount, takerAssetDecimals);\n  return takerAssetAmount.div(makerAssetAmount);\n};\n\nexport const getOrderFillRatio = (order: types.order) => new BigNumber(100)\n  .minus(new BigNumber(order.metaData.remainingFillableTakerAssetAmount)\n    .div(new BigNumber(order.order.takerAssetAmount))\n    .times(100)).toFixed(2);\n\n/**\n *\n * @param {*} order\n * @return { {remainingTakerAssetAmount: BigNumber, remainingMakerAssetAmount: BigNumber} }\n */\nexport const getRemainingMakerAndTakerAmount = (order: types.order): {\n  remainingTakerAssetAmount: BigNumber,\n  remainingMakerAssetAmount: BigNumber } => {\n  const remainingTakerAssetAmount = new BigNumber(order.metaData.remainingFillableTakerAssetAmount);\n  const makerAssetAmountBN = new BigNumber(order.order.makerAssetAmount);\n  const takerAssetAmountBN = new BigNumber(order.order.takerAssetAmount);\n  const remainingMakerAssetAmount = remainingTakerAssetAmount.multipliedBy(makerAssetAmountBN).div(takerAssetAmountBN);\n  return { remainingTakerAssetAmount, remainingMakerAssetAmount };\n};\n\n/**\n *\n * @param {{}[]} orders\n * @return {}\n */\nexport const getOrdersTotalFillables = (orders: types.order[]): {\n  totalFillableTakerAmount: BigNumber,\n  totalFillableMakerAmount:BigNumber, \n  fillableTakerAmounts: string[]\n} => {\n  const totalFillableTakerAmount = orders\n    .map((order) => new BigNumber(order.metaData.remainingFillableTakerAssetAmount))\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const totalFillableMakerAmount = orders\n    .map((order) => getRemainingMakerAndTakerAmount(order).remainingMakerAssetAmount)\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const fillableTakerAmounts = orders.map((o) => o.metaData.remainingFillableTakerAssetAmount);\n\n  return { totalFillableTakerAmount, totalFillableMakerAmount, fillableTakerAmounts };\n};\n\n/**\n * Get lastest gas price info from ethgasstation\n */\nexport const getGasPrice = async (): Promise<{\n  fast: number, fastest: number ,safeLow: number,average: number,block_time: number,speed: number,safeLowWait: number,avgWait: number,fastWait: number,fastestWait: number,}> => {\n  const url = 'https://ethgasstation.info/json/ethgasAPI.json';\n  const res = await fetch(url);\n  return res.json();\n};\n\ntype targetAsset = 'maker' | 'taker'\n\n/**\n * Return Minimal orders needed for target amount\n */\nexport const findMinOrdersForAmount = (selectedOrders: types.order[], targetAmount: BigNumber, targetAsset: targetAsset) => {\n  let sum = new BigNumber(0);\n  const requiredOrders: types.order[] = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const order of selectedOrders) {\n    const amount = targetAsset === 'maker'\n      ? new BigNumber(order.order.makerAssetAmount)\n      : new BigNumber(order.order.takerAssetAmount);\n    sum = sum.plus(amount);\n    requiredOrders.push(order);\n\n    if (sum.gt(targetAmount)) {\n      break;\n    }\n  }\n  return requiredOrders;\n};\n\n/**\n * @description Loop through selected orders and see what's the exact taker amount\n * and maker amount fulfilling the requirement\n */\nexport const getFillAmountsOfOrders = (\n  selectedOrders: types.order[], \n  targetTakerAstAmount: BigNumber | undefined, \n  targetMakerAstAmount: BigNumber | undefined\n  ): {\n    sumTakerAmount:BigNumber,\n    sumMakerAmount: BigNumber,\n    takerAmountArray: string[]\n  } => {\n  // const fillables = getRemainingMakerAndTakerAmount(selectedOrders);\n  let sumTakerAmount = new BigNumber(0);\n  let sumMakerAmount = new BigNumber(0);\n  const takerAmountArray: string[] = [];\n  for (const order of selectedOrders) {\n    const {\n      remainingMakerAssetAmount: makerAmount,\n      remainingTakerAssetAmount: takerAmount,\n    } = getRemainingMakerAndTakerAmount(order);\n    if (targetTakerAstAmount !== undefined) {\n      if (sumTakerAmount.plus(takerAmount).lte(targetTakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const takerAmountNeeded = targetTakerAstAmount.minus(sumTakerAmount);\n        const makerAmountNeeded = takerAmountNeeded.div(takerAmount).times(makerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else if (targetMakerAstAmount !== undefined) {\n      // user enter mekr ast amount\n      if (sumMakerAmount.plus(makerAmount).lte(targetMakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const makerAmountNeeded = targetMakerAstAmount.minus(sumMakerAmount);\n        const takerAmountNeeded = makerAmountNeeded.div(makerAmount).multipliedBy(takerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else {\n      throw new Error('wrong input to CalculateMixRate');\n    }\n  }\n  return { sumTakerAmount, sumMakerAmount, takerAmountArray };\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  DataView, DropDown, LinkBase, Radio, Header,\n} from '@aragon/ui';\nimport { AskText, BidText } from './styled';\n\nimport { SectionTitle } from '../common';\n\nimport { getBasePairAskAndBids } from '../../utils/0x';\nimport * as types from '../../types';\n\nimport { eth_puts, eth_calls } from '../../constants/options';\n\nconst optionsByDate = groupByDate(eth_puts, eth_calls);\n\n\ntype dataViewEntryType = {\n  strikePrice: number,\n  call?: types.ETHOption,\n  callDetail?: types.OptionRealTimeStat,\n  put?: types.ETHOption,\n  putDetail?: types.OptionRealTimeStat\n}\n\n\ntype strikePricePair = {\n  strikePrice: number,\n  call: types.ETHOption | undefined,\n  put: types.ETHOption | undefined\n}\n\ntype entriesForExpiry = { \n  expiry: number, \n  expiryText: string, \n  pairs: strikePricePair[]\n}\n\ntype OptionBoardProps = {\n  baseAsset: types.token,\n  quoteAsset: types.token,\n  setBaseAsset: Function,\n  setTradeType: Function,\n  setSelectedOrders: Function,\n};\n\nfunction OptionBoard({\n  baseAsset, quoteAsset, setBaseAsset, setTradeType, setSelectedOrders,\n}:OptionBoardProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedExpiryIdx, setExpiryIdx] = useState(0);\n  const [entriesToDisplay, setEntriesToDisplay] = useState<dataViewEntryType[]>([]);\n\n  // on expiry change: start the call and put update function on the options of that day\n  useEffect(() => {\n    setIsLoading(true);\n    let isCancelled = false;\n\n    const updateBoardStats = async () => {\n      const callsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.call !== undefined)\n        .map((pair) => pair.call);\n\n      const putsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.put !== undefined)\n        .map((pair) => pair.put);\n\n      const [callData, putData] = await Promise.all([\n        getBasePairAskAndBids(callsOfExpiry as types.ETHOption[] , quoteAsset),\n        getBasePairAskAndBids(putsOfExpiry as types.ETHOption[], quoteAsset),\n      ]);\n\n      const displayEntries: dataViewEntryType[] = [];\n      optionsByDate[selectedExpiryIdx].pairs.forEach((pair) => {\n        const { call, put, strikePrice } = pair;\n        const entry: dataViewEntryType = { strikePrice };\n        if (call !== undefined) {\n          // has call option on this strikePrice\n          entry.call = call;\n          entry.callDetail = callData.find((c) => c.option === call.addr);\n        }\n        if (put !== undefined) {\n          entry.put = put;\n          entry.putDetail = putData.find((p) => p.option === put.addr);\n        }\n        displayEntries.push(entry);\n      });\n\n      if (!isCancelled) {\n        setIsLoading(false);\n        setEntriesToDisplay(displayEntries);\n      }\n    };\n    updateBoardStats();\n    const id = setInterval(updateBoardStats, 3000);\n\n    return () => {\n      clearInterval(id);\n      isCancelled = true;\n    };\n  }, [selectedExpiryIdx, quoteAsset]);\n\n  // when selection change: update selected order to the first option of the expiry\n  const onExpiryChange = (idx) => {\n    setExpiryIdx(idx);\n    for (const { call, put } of optionsByDate[idx].pairs) {\n      if (call !== undefined) {\n        setBaseAsset(call);\n        setSelectedOrders([])\n        return;\n      } if (put !== undefined) {\n        setBaseAsset(put);\n        setSelectedOrders([])\n        return;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        {' '}\n        <Header primary=\"Option Trading\" />\n        <img alt=\"icon\" style={{ paddingTop: 24, paddingLeft:5, height: 64 }} src={'https://cdn.worldvectorlogo.com/logos/0x-virtual-money-.svg'} />\n        <div style={{ paddingTop: '28px', paddingLeft: '15px' }}>\n          <DropDown\n            items={optionsByDate.map((item) => item.expiryText)}\n            selected={selectedExpiryIdx}\n            onChange={onExpiryChange}\n          />\n        </div>\n      </div>\n\n      {/* <div style={{ display: 'flex' }}> */}\n\n      {/* </div> */}\n      <div style={{ display: 'flex', padding: '0px' }}>\n        <SectionTitle title=\"Calls\" />\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 0,\n          }}\n        >\n          <SectionTitle title=\"Puts\" />\n        </div>\n      </div>\n      {/* Calls */}\n      <DataView\n        mode=\"table\"\n        tableRowHeight={50}\n        status={isLoading ? 'loading' : 'default'}\n        fields={[\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'strike', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'last' },\n\n        ]}\n        entries={entriesToDisplay}\n        renderEntry={({\n          call,\n          put,\n          putDetail,\n          callDetail,\n          strikePrice,\n        }) => {\n          const lastCallPrice = '-';\n          let callAsk = '-';\n          let callBid = '-';\n          let callBidAmt = '-';\n          let callAskAmt = '-';\n          let callOnclick = () => { };\n          let callBidOnclick = () => { };\n          let callAskOnclick = () => { };\n\n          const lastPutPrice = '-';\n          let putAsk = '-';\n          let putBid = '-';\n          let putBidAmt = '-';\n          let putAskAmt = '-';\n          let putOnclick = () => { };\n          let putBidOnclick = () => { };\n          let putAskOnclick = () => { };\n\n          if (callDetail !== undefined) {\n            // have call option has this strike price\n            callAsk = callDetail.bestAskPrice.toFixed(4);\n            callBid = callDetail.bestBidPrice.toFixed(4);\n            callAskAmt = callDetail.totalAskAmt.toFixed(2);\n            callBidAmt = callDetail.totalBidAmt.toFixed(2);\n            callOnclick = () => { setBaseAsset(call); };\n\n            callBidOnclick = () => {\n              setTradeType('sell');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestBid ? [callDetail.bestBid] : []);\n            };\n            callAskOnclick = () => {\n              setTradeType('buy');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestAsk ? [callDetail.bestAsk] : []);\n            };\n          }\n          if (putDetail !== undefined) {\n            // has put option has this strike price\n            putAsk = putDetail.bestAskPrice.toFixed(4);\n            putBid = putDetail.bestBidPrice.toFixed(4);\n            putAskAmt = putDetail.totalAskAmt.toFixed(2);\n            putBidAmt = putDetail.totalBidAmt.toFixed(2);\n\n            putOnclick = () => { setBaseAsset(put); };\n\n            putBidOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('sell');\n              setSelectedOrders(putDetail.bestBid ? [putDetail.bestBid] : []);\n            };\n            putAskOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('buy');\n              setSelectedOrders(putDetail.bestAsk ? [putDetail.bestAsk] : []);\n            };\n          }\n\n          return [\n            <Cell onClick={callOnclick} text={lastCallPrice} type=\"normal\" />,\n            <Cell onClick={callBidOnclick} text={callBid} type=\"bid\" />,\n            <Cell onClick={callBidOnclick} text={callBidAmt} type=\"normal\" />,\n\n            <Cell onClick={callAskOnclick} text={callAsk} type=\"ask\" />,\n            <Cell onClick={callAskOnclick} text={callAskAmt} type=\"normal\" />,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!call}\n                onChange={() => {\n                  setSelectedOrders([])\n                  setBaseAsset(call)\n                }}\n                checked={call && call.addr === baseAsset.addr}\n              />\n            </div>,\n            <div style={{ fontSize: 20, width: '50px', padding: '10px' }}>{strikePrice}</div>,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!put}\n                onChange={() => {\n                  setSelectedOrders([])\n                  setBaseAsset(put)}\n                }\n                checked={put && put.addr === baseAsset.addr}\n              />\n            </div>,\n            <Cell onClick={putOnclick} text={lastPutPrice} type=\"normal\" />,\n            <Cell onClick={putBidOnclick} text={putBid} type=\"bid\" />,\n            <Cell onClick={putBidOnclick} text={putBidAmt} type=\"normal\" />,\n            <Cell onClick={putAskOnclick} text={putAsk} type=\"ask\" />,\n            <Cell onClick={putBidOnclick} text={putAskAmt} type=\"normal\" />,\n\n          ];\n        }}\n      />\n    </div>\n  );\n}\n\n\n\nexport default OptionBoard;\n\n/**\n *\n */\nfunction groupByDate(puts: types.ETHOption[], calls: types.ETHOption[]): entriesForExpiry[] {\n  const result: entriesForExpiry[] = [];\n  const allOptions = puts.concat(calls)\n    .filter((option) => option.expiry > Date.now() / 1000) // filter out expired options\n    .sort((oa, ob) =>  oa.expiry > ob.expiry ? 1 : -1 ); // short by date (so the dropdown is sorted)\n  \n  const distinctExpirys = [...new Set(allOptions.map((option) => option.expiry))];\n\n  for (const expiry of distinctExpirys) {\n    const optionsExpiresThisDay = allOptions.filter((o) => o.expiry === expiry);\n    const strikePrices = [\n      ...new Set(optionsExpiresThisDay.map((option) => option.strikePriceInUSD)),\n    ];\n\n    // const allStrikesForThisDay = {};\n    const pairs: strikePricePair[] = [];\n    for (const strikePrice of strikePrices) {\n      const put = puts.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      const call = calls.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      pairs.push({\n        strikePrice,\n        call,\n        put,\n      });\n    }\n    pairs.sort((a, b) => (a.strikePrice > b.strikePrice ? 1 : -1));\n    const expiryText = new Date(expiry * 1000).toLocaleDateString(\"en-US\", { timeZone: \"UTC\" });\n    result.push({\n      expiry,\n      expiryText,\n      pairs,\n    });\n  }\n  return result;\n}\n\ntype CellProps = {\n  onClick: Function,\n  text: string,\n  type: 'bid' | 'ask' | 'normal'\n}\n\nfunction Cell({\n  onClick, text, type,\n}:CellProps) {\n  return (\n    <LinkBase onClick={onClick}>\n      <div style={{ width: '60px', textAlign: 'center' }}>\n        {type === 'bid' ? (\n          <BidText>\n            {' '}\n            {text}\n            {' '}\n          </BidText>\n        ) : type === 'ask' ? (\n          <AskText>\n            {' '}\n            {text}\n            {' '}\n          </AskText>\n        ) : (\n              <div>\n                {' '}\n                {text}\n                {' '}\n              </div>\n            )}\n      </div>\n    </LinkBase>\n  );\n}\n\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\n\nimport {\n  DataView, Timer, Button,\n} from '@aragon/ui';\n\nimport { cancelOrders } from '../../utils/web3';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\ntype MyOrdersProps = {\n  asks: types.order[],\n  bids: types.order[],\n  user: string,\n  option: types.option,\n  quoteAsset: types.token,\n};\n\nfunction MyOrders({\n  asks, bids, option, user, quoteAsset,\n}: MyOrdersProps) {\n  const [myOrdersPage, setMyOrdersPage] = useState(0);\n  const [selectedOrders, setSelectedOrders] = useState<types.order[]>([]);\n  const userAsks = asks\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      // return { ...o, type: 'Ask' }\n      o.type = 'Ask';\n      return o;\n    });\n  const userBids = bids\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      // return { ...o, type: 'Bid' }\n      o.type = 'Bid';\n      return o;\n    });\n\n  return (\n    <>\n      <DataView\n        entriesPerPage={4}\n        statusEmpty={(\n          <div style={{ fontSize: 15 }}>\n            No Open Orders for\n            {' '}\n            {option.symbol}\n          </div>\n        )}\n        page={myOrdersPage}\n        onPageChange={setMyOrdersPage}\n        onSelectEntries={setSelectedOrders}\n        fields={['digest', 'type', 'price', 'amount', 'filled', 'expiration', '']}\n        entries={userAsks.concat(userBids)\n          .sort((a, b) => (a.order.expirationTimeSeconds > b.order.expirationTimeSeconds ? 1 : -1))}\n        renderEntry={function (order: types.order) {\n          return [\n            order.metaData.orderHash.slice(2, 8),\n            order.type === 'Ask' ? <AskText>{order.type}</AskText> : <BidText>{order.type}</BidText>,\n            order.type === 'Ask'\n              ? zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(6)\n              : zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(6),\n            order.type === 'Ask'\n              ? toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(3)\n              : toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(3),\n            `${zeroXUtil.getOrderFillRatio(order)}%`,\n            <Timer end={new Date(parseInt(order.order.expirationTimeSeconds) * 1000)} />,\n\n            selectedOrders.length > 0\n              ? (\n                <Button onClick={() => {\n                  cancelOrders(selectedOrders.map((o) => o.order));\n                }}\n                >\n                  Cancel Selected\n                </Button>\n              )\n              : (\n                <Button onClick={() => {\n                  cancelOrders([order.order]);\n                }}\n                >\n                  Cancel Order\n                </Button>\n              ),\n          ]\n        }\n\n        }\n      />\n    </>\n  );\n}\n\nexport default MyOrders;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\n\nimport { DataView, Timer } from '@aragon/ui';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\ntype OrderbookProps = {\n  asks: types.order[],\n  bids: types.order[],\n  option: types.option,\n  quoteAsset: types.token,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[],\n  setTradeType: Function,\n  setSelectedOrders: Function,\n};\n\nfunction OrderBook({\n  asks, bids, option, quoteAsset, setTradeType, setSelectedOrders, selectedOrders, tradeType,\n}: OrderbookProps) {\n  const [askPage, setAskPage] = useState(0);\n  const [bidPage, setBidPage] = useState(0);\n\n  const [askSelectedIndexs, setAskSelectedIndexes] = useState<number[]>([]);\n  const [bidSelectedIndexs, setBidSelectedIndexes] = useState<number[]>([]);\n\n  const onSelectAskEntry = (entries, indexes) => {\n    setTradeType('buy'); // Filling ask orders is a bid\n    setSelectedOrders(entries);\n    setAskSelectedIndexes(indexes);\n  };\n\n  const onSelectBidEntry = (entries, indexes) => {\n    setTradeType('sell'); // Filling bid orders is a ask\n    setSelectedOrders(entries);\n    setBidSelectedIndexes(indexes);\n  };\n\n  // everytime tradeType or selectedOrders changed, the selection is updated\n  useEffect(() => {\n    if (tradeType === 'buy') { // user select and ask order\n      setBidSelectedIndexes([]); // reset bid selections\n      const selectedIdxs: number[] = [];\n      for (let i = 0; i < asks.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(asks[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setAskSelectedIndexes(selectedIdxs);\n    } else {\n      setAskSelectedIndexes([]);\n      const selectedIdxs: number[] = [];\n      for (let i = 0; i < bids.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(bids[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setBidSelectedIndexes(selectedIdxs);\n    }\n  }, [selectedOrders, tradeType, asks, bids]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div style={{ fontSize: 15 }} >No Sell Orders</div>}\n            entriesPerPage={8}\n            page={askPage}\n            onPageChange={setAskPage}\n            entries={asks}\n            tableRowHeight={40}\n            onSelectEntries={onSelectAskEntry}\n            // If other operation reset selected orders, should change selected accordingly\n            selection={askSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <AskText>{zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(4)}</AskText>,\n              toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div style={{ fontSize: 15 }} >No Buy Orders</div>}\n            entriesPerPage={8}\n            page={bidPage}\n            onPageChange={setBidPage}\n            entries={bids}\n            tableRowHeight={40}\n            onSelectEntries={onSelectBidEntry}\n            selection={bidSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <BidText>{zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(4)}</BidText>,\n              toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n      </div>\n\n\n    </>\n  );\n}\n\nexport default OrderBook;\n","import React, { useState } from 'react';\nimport { Tabs } from '@aragon/ui';\n\nimport MyOrders from './MyOrders';\nimport OrderBook from './OrderBook';\n\nimport * as types from '../../types';\n\ntype TabBoardProps = {\n  asks: types.order[],\n  bids: types.order[],\n  option: types.option,\n  user: string,\n  quoteAsset: types.token,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[],\n  setTradeType: Function,\n  setSelectedOrders: Function\n}\n\nfunction Orders({\n  asks, bids, option, user, quoteAsset,\n  tradeType,\n  selectedOrders,\n  setTradeType,\n  setSelectedOrders,\n}: TabBoardProps) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <Tabs\n        items={['OrderBook', 'My Orders']}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      { selectedTab === 0\n        ? (\n          <OrderBook\n            asks={asks}\n            bids={bids}\n            option={option}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        )\n        : (\n          <MyOrders asks={asks} bids={bids} option={option} user={user} quoteAsset={quoteAsset} />\n        )}\n\n    </>\n  );\n}\n\nexport default Orders;\n","import React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js';\n\n\nimport {\n  SidePanel, Button, TextInput, useTheme,\n} from '@aragon/ui';\nimport { BalanceBlock, SectionTitle, Comment } from '../common/index';\n\nimport { wrapETH, unwrapETH } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { getBalance } from '../../utils/infura';\n\n\n\ntype WrapETHModalProps = {\n  user: string,\n  helperText: string,\n  setHelperText: Function,\n  wethBalance: BigNumber,\n  opened: boolean,\n  setOpen: Function,\n};\n\nfunction WrapETHModal({\n  user, wethBalance, opened, setOpen, helperText, setHelperText,\n}: WrapETHModalProps) {\n  const theme = useTheme();\n  const [wrapAmount, setWrapAmount] = useState(new BigNumber(0));\n  const [unWrapAmount, setUnwrapAmount] = useState(new BigNumber(0));\n\n  const [ethBalance, setETHBalance] = useState(new BigNumber(0));\n\n  const onChangeWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setWrapAmount(new BigNumber(0));\n      return;\n    }\n    setWrapAmount(new BigNumber(amount));\n  };\n\n  const onChangeUnWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setUnwrapAmount(new BigNumber(0));\n      return;\n    }\n    setUnwrapAmount(new BigNumber(amount));\n  };\n\n  useEffect(() => {\n    if (!opened || !user) return;\n    let isCancelled = false;\n\n    const updateETHBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getBalance(user);\n      if (!isCancelled) {\n        setETHBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateETHBalance();\n    const idETHBalance = setInterval(updateETHBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idETHBalance);\n    };\n  }, [opened, user]);\n\n  return (\n    <SidePanel\n      title=\"\"\n      opened={opened}\n      onClose={() => {\n        setOpen(false);\n        setHelperText('');\n      }}\n    >\n      <br />\n\n      <div style={{ color: theme.warning }}>\n        {helperText}\n      </div>\n\n      <SectionTitle title=\"Wrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your ETH Balance\" balance={ethBalance.toNumber()} />\n      </div>\n\n      {/* </div> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={wrapAmount.toNumber()} onChange={onChangeWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              wrapETH(toBaseUnitBN(wrapAmount, 18).toString());\n            }}\n            label=\"Wrap\"\n          />\n        </div>\n      </div>\n\n      <Comment text=\"After you wrap your ETH to WETH, you can unwrap them back to ETH anytime.\" />\n      <br />\n      <SectionTitle title=\"Unwrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your WETH Balance\" balance={toTokenUnitsBN(wethBalance, 18).toNumber()} />\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={unWrapAmount.toNumber()} onChange={onChangeUnWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              unwrapETH(toBaseUnitBN(unWrapAmount, 18).toString());\n            }}\n            label=\"Unwrap\"\n          />\n        </div>\n      </div>\n    </SidePanel>\n  );\n}\n\nexport default WrapETHModal;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, useTheme, TextInput, Help, useToast, LinkBase,\n} from '@aragon/ui';\n\nimport { BuyAndSellBlock, Wrapper, BottomTextWrapper, BottomText, Header,\n  BuySellTopPart,\n  FlexWrapper,\n  BuySellTopPartText,\n  Flex,\n  TabWrapper,\n  Tab,\n  BuySellLowerPart,\n  Label,\n  GroupButtonWrapper,\n  GroupButton, } from './styled'\n\nimport BigNumber from 'bignumber.js';\nimport { WarningText } from '../common/index';\nimport {\n  createOrder, broadcastOrders, getOrdersTotalFillables, getGasPrice, getFillAmountsOfOrders,\n} from '../../utils/0x';\nimport { signOrder, fillOrders, approve } from '../../utils/web3';\nimport { toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport WrapETHPanel from './WrapETHSidePanel';\n\nimport { getAllowance } from '../../utils/infura';\nimport { ZeroX_ERC20Proxy } from '../../constants/contracts';\n\nimport { WETH } from '../../constants/tokens';\n\nimport * as types from '../../types'\n\ntype BuyAndSellProps = {\n  user:string,\n  tradeType: types.tradeType,\n  selectedOrders: types.order[], //\n  setSelectedOrders: Function,\n  setTradeType: Function,\n  baseAsset: types.ETHOption,\n  quoteAsset: types.token,\n  baseAssetBalance: BigNumber,\n  quoteAssetBalance: BigNumber,\n}\n\nfunction BuyAndSell({\n  user,\n  tradeType, // ask || bid\n  selectedOrders, //\n  setTradeType,\n  setSelectedOrders,\n\n  // vault,\n  baseAsset,\n  quoteAsset,\n  // collateral,\n\n  // ethBalance, // in ETH (0.5)\n  baseAssetBalance, // in base uinit\n  quoteAssetBalance, // in base Unit\n}: BuyAndSellProps) {\n  const theme = useTheme();\n  const toast = useToast();\n\n  const [quoteAssetAmount, setQuoteAssetAmount] = useState(new BigNumber(0));\n  const [fillingtakerAmounts, setFillingTakerAmounts] = useState<string[]>([]);\n\n  // these two add up to total oToken displayed on the Amount section\n  const [baseAmountToFill, setBaseAmountToFill] = useState(new BigNumber(0));\n  const [baseAmountToCreate, setBaseAmountToCreate] = useState(new BigNumber(0));\n\n  const [rate, setRate] = useState(new BigNumber(0));\n\n  // gasPrice is needed to calculate 0x fee\n  const [fastGasPrice, setFastGasPrice] = useState(new BigNumber(5)); //  in GWei\n\n  // const quoteAssetAmount = price.times(baseAssetAmount);\n\n  const [selectedOrderFillables, setSelectedOrdersFillable] = useState({\n    totalFillableMakerAmount: new BigNumber(0),\n    totalFillableTakerAmount: new BigNumber(0),\n  });\n\n  const [isFillingAndCreating, setIsFillingAndCreating] = useState(false);\n\n  const hasSelectedOrders = selectedOrders.length > 0;\n  const feeInETH = hasSelectedOrders\n    ? fastGasPrice.times(new BigNumber(selectedOrders.length)).times(new BigNumber(0.00015))\n    : new BigNumber(0);\n\n  // for weth side panel\n  const [panelOpend, setPanelOpended] = useState(false);\n  const [wethPanelHelperText, setPanelHelperText] = useState('');\n\n  // expiry button\n  const [activeButton, setActiveButton] = useState(0);\n  const expirySeconds = activeButton === 0\n    ? 3600 : (activeButton === 1 ? 86400 : 604800);\n  const expiry = parseInt((Date.now() / 1000).toString(), 10) + expirySeconds;\n\n\n  // update gasPrice\n  useEffect(() => {\n    let isCanceled = false;\n    async function fetchGasPrice() {\n      const { fast } = await getGasPrice();\n      if (!isCanceled) setFastGasPrice(new BigNumber(fast).div(new BigNumber(10)));\n    }\n    fetchGasPrice();\n    const id = setInterval(fetchGasPrice, 10000);\n\n    return () => {\n      isCanceled = true;\n      clearInterval(id);\n    };\n  }, []);\n\n  // when selected orders changed\n  useEffect(() => {\n    // This update only take effect when user has selected orders\n    if (selectedOrders.length === 0) {\n      setBaseAmountToFill(new BigNumber(0));\n      return;\n    }\n    setIsFillingAndCreating(false);\n\n    const selectedFillables = getOrdersTotalFillables(selectedOrders);\n    setFillingTakerAmounts(selectedFillables.fillableTakerAmounts);\n\n    let baseMaxFillingAmount = new BigNumber(0);\n    let quoteMaxFillingAmount = new BigNumber(0);\n    // Step 1. set oToken and WETH amount to order total\n    if (tradeType === 'buy') {\n      // ask: takerAsset: weth, makerAsset: oToken\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, quoteAsset.decimals);\n    } else {\n      // comming bids: takerAsset: oToken, makerAsset: weth\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, quoteAsset.decimals);\n    }\n    setBaseAmountToFill(baseMaxFillingAmount);\n    setBaseAmountToCreate(new BigNumber(0));\n    // setBaseAssetAmount(baseMaxFillingAmount);\n    setQuoteAssetAmount(quoteMaxFillingAmount);\n    setSelectedOrdersFillable(selectedFillables);\n\n    // Change Price according to total base / quote\n    const aggregateRate = quoteMaxFillingAmount.div(baseMaxFillingAmount);\n    setRate(aggregateRate);\n  }, [selectedOrders, baseAsset, tradeType, quoteAsset]);\n\n\n  const onChangeBaseAmount = (amount) => {\n    // 1. Update amount field\n    if (!amount) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(amount);\n    if (amountBN.lte(0)) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n\n    // If is filling Mode\n    if (hasSelectedOrders) {\n      const totalOtokenInSelectedOrders = tradeType === 'buy'\n        ? toTokenUnitsBN(selectedOrderFillables.totalFillableMakerAmount, baseAsset.decimals) // oToken is the maker asset of ask orders\n        : toTokenUnitsBN(selectedOrderFillables.totalFillableTakerAmount, baseAsset.decimals);\n\n      // user is filling lower than all orders combined\n      if (totalOtokenInSelectedOrders.gte(amountBN)) {\n        // [FILLING MODE]\n        console.log('FILLING MODE');\n        setIsFillingAndCreating(false);\n        setBaseAmountToFill(amountBN);\n        setBaseAmountToCreate(new BigNumber(0));\n\n        // Update Rates\n        const baseAmountTotal = toBaseUnitBN(amountBN, baseAsset.decimals);\n\n        let quoteAmountTotal;\n        if (tradeType === 'buy') {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, undefined, baseAmountTotal);\n          quoteAmountTotal = fillingAmounts.sumTakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray);\n        } else {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, baseAmountTotal, undefined);\n          quoteAmountTotal = fillingAmounts.sumMakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray); // only need to record taker amount array\n        }\n\n        const quoteAmountTk = toTokenUnitsBN(quoteAmountTotal, quoteAsset.decimals);\n        setRate(quoteAmountTk.div(amountBN));\n        setQuoteAssetAmount(quoteAmountTk);\n      } else {\n        // [CREATING AND FILLING MODE]\n        console.log('CREATING + FILLING');\n        setIsFillingAndCreating(true);\n\n        setBaseAmountToFill(totalOtokenInSelectedOrders);\n        setBaseAmountToCreate(amountBN.minus(totalOtokenInSelectedOrders));\n\n        // Fix rate at current, dont have to change.\n        const quoteAmount = rate.times(amountBN);\n        setQuoteAssetAmount(quoteAmount);\n      }\n    } else {\n      // [CREATING MODE]\n      console.log('CREATING');\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(amountBN);\n\n      // create mode wont change rate when put in amount\n      const quoteAmount = rate.times(amountBN);\n      setQuoteAssetAmount(quoteAmount);\n    }\n  };\n\n  const onChangeRate = (newrate) => {\n    if (!newrate) {\n      setRate(new BigNumber(0));\n      return;\n    }\n    const rateBN = new BigNumber(new BigNumber(newrate).toFixed(4));\n    setRate(rateBN);\n\n    // adjusting rate will not be filling orders anymore\n    if (hasSelectedOrders) {\n      setSelectedOrders([]);\n    }\n\n    // enter create mode.\n    const quoteAmount = rateBN.times((baseAmountToCreate));\n    setQuoteAssetAmount(quoteAmount);\n  };\n\n  const checkAndAllowQuoteAsset = async (quoteAssetAmountInBase) => {\n    const quoteAllowance = new BigNumber(await getAllowance(quoteAsset.addr, user, ZeroX_ERC20Proxy));\n    if (quoteAllowance.lt(quoteAssetAmountInBase)) {\n      toast(`Please approve 0x to spend your oToken ${quoteAsset.symbol}`);\n      await approve(quoteAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const checkQuoteAssetBalance = (quoteAssetAmountInBase) => {\n    if (quoteAssetAmountInBase.gt(quoteAssetBalance)) {\n      if (quoteAsset.addr === WETH.addr) {\n        setPanelHelperText('You dont have enough WETH to make this order, you may need to wrap some ETH into WETH.');\n        setPanelOpended(true);\n        return false;\n      }\n      toast(`Insufficient ${quoteAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkBaseAssetBalance = (baseAssetAmountInBase: BigNumber) => {\n    if (baseAssetAmountInBase.gt(baseAssetBalance)) {\n      toast(`Insufficient ${baseAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkAndAllowBaseAsset = async (baseAssetAmountBase: BigNumber) => {\n    const tokenAllowance = new BigNumber(await getAllowance(baseAsset.addr, user, ZeroX_ERC20Proxy));\n    if (tokenAllowance.lt(baseAssetAmountBase)) {\n      toast(`Please approve 0x to spend your oToken ${baseAsset.symbol}`);\n      await approve(baseAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const clickCreateOrder = async () => {\n    if (user === '') {\n      toast('Please connect wallet first');\n      return;\n    }\n    let order;\n    if (tradeType === 'buy') {\n      const quoteAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals);\n\n      // check quote asset balance\n      if (!checkQuoteAssetBalance(quoteAssetInBaseUnit)) return;\n\n      // check quote asset allowance\n      await checkAndAllowQuoteAsset(quoteAssetInBaseUnit);\n\n      // create order\n      order = createOrder(\n        user,\n        quoteAsset.addr,\n        baseAsset.addr,\n        quoteAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate, baseAsset.decimals),\n        expiry,\n      );\n    } else {\n      const baseAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate, baseAsset.decimals);\n\n      if (!checkBaseAssetBalance(baseAssetInBaseUnit)) return;\n\n      await checkAndAllowBaseAsset(baseAssetInBaseUnit);\n\n      order = createOrder(\n        user,\n        baseAsset.addr,\n        quoteAsset.addr,\n        baseAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals),\n        expiry,\n      );\n    }\n    const signedOrder = await signOrder(order);\n    try {\n      await broadcastOrders([signedOrder]);\n    } catch (error) {\n      toast(error);\n    }\n  };\n\n  const clickFillOrders = async () => {\n    const takerAmountBase = fillingtakerAmounts.reduce((prev, cur) => prev.plus(new BigNumber(cur)), new BigNumber(0));\n    if (tradeType === 'buy') {\n      if (!checkQuoteAssetBalance(takerAmountBase)) return;\n      await checkAndAllowQuoteAsset(takerAmountBase);\n    } else {\n      if (!checkBaseAssetBalance(takerAmountBase)) return;\n      await checkAndAllowBaseAsset(takerAmountBase);\n    }\n    await fillOrders(\n      selectedOrders.map((o) => o.order),\n      fillingtakerAmounts,\n      selectedOrders.map((o) => o.order.signature),\n      toBaseUnitBN(feeInETH, 18).toString(),\n      fastGasPrice.toString(),\n    );\n  };\n\n  const clickFillAndCreate = async () => {\n    await clickCreateOrder();\n    await clickFillOrders();\n  };\n\n  return (\n    <>\n      <BuyAndSellBlock theme={theme}>\n        <Header theme={theme}>\n          <Wrapper>Balance</Wrapper>\n        </Header>\n        <Wrapper>\n          <BuySellTopPart theme={theme}>\n            <FlexWrapper>\n              <div>{baseAsset.symbol}</div>\n              <BuySellTopPartText>{toTokenUnitsBN(baseAssetBalance, baseAsset.decimals).toFormat(4)}</BuySellTopPartText>\n            </FlexWrapper>\n            <FlexWrapper>\n              <div>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>\n                    <LinkBase onClick={() => setPanelOpended(true)}>\n                      {quoteAsset.symbol}\n                    </LinkBase>\n                  </p>\n                  { quoteAsset.symbol === WETH.addr ? (\n                    <Help hint=\"What is WETH?\">\n                      WETH is Wraped ETH, the erc20 version of ETH. You must have WETH to create and fill orders on 0x.\n                      {' '}\n                      <LinkBase onClick={() => setPanelOpended(true)}>Click here to wrap your ETH now!</LinkBase>\n                    </Help>\n                  ) : <></> }\n                </Flex>\n              </div>\n              <BuySellTopPartText>{toTokenUnitsBN(quoteAssetBalance, quoteAsset.decimals).toFormat(4)}</BuySellTopPartText>\n            </FlexWrapper>\n          </BuySellTopPart>\n        </Wrapper>\n        <Wrapper>\n          <TabWrapper theme={theme}>\n            <Tab\n              active={tradeType === 'buy'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('buy');\n              }}\n              theme={theme}\n            >\n              Buy\n            </Tab>\n            <Tab\n              active={tradeType === 'sell'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('sell');\n              }}\n              theme={theme}\n            >\n              Sell\n            </Tab>\n          </TabWrapper>\n          <BuySellLowerPart>\n            <Label>Amount</Label>\n            { baseAsset.symbol.toLowerCase().includes('call')\n              ? <WarningText text={`Buy ${baseAsset.strikePriceInUSD} ${baseAsset.symbol} to hedge 1 ETH.`} />\n              : <></> }\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeBaseAmount(e.target.value)}\n              value={baseAmountToCreate.plus(baseAmountToFill).toNumber()}\n              adornmentPosition=\"end\"\n              adornment={baseAsset.symbol}\n            />\n\n            <Label>Price Per Token</Label>\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeRate(e.target.value)}\n              value={rate.toNumber()}\n              adornmentPosition=\"end\"\n              adornment={quoteAsset.symbol}\n            />\n\n            <Label>Expires After</Label>\n            <GroupButtonWrapper>\n              {['1 Hour', '1 Day', '1 Week'].map((x, i) => (\n                <GroupButton\n                  disabled={hasSelectedOrders && !isFillingAndCreating}\n                  theme={theme}\n                  onClick={() => setActiveButton(i)}\n                  key={x}\n                  index={i}\n                  isActive={activeButton === i}\n                >\n                  {x}\n                </GroupButton>\n              ))}\n            </GroupButtonWrapper>\n\n            <BottomTextWrapper>\n              <BottomText>{tradeType === 'buy' ? 'Cost' : 'Premium'}</BottomText>\n              <BottomText>{`${quoteAssetAmount.toFixed(4)} ${quoteAsset.symbol}`}</BottomText>\n            </BottomTextWrapper>\n            <BottomTextWrapper>\n              <BottomText>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>Fee</p>\n                  <Help hint=\"Why am I paying?\">\n                    This is the protocol fee charged by 0x.\n                    In addition to this, you still need to pay for gas if you are taking orders.\n                  </Help>\n                </Flex>\n              </BottomText>\n              <BottomText>{`${feeInETH} ETH` }</BottomText>\n            </BottomTextWrapper>\n          </BuySellLowerPart>\n        </Wrapper>\n        <Flex>\n          { hasSelectedOrders // is filling orders\n            ? isFillingAndCreating\n              ? (\n                <Button\n                  onClick={clickFillAndCreate}\n                  label=\"Create And Fill\"\n                  wide\n                />\n              )\n              : (\n                <Button\n                  onClick={clickFillOrders}\n                  label=\"Fill Orders\"\n                  wide\n                />\n              )\n            : (\n              <Button\n                onClick={clickCreateOrder}\n                label={tradeType === 'buy' ? 'Create Buy Order' : 'Create Sell Order'}\n                wide\n              />\n            )}\n\n        </Flex>\n      </BuyAndSellBlock>\n      <WrapETHPanel\n        user={user}\n        opened={panelOpend}\n        setOpen={setPanelOpended}\n        wethBalance={quoteAssetBalance}\n        helperText={wethPanelHelperText}\n        setHelperText={setPanelHelperText}\n      />\n    </>\n  );\n}\n\nexport default BuyAndSell;\n\n\n","import React, { useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport {  SidePanel, Button } from '@aragon/ui';\nimport OptionBoard from './OptionBoard';\nimport TabBoard from './TabBoard';\nimport BuyAndSell from './BuyAndSell';\n\nimport { getTokenBalance } from '../../utils/infura';\nimport { getOrderBook, isValid } from '../../utils/0x';\nimport { eth_puts, eth_calls } from '../../constants/options';\nimport * as types from '../../types'\nimport * as tokens from '../../constants/tokens';\n\nimport tracker from '../../utils/tracker';\n\nconst quoteAsset = tokens.USDC;\n\nfunction OptionTrading({ user }: { user: string }) {\n\n  const [buySellActive, setBuySellActive] = useState(false)\n\n  const [baseAsset, setBaseAsset] = useState<types.ETHOption | undefined>(\n    eth_puts.concat(eth_calls).find((o) => o.expiry > Date.now() / 1000),\n  );\n\n  useEffect(() => {\n    tracker.pageview('/trade/0x');\n  }, []);\n\n  const [asks, setAsks] = useState<types.order[]>([]);\n  const [bids, setBids] = useState<types.order[]>([]);\n\n  const [tradeType, setTradeType] = useState<types.tradeType>('buy');\n  const [selectedOrders, setSelectedOrders] = useState([]);\n\n  // user balance\n  const [baseAssetBalance, setBaseAssetBalance] = useState(new BigNumber(0));\n  const [quoteAssetBalance, setQuoteAssetBalance] = useState(new BigNumber(0));\n\n  // BaseAsset changeed: Update orderbook and base asset\n  useEffect(() => {\n    let isCancelled = false;\n\n    // update orderbook\n    const updateOrderBook = async () => {\n      const res = await getOrderBook(baseAsset!.addr, quoteAsset.addr);\n      if (!isCancelled) {\n        setAsks(res.asks.records.filter((record) => isValid(record)));\n        setBids(res.bids.records.filter((record) => isValid(record)));\n      }\n    };\n\n    // update baseAsset Balance\n    const updateBaseBalance = async () => {\n      const baseBalance = await getTokenBalance(baseAsset!.addr, user);\n      if (!isCancelled) {\n        setBaseAssetBalance(new BigNumber(baseBalance));\n      }\n    };\n\n    updateOrderBook();\n    updateBaseBalance();\n    // updateVaultData();\n    const idOrderBook = setInterval(updateOrderBook, 2000);\n    const idBaseBalance = setInterval(updateBaseBalance, 30000);\n    // const idUpdateVault = setInterval(updateVaultData, 10000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idOrderBook);\n      clearInterval(idBaseBalance);\n      // clearInterval(idUpdateVault);\n    };\n  }, [baseAsset, user]);\n\n  const [buttonLabel, setButtonLabel] = useState(`Make Order for ${baseAsset?.title}`)\n  const [sidePanelTitle, setSidePanelTitle] = useState('Make Order')\n  useEffect(()=>{\n    if (selectedOrders.length > 0) {\n      setButtonLabel(`Fill Orders for ${baseAsset?.title}`)\n      setSidePanelTitle(`Fill Orders`)\n    } else {\n      setButtonLabel(`Make Orders for ${baseAsset?.title}`)\n      setSidePanelTitle(`Make Orders`)\n    }\n  }, [selectedOrders, baseAsset])\n\n  // update quote asset\n  useEffect(() => {\n    let isCancelled = false;\n    const updateQuoteBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getTokenBalance(quoteAsset.addr, user);\n      if (!isCancelled) {\n        setQuoteAssetBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateQuoteBalance();\n    const idQuoteAssetBalance = setInterval(updateQuoteBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idQuoteAssetBalance);\n    };\n  }, [user]);\n\n  return (\n    <>\n      <SidePanel title={sidePanelTitle} opened={buySellActive} onClose={() => setBuySellActive(false)}>\n        <br />\n        <br />\n        <BuyAndSell\n          user={user}\n          baseAsset={baseAsset!}\n          quoteAsset={quoteAsset}\n          baseAssetBalance={baseAssetBalance}\n          quoteAssetBalance={quoteAssetBalance}\n          tradeType={tradeType}\n          setTradeType={setTradeType}\n\n          selectedOrders={selectedOrders}\n          setSelectedOrders={setSelectedOrders}\n        />\n      </SidePanel>\n      <OptionBoard\n        quoteAsset={quoteAsset}\n        baseAsset={baseAsset!}\n        setBaseAsset={setBaseAsset}\n        setTradeType={setTradeType}\n        setSelectedOrders={setSelectedOrders}\n      />\n      <br />\n      <TabBoard\n        asks={asks}\n        bids={bids}\n        user={user}\n        option={baseAsset!}\n        quoteAsset={quoteAsset}\n        tradeType={tradeType}\n        selectedOrders={selectedOrders}\n        setTradeType={setTradeType}\n        setSelectedOrders={setSelectedOrders}\n      />\n      <br />\n      <Button mode=\"strong\" wide onClick={() => { setBuySellActive(true) }}>{buttonLabel}</Button>\n    </>\n  );\n}\n\n// const LeftPart = styled.div`\n//   width: 18%;\n//   padding-right: 1.5%;\n// `;\n\n// const RightPart = styled.div`\n//   width: 80%;\n// `;\n\n// const WholeScreen = styled.div`\n//   textAlign: center;\n//   padding-left: 1%;\n//   padding-right: 10%;\n//   position:fixed;\n//   overflow-y:scroll;\n//   overflow-x:hidden;\n//   left: 0;\n//   bottom: 0;\n//   top: 6%;\n//   width: 100%;\n//   overflow: auto\n// `;\n\n// const FlexWrapper = styled.div`\n//   display: flex;\n//   height:87%\n// `;\n\nexport default OptionTrading;\n","import React, { ReactChild } from 'react'\nimport { Box } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\ntype FieldCardProps = {\n  title:string,\n  description:string, \n  child: ReactChild\n}\n\nfunction FiledCard({title, description, child}:FieldCardProps){\n  \n  return (\n    <Box>\n      <div style={{display:'flex', padding:100}}>\n        <div style={{width:'40%'}}>\n        <SectionTitle title={title}/>\n        <div style={{paddingLeft:5}}><Comment text={description} /></div>\n        </div>\n        <div style={{width:'60%', padding:30}}>\n          {child}\n        </div>\n      </div>\n    </Box>\n  )\n  \n}\n\nexport default FiledCard","import React from 'react'\nimport { Header, IdentityBadge, IconCircleCheck } from '@aragon/ui'\n\nimport { Comment } from '../common'\n\ntype CompleteCreate = {\n  address: string,\n  setDetailComplete: boolean,\n}\n\nfunction ComplateCreate({ address, setDetailComplete }: CompleteCreate) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary=\"Option Created!\" />\n        <div style={{padding: 24}}><IconCircleCheck size=\"large\" /></div>\n      </div>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n      <IdentityBadge entity={address} shorten={false} />\n      </div>\n      <br></br>\n      {!setDetailComplete\n        ? <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Comment text=\"Remeber to set the token name and symbol!\" />\n        </div>\n        : <></>}\n    </div>\n  )\n\n}\n\nexport default ComplateCreate","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Box, Header, Button, useTheme, useToast, LoadingRing } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\nimport CompleteCreate from './Complete'\n\nimport { USDC, OPYN_ETH } from '../../constants/tokens'\n\nimport { setDetail, deployOTokenContract } from '../../utils/web3'\n\ntype ConfirmOptionProps = {\n  user: string,\n  putOrCall: 0 | 1; //'Put' | 'Call',\n  americanOrEuropean: 0 | 1; // 'american' | 'european',\n  strikePrice: number,\n  expiration: Date,\n  strikePriceIsValid: Boolean,\n  setProgress: Function\n}\n\nfunction ConfirmETHOption(\n  {\n    user,\n    putOrCall,\n    americanOrEuropean,\n    strikePrice,\n    expiration,\n    strikePriceIsValid,\n    setProgress\n  }: ConfirmOptionProps) {\n  const toast = useToast()\n\n  const [isCreating, setIsCreating] = useState(false)\n  const [isSettingDetail, setIsSettingDetail] = useState(false)\n  const [allComplete , setAllComplete] = useState(false)\n\n  const type = putOrCall === 0 ? 'Put' : 'Call'\n  const expiry = new BigNumber(expiration.getTime()).div(1000).toNumber()\n  const window = americanOrEuropean === 0\n    ? expiry\n    : new BigNumber(expiry).minus(86400).toNumber()\n  const name = `Opyn ETH ${type} $${strikePrice} ${FormatDate(expiration)}`\n  const symbol = `oETH $${strikePrice} ${type} ${FormatDate(expiration)}`\n\n  const [newTokenAddr, setNewTokenAddr] = useState('')\n\n\n  // Create option -> Check user permission -> Set detail\n  const onClickCreate = async () => {\n    if (!user) {\n      toast(\"Please connect wallet\")\n      return\n    }\n    if (!strikePriceIsValid) {\n      toast(\"Invalid strike price.\")\n      return\n    }\n    let newTokenAddr = ''\n    setIsCreating(true)\n    try {\n      if (type === 'Put') {\n        const oToken = await deployOTokenContract(\n          USDC.addr, // collateral\n          -1 * USDC.decimals,\n          OPYN_ETH.addr, // underlying\n          -1 * OPYN_ETH.decimals,\n          -7, // decimals\n          new BigNumber(strikePrice).div(10).integerValue().toNumber(), //strike price\n          -6, // strikePrice exp\n          USDC.addr,\n          expiry,\n          window\n        )\n\n        newTokenAddr = oToken\n      } else { // Create a eth call\n        const strikePriceNum = new BigNumber(10000000).div(strikePrice).integerValue().toNumber()\n        const oToken = await deployOTokenContract(\n          OPYN_ETH.addr, // collateral\n          -1 * OPYN_ETH.decimals,\n          USDC.addr, // underlying\n          -1 * USDC.decimals,\n          -7, // decimals\n          strikePriceNum, //strike price\n          -14, // strikePrice exp\n          OPYN_ETH.addr,\n          expiry,\n          window\n        )\n\n        newTokenAddr = oToken\n      }\n    } catch (error) {\n      setIsCreating(false)\n      return\n    }\n\n    setIsCreating(false)\n    setNewTokenAddr(newTokenAddr)\n\n    setIsSettingDetail(true)\n    setProgress(0.9)\n\n    try {\n      await setDetail(newTokenAddr, symbol, name)\n      setAllComplete(true)\n    } catch (error) {\n      console.log(error)\n    }\n    \n    setIsSettingDetail(false)\n    setProgress(1)\n  }\n\n  return (\n    <Box>\n      {\n        // not created\n        newTokenAddr === '' ?\n          isCreating\n            ? <ProcessingBox text=\"Creating Option...\" />\n            // Wait for confirm\n            : <ConfirmDiv\n              americanOrEuropean={americanOrEuropean}\n              name={name}\n              symbol={symbol}\n              onClickCreate={onClickCreate}\n            />\n\n          : isSettingDetail\n            ? <ProcessingBox text=\"Setting Detail...\" />\n            : <CompleteCreate address={newTokenAddr} setDetailComplete={allComplete} />\n      }\n    </Box>\n  )\n\n}\n\nexport default ConfirmETHOption\n\ntype ConfirmDivProps = {\n  americanOrEuropean: 0 | 1,\n  name: string,\n  symbol: string\n  onClickCreate: Function\n}\nfunction ConfirmDiv({ americanOrEuropean, name, symbol, onClickCreate }: ConfirmDivProps) {\n  const theme = useTheme()\n  return (\n    <div style={{ display: 'flex', height: 300 }}>\n      <div style={{ width: '40%', paddingTop: 100, paddingLeft: 100 }}>\n        <SectionTitle title=\"Almost done!\" />\n        <div style={{ paddingLeft: 5 }}><Comment text=\"Confirm Detail\" /></div>\n      </div>\n      <div style={{ width: '15%', paddingTop: 100, color: theme.surfaceContentSecondary }}>\n        <div>Type</div>\n        <div>Name</div>\n        <div>Symbol</div>\n      </div>\n      <div style={{ width: '30%', paddingTop: 100 }}>\n        <div>{americanOrEuropean ? 'European Option' : 'American Option'}</div>\n        <div>{name}</div>\n        <div>{symbol}</div>\n      </div>\n      <div style={{ width: '10%', paddingTop: 130 }}>\n        <Button label=\"Create\" onClick={onClickCreate}></Button>\n      </div>\n    </div>\n  )\n}\n\nfunction ProcessingBox({ text }: { text: string }) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary={text} />\n        <div style={{ padding: 25 }}><LoadingRing mode=\"half-circle\" /></div>\n      </div>\n    </div>\n  )\n}\n\n\n/**\n * Format datetime to dd/mm/yy\n * @param date \n */\nfunction FormatDate(date: Date) {\n  var dd = date.getDate().toString();\n  var mm = (date.getMonth() + 1).toString();\n  var yy = date.getFullYear().toString().substr(-2);\n\n  if (parseInt(dd) < 10) {\n    dd = '0' + dd\n  }\n  if (parseInt(mm) < 10) {\n    mm = '0' + mm\n  }\n\n  return dd + '/' + mm + '/' + yy;\n}","import styled from 'styled-components'\n\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props: { theme: { content: any; }; }) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nexport const GroupButton = styled.div`\n  height: 40px;\n  width: 50%;\n  border: 1px solid ${(props: { theme: { border: any; }; }) => props.theme.border};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props: { index: number; }) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props: { index: number; }) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props: { index: number; }) => (props.index === 1 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props: { index: number; }) => (props.index === 1 ? '5px' : '0px')};\n  background: ${(props: { disabled: any; theme: { surface: any; surfaceHighlight: any; }; isActive: boolean; }) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport ItemsCarousel from 'react-items-carousel';\nimport FieldCard from './FieldCard'\nimport ConfirmBox from './ConfirmETHOptionBox'\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\n\nimport {\n  IconArrowRight,\n  IconArrowLeft,\n  Button,\n  ProgressBar,\n  TextInput,\n  useTheme\n} from '@aragon/ui'\nimport { GroupButton, GroupButtonWrapper } from './GroupButton'\n\ntype CreateOETHProps = {\n  user: string\n}\n\nconst timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n\nfunction CreateOETH({ user }: CreateOETHProps) {\n\n  const theme = useTheme()\n  // put or call\n  const [putOrCall, setPutOrCall] = useState<0|1>(0)\n  const [americanOrEuropean, setAmOrEuro] = useState<0|1>(0)\n  // strike price\n  const [strikePriceForoETH, setStrikePriceForOETH] = useState<number>(200)\n  const strikePriceIsValid = new BigNumber(strikePriceForoETH).mod(10).eq(0)\n\n  const [expiration, setExpiration] = useState<Date>(new Date())\n\n  // index of ItemsCarousel\n  const [step, setStep] = useState(3)\n  const [progress, setProgress] = useState(0)\n\n  const onChangeDatePicker = (dateTime:Date) => {\n    setExpiration(dateTime)\n  }\n\n  return (\n    <>\n      <ItemsCarousel\n        requestToChangeActive={setStep}\n        activeItemIndex={step}\n        numberOfCards={1}\n        rightChevron={<div style={{ margin: '20px' }}><Button label=\"next\" icon={<IconArrowRight />} display=\"icon\" /></div>}\n        leftChevron={<Button label=\"prev\" icon={<IconArrowLeft />} display=\"icon\" />}\n        outsideChevron={false}\n        chevronWidth={40}\n      >\n        {/* \b\bOption Type */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"American or European?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['American', 'European',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setAmOrEuro(i as 0 | 1)}\n                    isActive={americanOrEuropean === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* Call or Put */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"Put or Call?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['Put', 'Call',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setPutOrCall(i as 0 | 1)}\n                    isActive={putOrCall === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* \b\bStrikePrice */}\n        <FieldCard\n          title={'Strike Price'}\n          description=\"Enter Strike Price\"\n          child={\n            <div style={{ width: '100%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment=\"USDC\"\n                type=\"number\"\n                value={strikePriceForoETH}\n                onChange={(e) => setStrikePriceForOETH(e.target.value)} />\n              {\n                strikePriceIsValid\n                  ? <></>\n                  : <div style={{ fontSize: 14, color: theme.warning }}> Strike price must be dividable by 10 </div>\n              }\n            </div>\n          }\n        />\n        <FieldCard\n          title={'Expiration'}\n          description={`Choose Expiration Time (${timezone})`}\n          child={\n            <div style={{ width: '80%' }}>\n              <DateTimePicker\n                onChange={onChangeDatePicker}\n                />\n            </div>\n          } />\n        <ConfirmBox\n          user={user}\n          putOrCall={putOrCall}\n          americanOrEuropean={americanOrEuropean}\n          strikePrice={strikePriceForoETH}\n          strikePriceIsValid={strikePriceIsValid}\n          expiration={expiration}\n          setProgress={setProgress}\n        />\n\n      </ItemsCarousel>\n      <ProgressBar value={progress ? progress : step / 5} />\n    </>\n  )\n\n}\n\nexport default CreateOETH","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Box, Header, Button, useTheme, useToast, LoadingRing } from '@aragon/ui'\n\nimport { SectionTitle, Comment } from '../common'\n\nimport CompleteCreate from './Complete'\n\nimport { deployOTokenContract, setDetail } from '../../utils/web3'\n\nimport * as types from '../../types'\n\ntype ConfirmOptionProps = {\n  symbol: string,\n  name: string,\n  decimals: number,\n  underlying: types.token,\n  strike: types.token,\n  collateral: types.token,\n  user: string,\n  americanOrEuropean: 0 | 1; // 'american' | 'european',\n  strikePrice: BigNumber,\n  expiration: Date,\n  setProgress: Function\n}\n\nfunction ConfirmCustomOption(\n  {\n    decimals,\n    symbol,\n    name,\n    underlying,\n    strike,\n    collateral,\n    user,\n    americanOrEuropean,\n    strikePrice,\n    expiration,\n    setProgress\n  }: ConfirmOptionProps) {\n  const toast = useToast()\n\n  const [isCreating, setIsCreating] = useState(false)\n  const [isAllComplete, setAllComplete] = useState(false)\n  const [isSettingDetail, setIsSettingDetail] = useState(false)\n\n  const expiry = new BigNumber(expiration.getTime()).div(1000).toNumber()\n  const window = americanOrEuropean === 0\n    ? expiry\n    : new BigNumber(expiry).minus(86400).toNumber()\n\n  const [newTokenAddr, setNewTokenAddr] = useState('')\n\n\n  // Create option -> Check user permission -> Set detail\n  const onClickCreate = async () => {\n    if (!user) {\n      toast(\"Please connect wallet\")\n      return\n    }\n    let newTokenAddr = ''\n    setIsCreating(true)\n    try {\n      const oToken = await deployOTokenContract(\n        collateral.addr, // collateral\n        -1 * collateral.decimals,\n        underlying.addr, // underlying\n        -1 * underlying.decimals,\n        -1 * decimals, // decimals\n        strikePrice.c ? strikePrice.c[0] : 1, //strike price\n        strikePrice.e ? -1 * strikePrice.e : -1, // strikePrice exp\n        strike.addr,\n        expiry,\n        window\n      )\n      newTokenAddr = oToken\n    } catch (error) {\n      setIsCreating(false)\n      return\n    }\n\n    setIsCreating(false)\n    setNewTokenAddr(newTokenAddr)    \n    setIsSettingDetail(true)\n    setProgress(0.9)\n    try {\n      await setDetail(newTokenAddr, symbol, name)\n      setAllComplete(true)\n    } catch (error) {\n      console.log(error)\n    }\n    setIsSettingDetail(false)\n    setProgress(1)\n  }\n\n  return (\n    <Box>\n      {\n        // not created\n        newTokenAddr === '' ?\n          isCreating\n            ? <ProcessingBox text=\"Creating Option...\" />\n            // Wait for confirm\n            : <ConfirmDiv\n              americanOrEuropean={americanOrEuropean}\n              name={name}\n              symbol={symbol}\n              onClickCreate={onClickCreate}\n              collateral={collateral}\n              underlying={underlying}\n              strike={strike}\n              strikePrice={strikePrice}\n            />\n\n          // Already created\n          : isSettingDetail\n              ? <ProcessingBox text=\"Setting Detail...\" />\n              : <CompleteCreate address={newTokenAddr} setDetailComplete={isAllComplete} />\n      }\n    </Box>\n  )\n\n}\n\nexport default ConfirmCustomOption\n\ntype ConfirmDivProps = {\n  collateral: types.token,\n  underlying: types.token,\n  strike: types.token,\n  strikePrice: BigNumber,\n  americanOrEuropean: 0 | 1,\n  name: string,\n  symbol: string\n  onClickCreate: Function\n}\nfunction ConfirmDiv({ americanOrEuropean, name, symbol, onClickCreate, collateral, underlying, strike, strikePrice }: ConfirmDivProps) {\n  const theme = useTheme()\n  return (\n    <div style={{ display: 'flex', height: 300 }}>\n      <div style={{ width: '40%', paddingTop: 100, paddingLeft: 100 }}>\n        <SectionTitle title=\"Almost done!\" />\n        <div style={{ paddingLeft: 5 }}><Comment text=\"Confirm Detail\" /></div>\n      </div>\n      <div style={{ width: '15%', paddingTop: 60, color: theme.surfaceContentSecondary }}>\n        <div>Type</div>\n        <div>Name</div>\n        <div>Symbol</div>\n        <div>Underlying</div>\n        <div>Strike</div>\n        <div>Collateral</div>\n      </div>\n      <div style={{ width: '30%', paddingTop: 60 }}>\n        <div>{americanOrEuropean ? 'European Option' : 'American Option'}</div>\n        <div>{name}</div>\n        <div>{symbol}</div>\n        <div>{underlying.symbol}</div>\n        <div>{strike.symbol}</div>\n        <div>{collateral.symbol}</div>\n      </div>\n      <div style={{ width: '10%', paddingTop: 130 }}>\n        <Button label=\"Create\" onClick={onClickCreate}></Button>\n      </div>\n    </div>\n  )\n}\n\nfunction ProcessingBox({ text }: { text: string }) {\n  return (\n    <div style={{ height: 300, paddingTop: 40 }}>\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center' }}>\n        <Header primary={text} />\n        <div style={{ padding: 25 }}><LoadingRing mode=\"half-circle\" /></div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport ItemsCarousel from 'react-items-carousel';\nimport FieldCard from './FieldCard'\n\nimport {\n  DropDown,\n  Box,\n  IconArrowRight,\n  IconArrowLeft,\n  Button,\n  ProgressBar,\n  DateRangePicker,\n  TextInput,\n  useTheme\n} from '@aragon/ui'\nimport { SectionTitle, Comment } from '../common'\nimport { GroupButton, GroupButtonWrapper } from './GroupButton'\nimport ConfirmDetail from './ConfirmCustomOption'\n\n// import * as types from '../../types'\nimport * as tokens from '../../constants/tokens'\n\n\ntype CreateCustomOption = {\n  user: string,\n  today: Date,\n  tomorrow: Date,\n  localOffset: number\n}\n\n\nfunction CreateCustomOption({ user, today, tomorrow, localOffset }: CreateCustomOption) {\n\n  const theme = useTheme()\n\n  const tokensAvailable = [tokens.OPYN_ETH, tokens.USDC, tokens.WETH, tokens.cDAI, tokens.cUSDC]\n\n  const [name, setName] = useState('')\n  const [symbol, setSymbol] = useState('')\n  const [decimals, setDecimals] = useState(0)\n\n  const [collateralIdx, setCollateralIdx] = useState<number>(0)\n  const [underlyingIdx, setUnderlyingIdx] = useState<number>(3)\n  const [strikeIdx, setStrikeIdx] = useState<number>(1)\n\n  const [americanOrEuropean, setAmOrEuro] = useState<0 | 1>(0)\n  // strike price\n  const [strikePrice, setStrikePrice] = useState<BigNumber>(new BigNumber(0))\n\n  const [expiration, setExpiration] = useState<Date>(tomorrow)\n\n  // index of ItemsCarousel\n  const [step, setStep] = useState(0)\n  const [progress, setProgress] = useState(0)\n\n  const onChangeDatePicker = ({ end }: { end: Date }) => {\n    const endUTCs = end.getTime() + 1 + localOffset\n    const endUTC = new Date(endUTCs)\n    setExpiration(endUTC)\n  }\n\n  return (\n    <>\n      <ItemsCarousel\n        requestToChangeActive={setStep}\n        activeItemIndex={step}\n        numberOfCards={1}\n        rightChevron={<div style={{ margin: '20px' }}><Button label=\"next\" icon={<IconArrowRight />} display=\"icon\" /></div>}\n        leftChevron={<Button label=\"prev\" icon={<IconArrowLeft />} display=\"icon\" />}\n        outsideChevron={false}\n        chevronWidth={40}\n      >\n        {/* Basic Info */}\n        <Box>\n          <div style={{ display: 'flex', padding: 100, height: 300 }}>\n            <div style={{ width: '40%' }}>\n              <SectionTitle title=\"Create New Option\" />\n              <div style={{ paddingLeft: 5 }}><Comment text=\"Basic Token info\" /></div>\n            </div>\n            <div style={{ width: '60%', padding: 0, display:'flex' }}>\n              \n              <div style={{width: '100%'}}> \n                <div><TextInput type='text' placeholder=\"Token Name\" value={name} onChange={(event) => setName(event.target.value)} /></div>\n                <div><TextInput type='text' placeholder=\"Symbol\" value={symbol} onChange={(event) => setSymbol(event.target.value)} /></div>\n                <div><TextInput type='number' placeholder=\"Decimals\" value={decimals ? decimals : undefined} onChange={(event) => setDecimals(event.target.value)} /></div>\n              </div>\n              \n            </div>\n          </div>\n        </Box>\n\n        {/* \b\bOption Type */}\n        <FieldCard\n          title={'Option Type'}\n          description=\"American or European?\"\n          child={\n            <div style={{ width: '100%' }} >\n              <GroupButtonWrapper>\n                {['American', 'European',].map((x, i) => (\n                  <GroupButton theme={theme} key={x}\n                    onClick={() => setAmOrEuro(i as 0 | 1)}\n                    isActive={americanOrEuropean === i}>\n                    {x}\n                  </GroupButton>\n                ))}\n              </GroupButtonWrapper>\n            </div>}\n        />\n        {/* Underlying */}\n        <FieldCard\n          title={'Underlying Asset'}\n          description=\"Protected asset\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown \n                items={tokensAvailable.map(o => o.symbol)} \n                selected={underlyingIdx}\n                onChange={(idx) => setUnderlyingIdx(idx)}/>\n            </div>}\n        />\n        {/* Underlying */}\n        <FieldCard\n          title={'Strike Asset'}\n          description=\"The asset use as protection\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown items={tokensAvailable.map(o => o.symbol)}\n              selected={strikeIdx}\n              onChange={(idx) => setStrikeIdx(idx)}/>\n            </div>}\n        />\n\n        {/* \b\bStrikePrice */}\n        <FieldCard\n          title={'Strike Price'}\n          description=\"Enter Strike Price\"\n          child={\n            <div style={{ width: '100%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                type=\"number\"\n                value={strikePrice.toNumber()}\n                onChange={(e) => setStrikePrice(e.target.value)} />\n            </div>\n          }\n        />\n        {/* Collateral */}\n        <FieldCard\n          title={'Collateral'}\n          description=\"Set Collateral asset\"\n          child={\n            <div style={{ width: '100%' }} >\n              <DropDown items={tokensAvailable.map(o => o.symbol)}\n              selected={collateralIdx}\n              onChange={(idx) => setCollateralIdx(idx)}/>\n            </div>}\n        />\n        <FieldCard\n          title={'Expiration'}\n          description=\"Choose end date to expiration date\"\n          child={\n            <div style={{ width: '80%' }}>\n              <DateRangePicker\n                onChange={onChangeDatePicker}\n                startDate={today}\n                endDate={expiration} />\n            </div>\n          } />\n        <ConfirmDetail\n          user={user}\n          name={name}\n          symbol={symbol}\n          decimals={decimals}\n          collateral={tokensAvailable[collateralIdx]}\n          strike={tokensAvailable[strikeIdx]}\n          underlying={tokensAvailable[underlyingIdx]}\n          americanOrEuropean={americanOrEuropean}\n          strikePrice={strikePrice}\n          expiration={expiration}\n          setProgress={setProgress}\n        />\n\n      </ItemsCarousel>\n      <ProgressBar value={progress ? progress : step / 7} />\n    </>\n  )\n\n}\n\nexport default CreateCustomOption","import React, { useState } from 'react'\n\nimport {\n  Header,\n  Tabs\n} from '@aragon/ui'\n\nimport CreateETHOption from './CreateETHOption'\nimport CreateCustomOption from './CreateCustomOption'\n\nconst today = new Date(new Date().toDateString())\nconst localOffset = today.getTimezoneOffset() * 60000; // in millisecond\nconst tomorrow = new Date(today.getTime() + (24 * 60 * 60 * 1000) + localOffset);\n\nfunction CreateOption({ user }: { user: string }) {\n\n  const [selectedTab, setSelectedTab] = useState(0)\n\n\n  return (\n    <>\n      <Header primary=\"Create new option\" />\n      <Tabs\n        items={[\n          'ETH Option Series',\n          // 'Custom Option'\n        ]}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      {selectedTab === 0\n        ? <CreateETHOption user={user} /> \n        : <CreateCustomOption user={user} localOffset={localOffset} today={today} tomorrow={tomorrow} />\n      }\n      \n    </>\n  )\n}\n\n\nexport default CreateOption","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from '@aragon/ui';\n\nfunction Footer({ theme } : { theme:string }) {\n  const history = useHistory();\n\n  return (\n    history.location.pathname.includes('/trade/')\n      ? <></>\n      : (\n        <div style={{\n          backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n          textAlign: 'center',\n          padding: '12px',\n          position: 'fixed',\n          left: '0',\n          bottom: '0',\n          height: '40px',\n          width: '100%',\n          fontSize: '14px'\n        }}>\n          Powered By\n          {' '}\n          <Link external href=\"https://opyn.co/#/\">\n            Opyn\n          </Link>\n          {', '}\n          <Link external href=\"https://ui.aragon.org/\">\n            Aragon UI\n          </Link>\n          {', '}\n          <Link external href=\"https://www.blocknative.com/\">\n            Blocknative\n          </Link>\n          {'. '}\n          <Link external href=\"https://www.kollateral.co/\">\n            Kollateral\n          </Link>\n          {'. '}\n          Hosted on\n          {' '}\n          {' '}\n          <Link external href=\"https://github.com/antoncoding/opyn-monitor\">\n            GitHub\n          </Link>\n        </div>\n      )\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js'\n\nimport { getETHPrice } from './utils/etherscan'\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\n\nimport OptionLists from './components/AllContracts';\nimport OptionDetail from './components/OptionPage';\n\nimport MyVaults from './components/MyVaults';\nimport ManageVault from './components/ManageVault';\n\n// List of Uniswap exchanges\nimport ExchangeList from './components/ExchangeList/index';\nimport UniswapExchanges from './components/UniswapExchange';\n\nimport TradeOnUniswap from './components/TradeUniswap'\nimport TradeOn0x from './components/Trade0x';\nimport CreateOption from './components/CreateOption'\n\nimport Footer from './components/Footer';\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme:string) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  const [spotPrice, setSpot] = useState<BigNumber>(new BigNumber(0))\n\n  useEffect(() => {\n    let canceled = false\n    async function getSpotPrice() {\n      const spot = await getETHPrice()\n      if (!canceled) {\n        setSpot(new BigNumber(spot))\n      }\n    }\n    getSpotPrice()\n    const id = setInterval(getSpotPrice, 10000)\n    return () => {\n      clearInterval(id)\n    }\n  }, [])\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionDetail user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <OptionLists />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trading */}\n          <Route path=\"/trade/0x/\">\n            <TradeOn0x\n              user={user}\n            />\n          </Route>\n          <Route path=\"/trade/uniswap\">\n           <TradeOnUniswap user={user} spotPrice={spotPrice} />\n          </Route>\n          {/* <Route path=\"/trades/test/\"><ZEROXTest /></Route> */}\n          <Route path=\"/uniswap/:token/\"><UniswapExchanges user={user} spotPrice={spotPrice} /></Route>\n          <Route path=\"/uniswap/\">\n            <ExchangeList />\n          </Route>\n          <Route path=\"/create/\"><CreateOption user={user}/></Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\n\nMoment.locale('en')\nmomentLocalizer()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}