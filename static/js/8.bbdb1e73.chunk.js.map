{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/ledger-d063f060.js","../../src/helpers.js","../../src/index.js","../node_modules/bnc-onboard/dist/esm/providerEngine-17e38f7e.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../src/TransportU2F.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../src/Transport.js","../../src/Eth.js","../../src/utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","ledgerProvider","_x2","_ledgerProvider","mark","_callee9","options","networkId","rpcUrl","BigNumber","networkName","basePath","addressToPath","enabled","provider","enable","addresses","getPrimaryAddress","getAllAccountsAndBalances","_getAllAccountsAndBalances","setPrimaryAccount","_getAccounts","getBalance","_signTransaction","_signTransaction2","wrap","_context9","prev","_callee8","transactionData","path","transport","eth","transaction","ledgerResult","_context8","values","TransportU2F","create","sent","Eth","t0","Error","Transaction","chain","raw","buffer","Buffer","signTransaction","serialize","v","r","s","abrupt","concat","t1","close","finish","stop","_x5","address","sendAsync","jsonrpc","method","params","id","e","res","result","numberToGet","getMore","_ref3","_callee5","addressesAlreadyFetched","paths","ledgerLive","legacy","_i2","_paths","_ref4","allAddresses","_context5","size","message","getAddress","set","toLowerCase","_x3","_x4","accounts","entries","accountIndex","findIndex","_ref","unshift","splice","Map","_callee7","amountToGet","_args7","_context7","all","map","_ref5","_callee6","balance","_context6","_x6","keys","networkIdToDerivationPath","createProvider","getAccounts","callback","send","ledger","preferred","label","iconSrc","name","svg","wallet","_wallet","_callee4","helpers","_context4","connect","disconnect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","type","desktop","errorClasses","deserializers","addCustomErrorDeserializer","createCustomErrorClass","C","EthAppPleaseEnableContractData","TransportRaceCondition","TransportError","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","statusText","k","smsg","code","getAltStatusMessage","statusCodeStr","statusCode","TransportStatusError","config","idMgmt","HookedWalletSubprovider","rpcSubProvider","RpcSource","includes","Web3ProviderEngine","addProvider","SubscriptionSubprovider","FilterSubprovider","start","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","wrapU2FTransportError","originalError","webSafe64","base64","attemptExchange","keyHandle","apdu","wrapApdu","challenge","signRequest","version","appId","location","origin","log","timeoutMillis","response","signatureData","data","substring","transportInstances","constructor","scrambleKey","unwrap","u2fError","t","isSupported","list","supported","listen","observer","unsubscribed","unsubscribe","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","a","statusList","cla","ins","p1","sw","busyPromise","resolveBusy","unresponsiveReached","timeout","setTimeout","f","clearTimeout","console","decorateAppAPIMethod","_appAPIlock","openTimeout","found","sub","complete","listenTimeoutId","listenTimeout","Transport","open","ErrorMessage_ListenTimeout","ErrorMessage_NoDeviceFound","subscribers","obj","String","date","Date","dispatch","global","cb","splitPath","boolDisplay","boolChaincode","publicKeyLength","addressLength","offset","rawTx","toSend","maxChunkSize","chunkSize","apduResponse","remapTransactionRelatedErrors","components","element","number","parseInt","isNaN","foreach","index","array","iterate","_typeof","_possibleConstructorReturn","assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass"],"mappings":"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","file":"static/js/8.bbdb1e73.chunk.js","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'web3-provider-engine';\nimport 'web3-provider-engine/subproviders/rpc';\nimport 'web3-provider-engine/subproviders/hooked-wallet';\nimport 'web3-provider-engine/subproviders/subscriptions';\nimport 'web3-provider-engine/subproviders/filters';\nimport { c as createProvider } from './providerEngine-17e38f7e.js';\nimport { Transaction } from 'ethereumjs-tx';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport Eth from '@ledgerhq/hw-app-eth';\nimport buffer from 'buffer';\nvar ledgerIcon = \"\\n\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 450 450\\\" width=\\\"37\\\" height=\\\"37\\\"><style>.st0{fill:currentColor}</style><g id=\\\"squares_1_\\\"><path class=\\\"st0\\\" d=\\\"M578.2 392.7V24.3h25.6v344.1h175.3v24.3H578.2zm327.5 5.1c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5H804.6c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.3 2.6-28.9 3.9-43.5 3.8zM898 135.6c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm238-21.8c19.2 0 37.1 3.8 51.2 10.2 14.1 7.7 26.9 19.2 38.4 37.1h1.3c-1.3-21.7-1.3-42.2-1.3-62.7V0h24.3v392.7h-16.6l-6.4-42.2c-20.5 30.7-51.2 47.3-89.6 47.3s-66.5-11.5-87-35.8c-20.5-23-29.4-57.6-29.4-102.3 0-47.3 10.2-83.2 29.4-108.7 19.2-25.6 48.6-37.2 85.7-37.2zm0 21.8c-29.4 0-52.4 10.2-67.8 32-15.3 20.5-23 51.2-23 92.1 0 78 30.7 116.4 90.8 116.4 30.7 0 53.7-9 67.8-26.9 14.1-17.9 21.7-47.3 21.7-89.6v-3.8c0-42.2-7.7-72.9-21.7-90.8-12.8-20.5-35.8-29.4-67.8-29.4zm379.9-16.6v17.9l-56.3 3.8c15.3 19.2 23 39.7 23 61.4 0 26.9-9 47.3-26.9 64-17.9 16.6-40.9 24.3-70.4 24.3-12.8 0-21.7 0-25.6-1.3-10.2 5.1-17.9 11.5-23 17.9-5.1 7.7-7.7 14.1-7.7 23s3.8 15.3 10.2 19.2c6.4 3.8 17.9 6.4 33.3 6.4h47.3c29.4 0 52.4 6.4 67.8 17.9s24.3 29.4 24.3 53.7c0 29.4-11.5 51.2-34.5 66.5-23 15.3-56.3 23-99.8 23-34.5 0-61.4-6.4-80.6-20.5-19.2-12.8-28.1-32-28.1-55 0-19.2 6.4-34.5 17.9-47.3s28.1-20.5 47.3-25.6c-7.7-3.8-15.3-9-19.2-15.3-5-6.2-7.7-13.8-7.7-21.7 0-17.9 11.5-34.5 34.5-48.6-15.3-6.4-28.1-16.6-37.1-30.7-9-14.1-12.8-30.7-12.8-48.6 0-26.9 9-49.9 25.6-66.5 17.9-16.6 40.9-24.3 70.4-24.3 17.9 0 32 1.3 42.2 5.1h85.7v1.3h.2zm-222.6 319.8c0 37.1 28.1 56.3 84.4 56.3 71.6 0 107.5-23 107.5-69.1 0-16.6-5.1-28.1-16.6-35.8-11.5-7.7-29.4-11.5-55-11.5h-44.8c-49.9 1.2-75.5 20.4-75.5 60.1zm21.8-235.4c0 21.7 6.4 37.1 19.2 49.9 12.8 11.5 29.4 17.9 51.2 17.9 23 0 40.9-6.4 52.4-17.9 12.8-11.5 17.9-28.1 17.9-49.9 0-23-6.4-40.9-19.2-52.4-12.8-11.5-29.4-17.9-52.4-17.9-21.7 0-39.7 6.4-51.2 19.2-12.8 11.4-17.9 29.3-17.9 51.1z\\\"/><path class=\\\"st0\\\" d=\\\"M1640 397.8c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5h-197c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.1 2.6-28.2 3.8-44.8 3.8zm-6.4-262.2c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm245.6-21.8c11.5 0 24.3 1.3 37.1 3.8l-5.1 24.3c-11.8-2.6-23.8-3.9-35.8-3.8-23 0-42.2 10.2-57.6 29.4-15.3 20.5-23 44.8-23 75.5v149.7h-25.6V119h21.7l2.6 49.9h1.3c11.5-20.5 23-34.5 35.8-42.2 15.4-9 30.7-12.9 48.6-12.9zM333.9 12.8h-183v245.6h245.6V76.7c.1-34.5-28.1-63.9-62.6-63.9zm-239.2 0H64c-34.5 0-64 28.1-64 64v30.7h94.7V12.8zM0 165h94.7v94.7H0V165zm301.9 245.6h30.7c34.5 0 64-28.1 64-64V316h-94.7v94.6zm-151-94.6h94.7v94.7h-94.7V316zM0 316v30.7c0 34.5 28.1 64 64 64h30.7V316H0z\\\"/></g></svg>\\n\";\n\nfunction ledger(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Ledger',\n    svg: svg || ledgerIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName;\n                _context4.next = 3;\n                return ledgerProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  BigNumber: BigNumber,\n                  networkName: networkName\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Ledger',\n                    connect: provider.enable,\n                    disconnect: function disconnect() {\n                      return provider.stop();\n                    },\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    preferred: preferred\n  };\n}\n\nfunction ledgerProvider(_x2) {\n  return _ledgerProvider.apply(this, arguments);\n}\n\nfunction _ledgerProvider() {\n  _ledgerProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(options) {\n    var networkId, rpcUrl, BigNumber, networkName, basePath, addressToPath, enabled, provider, enable, addresses, getPrimaryAddress, getAllAccountsAndBalances, _getAllAccountsAndBalances, setPrimaryAccount, _getAccounts, getBalance, _signTransaction, _signTransaction2;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _signTransaction2 = function _ref15() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(transactionData) {\n                var path, transport, eth, transaction, ledgerResult;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        _context8.prev = 1;\n                        _context8.next = 4;\n                        return TransportU2F.create();\n\n                      case 4:\n                        transport = _context8.sent;\n                        eth = new Eth(transport);\n                        _context8.next = 11;\n                        break;\n\n                      case 8:\n                        _context8.prev = 8;\n                        _context8.t0 = _context8[\"catch\"](1);\n                        throw new Error('Error connecting to Ledger wallet');\n\n                      case 11:\n                        _context8.prev = 11;\n                        transaction = new Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        transaction.raw[6] = buffer.Buffer.from([networkId]); // v\n\n                        transaction.raw[7] = buffer.Buffer.from([]); // r\n\n                        transaction.raw[8] = buffer.Buffer.from([]); // s\n\n                        _context8.next = 18;\n                        return eth.signTransaction(path, transaction.serialize().toString('hex'));\n\n                      case 18:\n                        ledgerResult = _context8.sent;\n                        transaction.v = buffer.Buffer.from(ledgerResult.v, 'hex');\n                        transaction.r = buffer.Buffer.from(ledgerResult.r, 'hex');\n                        transaction.s = buffer.Buffer.from(ledgerResult.s, 'hex');\n                        return _context8.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 25:\n                        _context8.prev = 25;\n                        _context8.t1 = _context8[\"catch\"](11);\n                        throw _context8.t1;\n\n                      case 28:\n                        _context8.prev = 28;\n                        transport.close();\n                        return _context8.finish(28);\n\n                      case 31:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[1, 8], [11, 25, 28, 31]]);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _ref14(_x5) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            getBalance = function _ref13(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            _getAccounts = function _ref12() {\n              var numberToGet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              var getMore = arguments.length > 1 ? arguments[1] : undefined;\n              return new Promise( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve, reject) {\n                  var addressesAlreadyFetched, paths, i, ledgerLive, legacy, transport, eth, _i2, _paths, path, _ref4, address, allAddresses;\n\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!enabled) {\n                            resolve([null]);\n                          }\n\n                          addressesAlreadyFetched = addressToPath.size;\n\n                          if (!(addressesAlreadyFetched > 0 && !getMore)) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", resolve(addresses()));\n\n                        case 4:\n                          paths = [];\n\n                          if (numberToGet > 1) {\n                            for (i = addressesAlreadyFetched > 1 ? addressesAlreadyFetched : 0; i < numberToGet + addressesAlreadyFetched; i++) {\n                              ledgerLive = \"\".concat(basePath, \"/\").concat(i, \"'/0/0\");\n                              legacy = \"\".concat(basePath, \"/0'/\").concat(i);\n                              paths.push(ledgerLive, legacy);\n                            }\n                          } else {\n                            paths.push(\"\".concat(basePath, \"/0'/0\"));\n                          }\n\n                          _context5.prev = 6;\n                          _context5.next = 9;\n                          return TransportU2F.create();\n\n                        case 9:\n                          transport = _context5.sent;\n                          eth = new Eth(transport);\n                          _context5.next = 16;\n                          break;\n\n                        case 13:\n                          _context5.prev = 13;\n                          _context5.t0 = _context5[\"catch\"](6);\n                          reject({\n                            message: 'Error connecting to Ledger wallet'\n                          });\n\n                        case 16:\n                          _i2 = 0, _paths = paths;\n\n                        case 17:\n                          if (!(_i2 < _paths.length)) {\n                            _context5.next = 33;\n                            break;\n                          }\n\n                          path = _paths[_i2];\n                          _context5.prev = 19;\n                          _context5.next = 22;\n                          return eth.getAddress(path);\n\n                        case 22:\n                          _ref4 = _context5.sent;\n                          address = _ref4.address;\n                          addressToPath.set(address.toLowerCase(), path);\n                          _context5.next = 30;\n                          break;\n\n                        case 27:\n                          _context5.prev = 27;\n                          _context5.t1 = _context5[\"catch\"](19);\n                          return _context5.abrupt(\"return\", reject({\n                            message: 'There was a problem trying to connect to your Ledger.'\n                          }));\n\n                        case 30:\n                          _i2++;\n                          _context5.next = 17;\n                          break;\n\n                        case 33:\n                          allAddresses = addresses();\n                          transport.close();\n                          resolve(allAddresses);\n\n                        case 36:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5, null, [[6, 13], [19, 27]]);\n                }));\n\n                return function (_x3, _x4) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            };\n\n            setPrimaryAccount = function _ref11(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            _getAllAccountsAndBalances = function _ref10() {\n              _getAllAccountsAndBalances = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                var amountToGet,\n                    accounts,\n                    _args7 = arguments;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        amountToGet = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : 5;\n                        _context7.next = 3;\n                        return _getAccounts(amountToGet, true);\n\n                      case 3:\n                        accounts = _context7.sent;\n                        return _context7.abrupt(\"return\", Promise.all(accounts.map(function (address) {\n                          return new Promise( /*#__PURE__*/function () {\n                            var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve) {\n                              var balance;\n                              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                while (1) {\n                                  switch (_context6.prev = _context6.next) {\n                                    case 0:\n                                      _context6.next = 2;\n                                      return getBalance(address);\n\n                                    case 2:\n                                      balance = _context6.sent;\n                                      resolve({\n                                        address: address,\n                                        balance: balance\n                                      });\n\n                                    case 4:\n                                    case \"end\":\n                                      return _context6.stop();\n                                  }\n                                }\n                              }, _callee6);\n                            }));\n\n                            return function (_x6) {\n                              return _ref5.apply(this, arguments);\n                            };\n                          }());\n                        })));\n\n                      case 5:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n              return _getAllAccountsAndBalances.apply(this, arguments);\n            };\n\n            getAllAccountsAndBalances = function _ref9() {\n              return _getAllAccountsAndBalances.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _ref8() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            addresses = function _ref7() {\n              return Array.from(addressToPath.keys());\n            };\n\n            enable = function _ref6() {\n              enabled = true;\n              return _getAccounts(1);\n            };\n\n            networkId = options.networkId, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName;\n            basePath = networkIdToDerivationPath(networkId);\n            addressToPath = new Map();\n            enabled = false;\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAllAccountsAndBalances = getAllAccountsAndBalances;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getBalance = getBalance;\n            provider.send = provider.sendAsync;\n            return _context9.abrupt(\"return\", provider);\n\n          case 22:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _ledgerProvider.apply(this, arguments);\n}\n\nfunction networkIdToDerivationPath(networkId) {\n  switch (networkId) {\n    default:\n      return \"m/44'/60'\";\n  }\n}\n\nexport default ledger;","// @flow\n/* eslint-disable no-continue */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\n\nconst errorClasses = {};\nconst deserializers = {};\n\nexport const addCustomErrorDeserializer = (\n  name: string,\n  deserializer: Object => *\n) => {\n  deserializers[name] = deserializer;\n};\n\nexport const createCustomErrorClass = (name: string): Class<any> => {\n  const C = function CustomError(message?: string, fields?: Object) {\n    Object.assign(this, fields);\n    this.name = name;\n    this.message = message || name;\n    this.stack = new Error().stack;\n  };\n  // $FlowFixMe\n  C.prototype = new Error();\n\n  errorClasses[name] = C;\n  // $FlowFixMe we can't easily type a subset of Error for now...\n  return C;\n};\n\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object: mixed): Error => {\n  if (typeof object === \"object\" && object) {\n    try {\n      // $FlowFixMe FIXME HACK\n      const msg = JSON.parse(object.message);\n      if (msg.message && msg.name) {\n        object = msg;\n      }\n    } catch (e) {\n      // nothing\n    }\n\n    let error;\n    if (typeof object.name === \"string\") {\n      const { name } = object;\n      const des = deserializers[name];\n      if (des) {\n        error = des(object);\n      } else {\n        let constructor = name === \"Error\" ? Error : errorClasses[name];\n\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name + \"'\");\n          constructor = createCustomErrorClass(name);\n        }\n\n        error = Object.create(constructor.prototype);\n        try {\n          for (const prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {\n          // sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      error = new Error(object.message);\n    }\n\n    if (!error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n    return error;\n  }\n  return new Error(String(object));\n};\n\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value: mixed) => {\n  if (!value) return value;\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n  if (typeof value === \"function\") {\n    return `[Function: ${value.name || \"anonymous\"}]`;\n  }\n  return value;\n};\n\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from: Object, seen) {\n  const to = {};\n  seen.push(from);\n  for (const key of Object.keys(from)) {\n    const value = from[key];\n    if (typeof value === \"function\") {\n      continue;\n    }\n    if (!value || typeof value !== \"object\") {\n      to[key] = value;\n      continue;\n    }\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      continue;\n    }\n    to[key] = \"[Circular]\";\n  }\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n  return to;\n}\n","// @flow\n\n/**\n * A Log object\n */\nexport type Log = {\n  type: string,\n  message?: string,\n  data?: any,\n  id: string, // unique amount all logs\n  date: Date // date of the log\n};\n\nexport type Unsubscribe = () => void;\n\nlet id = 0;\nconst subscribers = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = { type, id: String(++id), date: new Date() };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Log => void): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\nglobal.__ledgerLogsListen = listen;\n","import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl;\n  var idMgmt = new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nexport { createProvider as c };","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","//@flow\n\nimport { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id);\n  // $FlowFixMe\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu: Buffer, key: Buffer) {\n  const result = Buffer.alloc(apdu.length);\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n  return result;\n}\n\n// Convert from normal to web-safe, strip trailing \"=\"s\nconst webSafe64 = (base64: string) =>\n  base64\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\");\n\n// Convert from web-safe to normal, add trailing \"=\"s\nconst normal64 = (base64: string) =>\n  base64.replace(/-/g, \"+\").replace(/_/g, \"/\") +\n  \"==\".substring(0, (3 * base64.length) % 4);\n\nfunction attemptExchange(\n  apdu: Buffer,\n  timeoutMillis: number,\n  scrambleKey: Buffer,\n  unwrap: boolean\n): Promise<Buffer> {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\n    \"hex\"\n  );\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const { signatureData } = response;\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\nexport default class TransportU2F extends Transport<null> {\n  static isSupported = isSupported;\n\n  /*\n   */\n  static list = (): * =>\n    // this transport is not discoverable but we are going to guess if it is here with isSupported()\n    isSupported().then(supported => (supported ? [null] : []));\n\n  /*\n   */\n  static listen = (observer: *) => {\n    let unsubscribed = false;\n    isSupported().then(supported => {\n      if (unsubscribed) return;\n      if (supported) {\n        observer.next({ type: \"add\", descriptor: null });\n        observer.complete();\n      } else {\n        observer.error(\n          new TransportError(\n            \"U2F browser support is needed for Ledger. \" +\n              \"Please use Chrome, Opera or Firefox with a U2F extension. \" +\n              \"Also make sure you're on an HTTPS connection\",\n            \"U2FNotSupported\"\n          )\n        );\n      }\n    });\n    return {\n      unsubscribe: () => {\n        unsubscribed = true;\n      }\n    };\n  };\n\n  scrambleKey: Buffer;\n\n  unwrap: boolean = true;\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_: *, _openTimeout?: number = 5000): Promise<TransportU2F> {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    transportInstances.push(this);\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    try {\n      return await attemptExchange(\n        apdu,\n        this.exchangeTimeout,\n        this.scrambleKey,\n        this.unwrap\n      );\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        }\n        // the wrapping make error more usable and \"printable\" to the end user.\n        throw wrapU2FTransportError(\n          e,\n          \"Failed to sign with Ledger device: U2F \" + e.metaData.type,\n          \"U2F_\" + e.metaData.code\n        );\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   */\n  setScrambleKey(scrambleKey: string) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n\n  /**\n   */\n  setUnwrap(unwrap: boolean) {\n    this.unwrap = unwrap;\n  }\n\n  close(): Promise<void> {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some(s => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async f => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise(r => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\n// FIXME drop:\nimport { splitPath, foreach } from \"./utils\";\nimport { EthAppPleaseEnableContractData } from \"@ledgerhq/errors\";\nimport type Transport from \"@ledgerhq/hw-transport\";\n\nconst remapTransactionRelatedErrors = e => {\n  if (e && e.statusCode === 0x6a80) {\n    return new EthAppPleaseEnableContractData(\n      \"Please enable Contract data on the Ethereum app Settings\"\n    );\n  }\n  return e;\n};\n\n/**\n * Ethereum API\n *\n * @example\n * import Eth from \"@ledgerhq/hw-app-eth\";\n * const eth = new Eth(transport)\n */\nexport default class Eth {\n  transport: Transport<*>;\n\n  constructor(transport: Transport<*>, scrambleKey: string = \"w0w\") {\n    this.transport = transport;\n    transport.decorateAppAPIMethods(\n      this,\n      [\n        \"getAddress\",\n        \"provideERC20TokenInformation\",\n        \"signTransaction\",\n        \"signPersonalMessage\",\n        \"getAppConfiguration\"\n      ],\n      scrambleKey\n    );\n  }\n\n  /**\n   * get Ethereum address for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @option boolChaincode optionally enable or not the chaincode request\n   * @return an object with a publicKey, address and (optionally) chainCode\n   * @example\n   * eth.getAddress(\"44'/60'/0'/0/0\").then(o => o.address)\n   */\n  getAddress(\n    path: string,\n    boolDisplay?: boolean,\n    boolChaincode?: boolean\n  ): Promise<{\n    publicKey: string,\n    address: string,\n    chainCode?: string\n  }> {\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport\n      .send(\n        0xe0,\n        0x02,\n        boolDisplay ? 0x01 : 0x00,\n        boolChaincode ? 0x01 : 0x00,\n        buffer\n      )\n      .then(response => {\n        let result = {};\n        let publicKeyLength = response[0];\n        let addressLength = response[1 + publicKeyLength];\n        result.publicKey = response\n          .slice(1, 1 + publicKeyLength)\n          .toString(\"hex\");\n        result.address =\n          \"0x\" +\n          response\n            .slice(\n              1 + publicKeyLength + 1,\n              1 + publicKeyLength + 1 + addressLength\n            )\n            .toString(\"ascii\");\n        if (boolChaincode) {\n          result.chainCode = response\n            .slice(\n              1 + publicKeyLength + 1 + addressLength,\n              1 + publicKeyLength + 1 + addressLength + 32\n            )\n            .toString(\"hex\");\n        }\n        return result;\n      });\n  }\n\n  /**\n   * This commands provides a trusted description of an ERC 20 token\n   * to associate a contract address with a ticker and number of decimals.\n   *\n   * It shall be run immediately before performing a transaction involving a contract\n   * calling this contract address to display the proper token information to the user if necessary.\n   *\n   * @param {*} info: a blob from \"erc20.js\" utilities that contains all token information.\n   *\n   * @example\n   * import { byContractAddress } from \"@ledgerhq/hw-app-eth/erc20\"\n   * const zrxInfo = byContractAddress(\"0xe41d2489571d322189246dafa5ebde1f4699f498\")\n   * if (zrxInfo) await appEth.provideERC20TokenInformation(zrxInfo)\n   * const signed = await appEth.signTransaction(path, rawTxHex)\n   */\n  provideERC20TokenInformation({ data }: { data: Buffer }): Promise<boolean> {\n    return this.transport.send(0xe0, 0x0a, 0x00, 0x00, data).then(\n      () => true,\n      e => {\n        if (e && e.statusCode === 0x6d00) {\n          // this case happen for older version of ETH app, since older app version had the ERC20 data hardcoded, it's fine to assume it worked.\n          // we return a flag to know if the call was effective or not\n          return false;\n        }\n        throw e;\n      }\n    );\n  }\n\n  /**\n   * You can sign a transaction and retrieve v, r, s given the raw transaction and the BIP 32 path of the account to sign\n   * @example\n   eth.signTransaction(\"44'/60'/0'/0/0\", \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\").then(result => ...)\n   */\n  signTransaction(\n    path: string,\n    rawTxHex: string\n  ): Promise<{\n    s: string,\n    v: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let rawTx = Buffer.from(rawTxHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== rawTx.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > rawTx.length\n          ? rawTx.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        rawTx.copy(buffer, 1 + 4 * paths.length, offset, offset + chunkSize);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x04, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(\n      () => {\n        const v = response.slice(0, 1).toString(\"hex\");\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { v, r, s };\n      },\n      e => {\n        throw remapTransactionRelatedErrors(e);\n      }\n    );\n  }\n\n  /**\n   */\n  getAppConfiguration(): Promise<{\n    arbitraryDataEnabled: number,\n    version: string\n  }> {\n    return this.transport.send(0xe0, 0x06, 0x00, 0x00).then(response => {\n      let result = {};\n      result.arbitraryDataEnabled = response[0] & 0x01;\n      result.version = \"\" + response[1] + \".\" + response[2] + \".\" + response[3];\n      return result;\n    });\n  }\n\n  /**\n  * You can sign a message according to eth_sign RPC call and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n  * @example\neth.signPersonalMessage(\"44'/60'/0'/0/0\", Buffer.from(\"test\").toString(\"hex\")).then(result => {\n  var v = result['v'] - 27;\n  v = v.toString(16);\n  if (v.length < 2) {\n    v = \"0\" + v;\n  }\n  console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n})\n   */\n  signPersonalMessage(\n    path: string,\n    messageHex: string\n  ): Promise<{\n    v: number,\n    s: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let message = Buffer.from(messageHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== message.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 - 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > message.length\n          ? message.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        buffer.writeUInt32BE(message.length, 1 + 4 * paths.length);\n        message.copy(\n          buffer,\n          1 + 4 * paths.length + 4,\n          offset,\n          offset + chunkSize\n        );\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x08, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(() => {\n      const v = response[0];\n      const r = response.slice(1, 1 + 32).toString(\"hex\");\n      const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return { v, r, s };\n    });\n  }\n}\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\ntype Defer<T> = {\n  promise: Promise<T>,\n  resolve: T => void,\n  reject: any => void\n};\n\nexport function defer<T>(): Defer<T> {\n  let resolve, reject;\n  let promise = new Promise(function(success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return { promise, resolve, reject };\n}\n\n// TODO use bip32-path library\nexport function splitPath(path: string): number[] {\n  let result = [];\n  let components = path.split(\"/\");\n  components.forEach(element => {\n    let number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nexport function eachSeries<A>(arr: A[], fun: A => Promise<*>): Promise<*> {\n  return arr.reduce((p, e) => p.then(() => fun(e)), Promise.resolve());\n}\n\nexport function foreach<T, A>(\n  arr: T[],\n  callback: (T, number) => Promise<A>\n): Promise<A[]> {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else\n      return callback(array[index], index).then(function(res) {\n        result.push(res);\n        return iterate(index + 1, array, result);\n      });\n  }\n  return Promise.resolve().then(() => iterate(0, arr, []));\n}\n\nexport function doIf(\n  condition: boolean,\n  callback: () => any | Promise<any>\n): Promise<void> {\n  return Promise.resolve().then(() => {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nexport function asyncWhile<T>(\n  predicate: () => boolean,\n  callback: () => Promise<T>\n): Promise<Array<T>> {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(res => {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}