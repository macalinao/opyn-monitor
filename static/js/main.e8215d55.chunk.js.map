{"version":3,"sources":["utils/blockNative.ts","utils/infura.js","utils/storage.js","constants/contracts.js","utils/web3.js","components/NavBar/ConnectButton.tsx","components/NavBar/SwitchTheme.tsx","components/NavBar/index.tsx","components/HomePage/index.tsx","constants/tokens.js","constants/options/calls.ts","constants/options/puts.ts","constants/options/insurances.ts","constants/options/index.ts","components/common/AddressBlock.tsx","components/common/BalanceBlock.tsx","components/common/RatioTag.tsx","components/common/SectionTitle.tsx","components/common/MaxButton.tsx","components/common/HelpText.tsx","components/common/PriceSection.tsx","components/common/Warning.tsx","components/common/Comment.tsx","components/common/VaultButton.tsx","components/common/Wrapper.tsx","components/common/CheckBox.tsx","utils/tracker.js","components/AllContracts/index.tsx","components/Trade/index.tsx","components/OptionTrading/styled.js","utils/number.js","utils/0x.ts","components/types/index.js","components/OptionTrading/OptionBoard.js","components/OptionTrading/MyOrders.js","components/OptionTrading/OrderBook.js","components/OptionTrading/TabBoard.js","components/OptionTrading/WrapETHSidePanel.js","components/OptionTrading/BuyAndSell.js","components/OptionTrading/index.js","components/MyVaults/NoWallet.tsx","utils/graph.ts","utils/calculation.ts","components/MyVaults/OpenVaultModal.tsx","components/MyVaults/index.tsx","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.tsx","components/ManageVault/CollateralManagement.tsx","components/ManageVault/IssuedTokenManagement.tsx","components/ManageVault/Liquidation.tsx","components/ManageVault/Exercise.tsx","components/ManageVault/UnderlyingManagement.tsx","components/ManageVault/index.tsx","components/UniswapTrade/Header.tsx","components/UniswapTrade/UniswapBuySell.tsx","components/UniswapTrade/AddLiquidity.tsx","components/UniswapTrade/RemoveLiquidity.tsx","components/UniswapTrade/index.tsx","components/Footer/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["notify","Notify","dappId","process","networkId","optionContractABI","require","optionExchangeABI","oracleABI","KEYS","filter","k","INFURA_KEY","Math","floor","random","length","web3","Web3","ens","ENS","ETH_ADDR","resolveENS","ensName","a","resolver","addr","address","toLowerCase","getTokenBalance","erc20Token","user","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getTotalSupply","erc20","token","totalSupply","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem","checkAddressAndAddToStorage","watch_addrs","usedAddresses","JSON","parse","includes","push","stringify","ETH_ADDRESS","WETH","KETH","ZeroX_ERC20Proxy","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","ZX_ExchagneABI","wrapETHABI","UINT256_MAX","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","data","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","toWei","toString","addERC20Collateral","collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","removeUnderlying","tokenAddr","amt","exercise","underlying","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","openVaultAddCollateralAndMint","collateralAsset","tokenAmount","createETHCollateralOption","createERC20CollateralOption","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","uniswapExchange","deadline","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","wrapETH","amountInWei","weth","deposit","unwrapETH","withdraw","signOrder","order","MetamaskSubprovider","currentProvider","signatureUtils","ecSignOrderAsync","fillOrders","orders","amts","signatures","gasPrice","batchFillOrders","cancelOrders","batchCancelOrders","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","SwitchMode","updateTheme","LinkButton","title","isSelected","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","secondary","MainButton","iconUrl","tag","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","USDC","decimals","symbol","OPYN_ETH","cDAI","eth_calls","name","tokens","strike","strikePrice","strikePriceInUSD","minRatio","expiry","eth_puts","insurances","eth_options","concat","allOptions","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","amtBN","toNumber","WarningText","text","useTheme","warning","Comment","ManageVaultButton","OpenVaultButton","goToMangePage","openAndGoToVault","styled","div","MyCheckBox","onCheck","CheckBoxWrapper","onChange","paddingBottom","props","surfaceContentSecondary","ReactGA","initialize","AllContracts","tracker","pageview","storedOptionTab","storedShowExpired","parseInt","tabSelected","setTabSelected","showExpired","setShowExpired","goToToken","CheckBox","items","selected","choice","fields","entries","option","entriesPerPage","renderEntry","header","toDateString","GoToUniswapFunction","event","category","action","window","open","TradeLanding","goToTrade","BidText","AskText","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenDecimals","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","isAddress","Promise","endpoint","getOrderBook","quote","baseAsset","assetDataUtils","encodeERC20AssetData","quoteAsset","request","getBasePairAskAndBids","options","map","asks","bids","totalBidAmt","totalAskAmt","bestAskPrice","bestBidPrice","validAsks","records","record","isValid","reduce","prev","cur","plus","getRemainingMakerAndTakerAmount","remainingMakerAssetAmount","askTokenAmt","makerAssetAmount","askQuoteAmt","takerAssetAmount","bestAsk","validBids","metaData","remainingFillableTakerAssetAmount","bidQuoteAmt","bidTokenAmt","bestBid","bestAskAndBids","path","fetch","res","json","entry","notExpired","expirationTimeSeconds","notDust","getOrderFillRatio","createOrder","maker","makerAsset","takerAsset","salt","senderAddress","makerAddress","takerAddress","makerFee","takerFee","makerAssetData","takerAssetData","exchangeAddress","feeRecipientAddress","makerFeeAssetData","chainId","takerFeeAssetData","broadcastOrders","url","method","headers","body","status","validationErrors","reason","getBidPrice","bid","makerAssetDecimals","takerAssetDecimals","getAskPrice","ask","minus","remainingTakerAssetAmount","makerAssetAmountBN","takerAssetAmountBN","multipliedBy","getGasPrice","getFillAmountsOfOrders","selectedOrders","targetTakerAstAmount","targetMakerAstAmount","sumTakerAmount","sumMakerAmount","takerAmountArray","makerAmount","takerAmount","undefined","takerAmountNeeded","makerAmountNeeded","PropTypes","shape","string","isRequired","number","optionsByDate","signature","orderHash","puts","calls","result","distinctExpirys","Set","optionsExpiresThisDay","o","strikePrices","pairs","put","find","sort","b","expiryText","groupByDate","OptionBoard","setBaseAsset","setTradeType","setSelectedOrders","isLoading","setIsLoading","selectedExpiryIdx","setExpiryIdx","entriesToDisplay","setEntriesToDisplay","isCancelled","updateBoardStats","callsOfExpiry","pair","putsOfExpiry","all","callData","putData","displayEntries","forEach","callDetail","c","putDetail","p","id","setInterval","clearInterval","item","idx","align","callAsk","callBid","callBidAmt","callAskAmt","callOnclick","callBidOnclick","callAskOnclick","putAsk","putBid","putBidAmt","putAskAmt","putOnclick","putBidOnclick","putAskOnclick","Cell","type","disabled","textAlign","MyOrders","myOrdersPage","setMyOrdersPage","userAsks","userBids","statusEmpty","page","onPageChange","onSelectEntries","slice","zeroXUtil","end","OrderBook","tradeType","askPage","setAskPage","bidPage","setBidPage","askSelectedIndexs","setAskSelectedIndexes","bidSelectedIndexs","setBidSelectedIndexes","selectedIdxs","i","indexes","selection","renderSelectionCount","x","format","showIcon","Orders","selectedTab","setSelectedTab","WrapETHModal","wethBalance","opened","setOpen","helperText","setHelperText","wrapAmount","setWrapAmount","unWrapAmount","setUnwrapAmount","ethBalance","setETHBalance","updateETHBalance","quoteBalance","idETHBalance","onClose","wide","amount","target","BuyAndSell","baseAssetBalance","quoteAssetBalance","toast","useToast","quoteAssetAmount","setQuoteAssetAmount","fillingtakerAmounts","setFillingTakerAmounts","baseAmountToFill","setBaseAmountToFill","baseAmountToCreate","setBaseAmountToCreate","rate","setRate","fastGasPrice","setFastGasPrice","totalFillableMakerAmount","totalFillableTakerAmount","selectedOrderFillables","setSelectedOrdersFillable","isFillingAndCreating","setIsFillingAndCreating","hasSelectedOrders","feeInETH","panelOpend","setPanelOpended","wethPanelHelperText","setPanelHelperText","activeButton","setActiveButton","expirySeconds","isCanceled","fetchGasPrice","fast","selectedFillables","next","fillableTakerAmounts","baseMaxFillingAmount","quoteMaxFillingAmount","aggregateRate","checkAndAllowQuoteAsset","quoteAssetAmountInBase","checkQuoteAssetBalance","checkBaseAssetBalance","baseAssetAmountInBase","checkAndAllowBaseAsset","baseAssetAmountBase","clickCreateOrder","quoteAssetInBaseUnit","baseAssetInBaseUnit","signedOrder","clickFillOrders","takerAmountBase","clickFillAndCreate","BuyAndSellBlock","Header","TopPart","TopPartText","toFormat","Flex","hint","TabWrapper","Tab","active","LowerPart","Label","Warning","e","amountBN","totalOtokenInSelectedOrders","gte","console","log","quoteAmountTotal","baseAmountTotal","fillingAmounts","quoteAmountTk","quoteAmount","onChangeBaseAmount","adornmentPosition","adornment","newrate","rateBN","onChangeRate","GroupButtonWrapper","GroupButton","index","isActive","BottomTextWrapper","BottomText","FlexWrapper","border","surface","contentSecondary","content","Wrapper","surfaceHighlight","LeftPart","RightPart","WholeScreen","OptionTrading","setAsks","setBids","setBaseAssetBalance","setQuoteAssetBalance","updateOrderBook","updateBaseBalance","baseBalance","idOrderBook","idBaseBalance","updateQuoteBalance","idQuoteAssetBalance","TabBoard","PleaseLogin","setWatchAddress","InAddress","setAddress","placeholder","reverse","scale","radius","fontFamily","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","getVault","vault","getLiquidationHistory","liquidateActions","getExerciseHistory","exerciseActions","getRemoveUnderlyingHistory","removeUnderlyingActions","calculateStrikeValueInCollateral","collateralDecimals","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","OpenVaultModal","setOpened","setCollateralAmt","mintTokenAmt","setMintTokenAmt","setStrikeValueInCollateral","setRatio","useMemo","strikeValueInColltrl","newRatio","mint","visible","amtBn","onCollateralChange","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","watchAddress","isWatchMode","hasAddressConnected","showEmpty","setShowEmpty","displayVaults","userVaults","openedVaults","notOpenedTokens","optionsContract","oTokenName","NoWallet","ExerciseModal","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","accumulator","current","onChangeExerciseAmt","exeAmtBN","underlyingRawAmt","heading","count","vaultowners","VaultModal","collateralIsETH","addValue","setAddValue","setLiquidateAmt","maxLiquidatable","getData","catch","error","justifyContent","VaultOwnerList","vaultUsesCollateral","vaultsWithDetail","setVaultDetail","setPage","updateInfo","vaultDetail","OptionOverview","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","OptionPage","useParams","setVaults","allVaults","OptionInfoBox","VaultsList","HeaderDashboard","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","collateralSymbol","setIssueAmt","setBurnAmt","newAmt","intputAmt","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actions","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","RemoveUnderlying","underlyingDecimals","underlyingAmount","ManageVault","setVault","setStrikeValue","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","vaultToManage","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","Liquidation","Exercise","UnderlyingManagement","TradePageHeader","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","UniswapPool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","updatePoolInfo","exTokenBalance","exchagneETHBalance","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","UniswapBuySell","Footer","backgroundColor","position","left","bottom","external","href","App","storedTheme","setTheme","assetsUrl","newTheme","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.e8215d55.chunk.js","sourcesContent":["import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nimport ENS from 'ethereum-ens';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst KEYS = [process.env.REACT_APP_INFURA_KEY, process.env.REACT_APP_INFURA_KEY2].filter((k) => k);\nconst INFURA_KEY = KEYS[Math.floor(Math.random() * KEYS.length)];\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\nconst ens = new ENS(web3);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ENS\nexport const resolveENS = async (ensName) => {\n  const address = await ens.resolver(ensName).addr();\n  return address.toLowerCase();\n};\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  if (erc20Token === ETH_ADDR) return 18;\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\nexport const getTotalSupply = async (erc20) => {\n  const token = new web3.eth.Contract(optionContractABI, erc20);\n  const totalSupply = await token.methods.totalSupply().call();\n  return totalSupply;\n};\n\n// Option Contract\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key, defaultValue) {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key, value) {\n  localStorage.setItem(key, value);\n}\n\nexport function checkAddressAndAddToStorage(address) {\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n  if (!usedAddresses.includes(address.toLowerCase()) && !usedAddresses.includes(address)) {\n    usedAddresses.push(address);\n    storePreference('watch_addresses', JSON.stringify(usedAddresses));\n  }\n}\n","/* eslint-disable camelcase */\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n\n// 0x contracts\nexport const ZeroX_Exchange = '0x61935cbdd02287b511119ddb11aeb42f1593b7ef';\nexport const ZeroX_ERC20Proxy = '0x95e6f48254609a6ee006f7d493c8e5fb97094cef';\nexport const ZeroX_ERC721Proxy = '0xefc70a1b18c432bdc64b596838b4d138f6bc6cad';\nexport const ZeroX_Forwarder = '0x4aa817c6f383c8e8ae77301d18ce48efb16fd2be';\nexport const ZeroX_ZRXToken = '0xe41d2489571d322189246dafa5ebde1f4699f498';\n","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { MetamaskSubprovider } from '@0x/subproviders';\nimport { signatureUtils } from '@0x/order-utils';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative.ts';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { getPreference } from './storage';\nimport {\n  ETH_ADDRESS,\n  Kollateral_Liquidator,\n  Kollateral_Invoker,\n  KETH,\n  ZeroX_Exchange,\n  WETH,\n} from '../constants/contracts';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\nconst ZX_ExchagneABI = require('../constants/abi/ZeroX_Exchange.json');\nconst wrapETHABI = require('../constants/abi/WETH.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: getPreference('theme', 'light') === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Monitor',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string|BigNumber} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} token\n */\nexport const removeUnderlying = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .removeUnderlying()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVaultAddCollateralAndMint = async (\n  oTokenAddr,\n  collateralAsset,\n  collateralAmt,\n  tokenAmount,\n) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateralAsset === ETH_ADDRESS) {\n    await oToken.methods\n      .createETHCollateralOption(tokenAmount, account)\n      .send({\n        from: account,\n        value: collateralAmt,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    // check allowance\n    const allowance = await getAllowance(collateralAsset, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(collateralAmt))) {\n      await approve(collateralAsset, oTokenAddr, UINT256_MAX);\n    }\n    await oToken.methods\n      .createERC20CollateralOption(tokenAmount, collateralAmt, account)\n      .send({\n        from: account,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/*\n * 0x Protocols\n */\nexport const wrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .deposit()\n    .send({\n      from: account,\n      value: amountInWei,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const unwrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .withdraw(amountInWei)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Sign Order\n * @param {*} order\n */\nexport const signOrder = async (order) => {\n  const account = await checkConnectedAndGetAddress();\n  const provider = new MetamaskSubprovider(web3.currentProvider);\n  return signatureUtils.ecSignOrderAsync(provider, order, account);\n};\n\nexport const fillOrders = async (orders, amts, signatures, value, gasPrice) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchFillOrders(orders, amts, signatures)\n    .send({\n      from: account,\n      value, // Protocol fee: gas to be gas price * 150\n      gasPrice: web3.utils.toWei(gasPrice, 'gwei'), // gwei to wei\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const cancelOrders = async (orders) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchCancelOrders(orders)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import React, { useState } from 'react';\n\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\nimport { checkAddressAndAddToStorage } from '../../utils/storage';\n\ntype connectButtonProps = {\n  user: string,\n  setUser: Function\n}\n\nfunction ConnectButton({ user, setUser }: connectButtonProps) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    checkAddressAndAddToStorage(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\ntype switchThemeProps = {\n  theme: string,\n  updateTheme: Function\n}\n\nfunction SwitchMode({ theme, updateTheme }: switchThemeProps) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"Theme\"\n    />\n  );\n}\n\n\nexport default SwitchMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Bar, BackButton, LinkBase,\n  Tag,\n} from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SwitchTheme';\n\ntype NavbarProps = {\n  theme:string,\n  updateTheme: Function,\n  user: string,\n  setUser: Function\n}\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}:NavbarProps) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"Home\"\n              onClick={() => {\n                history.push('/');\n              }}\n              isSelected={history.location.pathname === '/'}\n            />\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n              isSelected={history.location.pathname === '/myvaults/'}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n              isSelected={history.location.pathname === '/options/'}\n            />\n            <LinkButton\n              title=\"Uniswap\"\n              onClick={() => {\n                history.push('/uniswap/');\n              }}\n              isSelected={history.location.pathname.includes('/uniswap/')}\n            />\n            <LinkButton\n              title=\"Trade\"\n              onClick={() => {\n                history.push('/trade/oeth-usdc');\n              }}\n              isSelected={history.location.pathname.includes('/trade/')}\n            />\n            <Tag> beta </Tag>\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\ntype linkButtonProps = {\n  title:string,\n  onClick: Function,\n  isSelected?:boolean\n}\n\nfunction LinkButton({ title, onClick, isSelected = false }:linkButtonProps) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: isSelected ? 1 : 0.5, fontSize: 17 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, Box, LinkBase, Tag,\n} from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Monitor\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Exchange\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://i.imgur.com/4eX8GlY.png\"\n            onClick={() => {\n              history.push('/uniswap/');\n            }}\n          />\n        </div>\n\n      </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"Trade\"\n            tag=\"new\"\n            description=\"Trade ETH Options on 0x\"\n            iconUrl=\"https://cdn.worldvectorlogo.com/logos/0x-virtual-money-.svg\"\n            onClick={() => {\n              history.push('/trade/oeth-usdc');\n            }}\n          />\n        </div>\n      </div>\n\n    </>\n  );\n}\n\ntype MainButtonPropx = {\n  title: string,\n  description: string,\n  iconUrl: string,\n  onClick: Function,\n  tag?:string\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick, tag,\n}:MainButtonPropx) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>\n          {title}\n          {tag ? <Tag>{tag}</Tag> : <></>}\n        </div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","export const USDC = {\n  addr: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  decimals: 6,\n  symbol: 'USDC',\n};\n\nexport const OPYN_ETH = {\n  addr: '0x0000000000000000000000000000000000000000',\n  decimals: 18,\n  symbol: 'ETH',\n};\n\nexport const cDAI = {\n  addr: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n  decimals: 8,\n  symbol: 'cDai',\n};\n\nexport const cUSDC = {\n  addr: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n  decimals: 8,\n  symbol: 'cUSDC',\n};\n\nexport const CurveFi = {\n  addr: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n  decimals: 18,\n  symbol: 'yDAI+yUSDC+yUSDT+yTUSD',\n};\n\nexport const WETH = {\n  addr: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  decimals: 18,\n  symbol: 'WETH',\n};\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { option } from '../../types'\nexport const eth_calls: option[] = [\n  {\n    addr: '0xbcae1db14f1b366cd4611c75aab2031492b136e9',\n    title: 'ETH Call $250 05/29/20',\n\n    // constants in contract\n    symbol: 'oETH $250 Call',\n    name: 'Opyn ETH Call $250 05/29/20',\n    decimals: 6,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.USDC,\n    strike: tokens.OPYN_ETH,\n    strikePrice: 4e-9,\n    strikePriceInUSD: 250,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xb1C9e4d652259467e4556BA627B00b284481744E', // wrong\n    expiry: 1590739200,\n  },\n];\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\nimport { option } from '../../types'\n\nexport const eth_puts: option[] = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0xaefc7b368f7b536c9e5e3f342bf534931ce58584',\n    title: 'ETH Put $150 04/24/20',\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 04/24/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xD2840757B0DeF8fBC2A7DC990CEF75975C2d3F0e',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0x461cd647add2159e85ad57141cb5371566fceed3',\n    title: 'ETH Put $160 05/01/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/01/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xd03f7298aE74a8618711Ec43F45Ad2225F141aa4',\n    expiry: 1588320000,\n  },\n  {\n    addr: '0xc8f95e13eff0165e5e381ea1878c56d93562d7d7',\n    title: 'ETH Put $160 05/08/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/08/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x572040e32c69b29a262392Ba7967B9f25724da39',\n    expiry: 1588924800,\n  },\n  {\n    addr: '0xecf6f2fd8d2a8e17397066348d449566d5407174',\n    title: 'ETH Put $150 05/29/20',\n\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 05/29/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x75B865EA22a2b6633038E15647357268C7F9Ac54',\n    expiry: 1590739200,\n  },\n];\n","import * as tokens from '../tokens';\nimport { option } from '../../types'\n/* eslint-disable import/prefer-default-export */\nexport const insurances: option[] = [\n  {\n    title: 'cDai Insurance',\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cUSDC,\n    strike: tokens.USDC,\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.CurveFi,\n    strike: tokens.USDC,\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n","import { eth_calls } from './calls';\nimport { eth_puts } from './puts';\nimport { insurances } from './insurances';\n\n\nexport const eth_options = eth_puts.concat(eth_calls);\nexport const allOptions = insurances.concat(eth_options);\nexport {\n  eth_calls, eth_puts, insurances,\n};\n","import React from 'react';\nimport { IdentityBadge } from '@aragon/ui';\n\ntype AddressBlockProps = {\n  label:string,\n  address: string\n}\n\nfunction AddressBlock({ label, address }: AddressBlockProps) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nexport default AddressBlock;\n","import React from 'react';\n\nimport BigNumber from 'bignumber.js';\n\ntype BlanceBlockProps = {\n  asset: string,\n  balance: BigNumber | string | number\n}\n\nfunction BalanceBlock({ asset, balance }: BlanceBlockProps) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\n\ntype RatioTagProps = {\n  isSafe: boolean,\n  ratio: number,\n  useCollateral? : boolean,\n}\nfunction RatioTag({ isSafe, ratio, useCollateral = true }:RatioTagProps) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }:{title: string}) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle;\n","import React from 'react';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }:{ onClick: Function }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton;\n","import React from 'react';\n\nfunction HelperText({ label, amt }: { label: string, amt: string }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default HelperText;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}:{label:string, amt: string|number|BigNumber, symbol?:string, forceDisplay?:boolean }) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\n\nexport default PriceSection;\n","import React from 'react';\nimport { useTheme } from '@aragon/ui';\n\nfunction WarningText({ text }:{text:string}) {\n  const theme = useTheme();\n  return (\n    <div style={{ color: theme.warning, fontSize: 12, padding: '3px' }}>\n      {text}\n    </div>\n  );\n}\n\n\nexport default WarningText;\n","import React from 'react';\n\ntype commentProps = {\n  text: string\n}\n\nfunction Comment({ text }: commentProps) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage()} label=\"Manage\" />;\n}\n\ntype openVaultButtonProps = {\n  oToken: string,\n  user: string,\n  goToMangePage?: boolean\n}\n\nfunction OpenVaultButton({ oToken, user, goToMangePage = true }: openVaultButtonProps) {\n  const history = useHistory();\n\n  const openAndGoToVault = async () => {\n    await openVault(oToken);\n    if (goToMangePage) history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={openAndGoToVault}\n      label=\"Open\"\n    />\n  );\n}\n\n\nexport { ManageVaultButton, OpenVaultButton };\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\ntype checkBoxProps = {\n  text: string,\n  checked: boolean,\n  onCheck: Function\n}\n\nfunction MyCheckBox({ text, checked, onCheck }: checkBoxProps) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import ReactGA from 'react-ga';\n\nReactGA.initialize(process.env.REACT_APP_GA_PROJECT_ID);\n\nexport default ReactGA;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs,\n} from '@aragon/ui';\n\nimport { insurances, eth_options } from '../../constants/options';\nimport { Comment, CheckBox } from '../common';\nimport { getPreference, storePreference } from '../../utils/storage';\n\nimport tracker from '../../utils/tracker';\n\nfunction AllContracts() {\n  useEffect(() => {\n    tracker.pageview('/options/');\n  }, []);\n\n  const storedOptionTab = getPreference('optionTab', '0');\n  const storedShowExpired = getPreference('showExpired', '0');\n\n  const [tabSelected, setTabSelected] = useState(parseInt(storedOptionTab, 10));\n  const [showExpired, setShowExpired] = useState(storedShowExpired === '1'); // whether to show expired options\n\n  const history = useHistory();\n  const goToToken = (addr:string) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Choose an option contract to proceed.\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n            checked={showExpired}\n          />\n        </div>\n      </div>\n      <Tabs\n        items={['DeFi Insurance', 'ETH Options']}\n        selected={tabSelected}\n        onChange={(choice:number) => {\n          setTabSelected(choice);\n          storePreference('optionTab', choice.toString());\n        }}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', '']}\n          entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      ) : (\n        <DataView\n          header=\"Options\"\n          fields={['Name', 'Contract', 'Expiry', '']}\n          entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }: {addr:string, title:string, expiry:number}) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            new Date(expiry * 1000).toDateString(),\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/options';\n\nimport { Comment, CheckBox } from '../common';\nimport { storePreference, getPreference } from '../../utils/storage';\nimport tracker from '../../utils/tracker';\n\nfunction TradeLanding() {\n  const history = useHistory();\n\n  useEffect(() => {\n    tracker.pageview('/uniswap/');\n  }, []);\n\n  const goToTrade = (addr:string) => {\n    history.push(`/uniswap/${addr}`);\n  };\n\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n\n  return (\n    <>\n      <Header primary=\"Trade on Uniswap\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Buy or Sell DeFi Insurance\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            checked={showExpired}\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n          />\n        </div>\n      </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>\n            <GoToUniswapFunction token={addr} />\n          </div>,\n\n        ]}\n      />\n    </>\n  );\n}\n\n\n\nfunction GoToUniswapFunction({ token }:{token:string}) {\n  return (\n    <Button onClick={() => {\n      tracker.event({\n        category: 'link',\n        action: 'uniswap',\n      })\n      window.open(\n      `https://uniswap.exchange/swap?inputCurrency=${token}`,\n      '_blank',\n    )}\n  }\n    >\n      <img alt=\"uniswap\" src=\"https://i.imgur.com/4eX8GlY.png\" style={{ padding: 2, height: 25, width: 23 }} />\n    </Button>\n  );\n}\n\n\nexport default TradeLanding;\n","import styled from 'styled-components';\n\nexport const BidText = styled.div`{\n  color: #7aae1a;\n  font-size: 17px;\n}`;\n\nexport const AskText = styled.div`{\n  color: #da5750;\n  font-size: 17px;\n}`;\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt\n * @param {number} decimals\n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals\n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision);\n}\n\nexport const fromWei = web3.utils.fromWei;\nexport const toWei = web3.utils.toWei;\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast, 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt(secondsPast / 60, 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt(secondsPast / 3600, 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/)[0]\n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nexport const isAddress = web3.utils.isAddress;\n","/* eslint-disable no-restricted-syntax */\nimport { assetDataUtils } from '@0x/order-utils';\nimport BigNumber from 'bignumber.js';\nimport { USDC } from '../constants/tokens';\n\nimport { toTokenUnitsBN } from './number';\nimport * as types from '../types'\n\nconst Promise = require('bluebird');\n\nconst endpoint = 'https://api.0x.org/';\n\ntype entries = {\n  total:number,\n  page:number,\n  perPage:number,\n  records: types.order[]\n}\n\n\n/**\n * get orderbook: BASE:QUOTE\n */\nexport async function getOrderBook(base:string, quote:string): Promise<{\n  asks:entries, bids:entries\n}> {\n  const baseAsset = assetDataUtils.encodeERC20AssetData(base);\n  const quoteAsset = assetDataUtils.encodeERC20AssetData(quote);\n  return request(`sra/v3/orderbook?baseAssetData=${baseAsset}&quoteAssetData=${quoteAsset}&perPage=${100}`);\n}\n\n/**\n * get oToken:WETH stats (v1) for all options\n * @param {Array<{addr:string, decimals:number}>} options\n * @param {{addr:string, decimals:number}} quoteAsset\n * @return {Promise<Array<\n * {option: string, bestAskPrice: BigNumber, bestAskPrice:BigNumber,\n * totalBidAmt:BigNumber, totalAskAmt:BigNumber,\n * bestAsk:{}, bestBid:{}\n * }>>}\n */\nexport async function getBasePairAskAndBids(options: types.option[], quoteAsset:types.token): Promise<{\n  option: string, bestAskPrice: BigNumber, bestBidPrice: BigNumber, totalBidAmt: BigNumber,\n  totalAskAmt: BigNumber, \n  bestAsk: types.order | undefined, \n  bestBid: types.order | undefined\n}[]> {\n  const bestAskAndBids = await Promise.map(options, async ({ addr: option, decimals }) => {\n    const { asks, bids } = await getOrderBook(option, USDC.addr);\n    let totalBidAmt = new BigNumber(0);\n    let totalAskAmt = new BigNumber(0);\n    let bestAskPrice = new BigNumber(0);\n    let bestBidPrice = new BigNumber(0);\n    let bestAsk: types.order|undefined; \n    let bestBid: types.order|undefined;\n    const validAsks = asks.records.filter((record) => isValid(record));\n    if (validAsks.length > 0) {\n      totalAskAmt = validAsks\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          getRemainingMakerAndTakerAmount(cur).remainingMakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: askTokenAmt, takerAssetAmount: askQuoteAmt } = validAsks[0].order;\n      bestAskPrice = toTokenUnitsBN(askQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(askTokenAmt, decimals));\n      bestAsk = validAsks[0];\n    }\n\n    const validBids = bids.records.filter((record) => isValid(record));\n    if (validBids.length > 0) {\n      totalBidAmt = validBids\n        .reduce((prev, cur) => prev.plus(toTokenUnitsBN(\n          cur.metaData.remainingFillableTakerAssetAmount, decimals,\n        )), new BigNumber(0));\n\n      const { makerAssetAmount: bidQuoteAmt, takerAssetAmount: bidTokenAmt } = validBids[0].order;\n      bestBidPrice = toTokenUnitsBN(bidQuoteAmt, quoteAsset.decimals).div(toTokenUnitsBN(bidTokenAmt, decimals));\n      bestBid = validBids[0];\n    }\n\n    return {\n      option, bestAskPrice, bestBidPrice, bestAsk, bestBid, totalBidAmt, totalAskAmt,\n    };\n  });\n  return bestAskAndBids;\n}\n\n/**\n *\n * @param {string} path\n */\nasync function request(path:string): Promise<any> {\n  const res = await fetch(`${endpoint}${path}`);\n  return res.json();\n}\n\n/**\n * Return true if the order is valid\n */\nexport const isValid = (entry: types.order) => {\n  const notExpired = parseInt(entry.order.expirationTimeSeconds, 10) > Date.now() / 1000;\n  const notDust = parseInt(getOrderFillRatio(entry)) < 100;\n  return notExpired && notDust;\n};\n\n/**\n * Create Order Object\n */\nexport const createOrder = (maker:string, makerAsset:string, takerAsset:string, makerAssetAmount:BigNumber, takerAssetAmount:BigNumber, expiry:number) => {\n  const salt = BigNumber.random(20).times(new BigNumber(10).pow(new BigNumber(20))).integerValue().toString(10);\n  const order = {\n    senderAddress: '0x0000000000000000000000000000000000000000',\n    makerAddress: maker,\n    takerAddress: '0x0000000000000000000000000000000000000000',\n    makerFee: '0',\n    takerFee: '0',\n    makerAssetAmount: makerAssetAmount.toString(),\n    takerAssetAmount: takerAssetAmount.toString(),\n    makerAssetData: assetDataUtils.encodeERC20AssetData(makerAsset),\n    takerAssetData: assetDataUtils.encodeERC20AssetData(takerAsset),\n    salt,\n    exchangeAddress: '0x61935cbdd02287b511119ddb11aeb42f1593b7ef',\n    feeRecipientAddress: '0x1000000000000000000000000000000000000011',\n    expirationTimeSeconds: expiry.toString(),\n    makerFeeAssetData: '0x',\n    chainId: 1,\n    takerFeeAssetData: '0x',\n  };\n  return order;\n};\n\n/**\n * Send orders to the mesh node\n * @param {*} orders\n */\nexport const broadcastOrders = async (orders: types.order[]) => {\n  const url = `${endpoint}sra/v3/orders`;\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(orders),\n  });\n  if (res.status === 200) return;\n  const jsonRes = await res.json();\n  throw jsonRes.validationErrors[0].reason;\n};\n\n/**\n * Calculate the price of a bid order\n */\nexport const getBidPrice = (bid: types.order, makerAssetDecimals:number, takerAssetDecimals:number):BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(bid.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(bid.order.takerAssetAmount, takerAssetDecimals);\n  return makerAssetAmount.div(takerAssetAmount);\n};\n\n/**\n * Calculate price of an ask order\n * @description maker want to sell oToken\n * takerAssetAmount 100 weth\n * makerAssetAmount 1 oToken\n */\nexport const getAskPrice = (ask: types.order, makerAssetDecimals:number, takerAssetDecimals:number): BigNumber => {\n  const makerAssetAmount = toTokenUnitsBN(ask.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(ask.order.takerAssetAmount, takerAssetDecimals);\n  return takerAssetAmount.div(makerAssetAmount);\n};\n\nexport const getOrderFillRatio = (order: types.order) => new BigNumber(100)\n  .minus(new BigNumber(order.metaData.remainingFillableTakerAssetAmount)\n    .div(new BigNumber(order.order.takerAssetAmount))\n    .times(100)).toFixed(2);\n\n/**\n *\n * @param {*} order\n * @return { {remainingTakerAssetAmount: BigNumber, remainingMakerAssetAmount: BigNumber} }\n */\nexport const getRemainingMakerAndTakerAmount = (order: types.order): {\n  remainingTakerAssetAmount: BigNumber,\n  remainingMakerAssetAmount: BigNumber } => {\n  const remainingTakerAssetAmount = new BigNumber(order.metaData.remainingFillableTakerAssetAmount);\n  const makerAssetAmountBN = new BigNumber(order.order.makerAssetAmount);\n  const takerAssetAmountBN = new BigNumber(order.order.takerAssetAmount);\n  const remainingMakerAssetAmount = remainingTakerAssetAmount.multipliedBy(makerAssetAmountBN).div(takerAssetAmountBN);\n  return { remainingTakerAssetAmount, remainingMakerAssetAmount };\n};\n\n/**\n *\n * @param {{}[]} orders\n * @return {}\n */\nexport const getOrdersTotalFillables = (orders: types.order[]): {\n  totalFillableTakerAmount: BigNumber,\n  totalFillableMakerAmount:BigNumber, \n  fillableTakerAmounts: string[]\n} => {\n  const totalFillableTakerAmount = orders\n    .map((order) => new BigNumber(order.metaData.remainingFillableTakerAssetAmount))\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const totalFillableMakerAmount = orders\n    .map((order) => getRemainingMakerAndTakerAmount(order).remainingMakerAssetAmount)\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const fillableTakerAmounts = orders.map((o) => o.metaData.remainingFillableTakerAssetAmount);\n\n  return { totalFillableTakerAmount, totalFillableMakerAmount, fillableTakerAmounts };\n};\n\n/**\n * Get lastest gas price info from ethgasstation\n */\nexport const getGasPrice = async (): Promise<{\n  fast: number, fastest: number ,safeLow: number,average: number,block_time: number,speed: number,safeLowWait: number,avgWait: number,fastWait: number,fastestWait: number,}> => {\n  const url = 'https://ethgasstation.info/json/ethgasAPI.json';\n  const res = await fetch(url);\n  return res.json();\n};\n\ntype targetAsset = 'maker' | 'taker'\n\n/**\n * Return Minimal orders needed for target amount\n */\nexport const findMinOrdersForAmount = (selectedOrders: types.order[], targetAmount: BigNumber, targetAsset: targetAsset) => {\n  let sum = new BigNumber(0);\n  const requiredOrders: types.order[] = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const order of selectedOrders) {\n    const amount = targetAsset === 'maker'\n      ? new BigNumber(order.order.makerAssetAmount)\n      : new BigNumber(order.order.takerAssetAmount);\n    sum = sum.plus(amount);\n    requiredOrders.push(order);\n\n    if (sum.gt(targetAmount)) {\n      break;\n    }\n  }\n  return requiredOrders;\n};\n\n/**\n * @description Loop through selected orders and see what's the exact taker amount\n * and maker amount fulfilling the requirement\n */\nexport const getFillAmountsOfOrders = (\n  selectedOrders: types.order[], \n  targetTakerAstAmount: BigNumber | undefined, \n  targetMakerAstAmount: BigNumber | undefined\n  ): {\n    sumTakerAmount:BigNumber,\n    sumMakerAmount: BigNumber,\n    takerAmountArray: string[]\n  } => {\n  // const fillables = getRemainingMakerAndTakerAmount(selectedOrders);\n  let sumTakerAmount = new BigNumber(0);\n  let sumMakerAmount = new BigNumber(0);\n  const takerAmountArray: string[] = [];\n  for (const order of selectedOrders) {\n    const {\n      remainingMakerAssetAmount: makerAmount,\n      remainingTakerAssetAmount: takerAmount,\n    } = getRemainingMakerAndTakerAmount(order);\n    if (targetTakerAstAmount !== undefined) {\n      if (sumTakerAmount.plus(takerAmount).lte(targetTakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const takerAmountNeeded = targetTakerAstAmount.minus(sumTakerAmount);\n        const makerAmountNeeded = takerAmountNeeded.div(takerAmount).times(makerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else if (targetMakerAstAmount !== undefined) {\n      // user enter mekr ast amount\n      if (sumMakerAmount.plus(makerAmount).lte(targetMakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const makerAmountNeeded = targetMakerAstAmount.minus(sumMakerAmount);\n        const takerAmountNeeded = makerAmountNeeded.div(makerAmount).multipliedBy(takerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else {\n      throw new Error('wrong input to CalculateMixRate');\n    }\n  }\n  return { sumTakerAmount, sumMakerAmount, takerAmountArray };\n};\n","import PropTypes from 'prop-types';\n\nexport const vault = PropTypes.shape({\n  owner: PropTypes.string,\n  oTokensIssued: PropTypes.string,\n  collateral: PropTypes.string,\n  underlying: PropTypes.string,\n});\n\n// export const detailVault = PropTypes.shape({\n//   oTokensIssued: PropTypes.string,\n//   collateral: PropTypes.string,\n// });\n\nexport const token = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n});\n\nexport const option = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  oracle: PropTypes.string.isRequired,\n  collateral: token.isRequired,\n  underlying: token.isRequired,\n  strike: token.isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  exchange: PropTypes.string.isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  expiry: PropTypes.number.isRequired,\n});\n\nexport const order = PropTypes.shape({\n  order: PropTypes.shape({\n    signature: PropTypes.string.isRequired,\n    senderAddress: PropTypes.string.isRequired,\n    makerAddress: PropTypes.string.isRequired,\n    takerAddress: PropTypes.string.isRequired,\n    makerFee: PropTypes.string.isRequired,\n    takerFee: PropTypes.string.isRequired,\n    makerAssetAmount: PropTypes.string.isRequired,\n    takerAssetAmount: PropTypes.string.isRequired,\n    makerAssetData: PropTypes.string.isRequired,\n    takerAssetData: PropTypes.string.isRequired,\n    salt: PropTypes.string.isRequired,\n    exchangeAddress: PropTypes.string.isRequired,\n    feeRecipientAddress: PropTypes.string.isRequired,\n    expirationTimeSeconds: PropTypes.string.isRequired,\n    makerFeeAssetData: PropTypes.string.isRequired,\n    chainId: PropTypes.number.isRequired,\n    takerFeeAssetData: PropTypes.string.isRequired,\n  }),\n  metaData: PropTypes.shape({\n    orderHash: PropTypes.string.isRequired,\n    remainingFillableTakerAssetAmount: PropTypes.string.isRequired,\n  }),\n});\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataView, DropDown, LinkBase, Radio, Header, Tag,\n} from '@aragon/ui';\nimport { AskText, BidText } from './styled';\n\nimport { SectionTitle } from '../common/index.ts';\n\nimport { getBasePairAskAndBids } from '../../utils/0x.ts';\nimport { token as TokenType } from '../types';\n\nimport { eth_puts, eth_calls } from '../../constants/options';\n\nconst optionsByDate = groupByDate(eth_puts, eth_calls);\n\nfunction OptionBoard({\n  baseAsset, quoteAsset, setBaseAsset, setTradeType, setSelectedOrders,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedExpiryIdx, setExpiryIdx] = useState(0);\n  const [entriesToDisplay, setEntriesToDisplay] = useState([]);\n\n  // on expiry change: start the call and put update function on the options of that day\n  useEffect(() => {\n    setIsLoading(true);\n    let isCancelled = false;\n\n    const updateBoardStats = async () => {\n      const callsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.call !== undefined)\n        .map((pair) => pair.call);\n\n      const putsOfExpiry = optionsByDate[selectedExpiryIdx].pairs\n        .filter((pair) => pair.put !== undefined)\n        .map((pair) => pair.put);\n\n      const [callData, putData] = await Promise.all([\n        getBasePairAskAndBids(callsOfExpiry, quoteAsset),\n        getBasePairAskAndBids(putsOfExpiry, quoteAsset),\n      ]);\n\n      const displayEntries = [];\n      optionsByDate[selectedExpiryIdx].pairs.forEach((pair) => {\n        const { call, put, strikePrice } = pair;\n        const entry = { strikePrice };\n        if (call !== undefined) {\n          // has call option on this strikePrice\n          entry.call = call;\n          entry.callDetail = callData.find((c) => c.option === call.addr);\n        }\n        if (put !== undefined) {\n          entry.put = put;\n          entry.putDetail = putData.find((p) => p.option === put.addr);\n        }\n        displayEntries.push(entry);\n      });\n\n      if (!isCancelled) {\n        setIsLoading(false);\n        setEntriesToDisplay(displayEntries);\n      }\n    };\n    updateBoardStats();\n    const id = setInterval(updateBoardStats, 3000);\n\n    return () => {\n      clearInterval(id);\n      isCancelled = true;\n    };\n  }, [selectedExpiryIdx, quoteAsset]);\n\n  // when selection change: update selected order to the first option of the expiry\n  const onExpiryChange = (idx) => {\n    setExpiryIdx(idx);\n    for (const { call, put } of optionsByDate[idx].pairs) {\n      if (call !== undefined) {\n        setBaseAsset(call);\n        return;\n      } if (put !== undefined) {\n        setBaseAsset(put);\n        return;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        {' '}\n        <Header primary=\"Option Trading\" />\n        {' '}\n        <div style={{ paddingTop: '24px' }}>\n          <Tag> beta </Tag>\n        </div>\n        <div style={{ paddingTop: '28px', paddingLeft: '36px' }}>\n          <DropDown\n            items={optionsByDate.map((item) => item.expiryText)}\n            selected={selectedExpiryIdx}\n            onChange={onExpiryChange}\n          />\n        </div>\n      </div>\n\n      {/* <div style={{ display: 'flex' }}> */}\n\n      {/* </div> */}\n      <div style={{ display: 'flex', padding: '0px' }}>\n        <SectionTitle title=\"Calls\" />\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 0,\n          }}\n        >\n          <SectionTitle title=\"Puts\" />\n        </div>\n      </div>\n      {/* Calls */}\n      <DataView\n        mode=\"table\"\n        status={isLoading ? 'loading' : 'default'}\n        fields={[\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'strike', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'amt', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: 'amt', align: 'last' },\n\n        ]}\n        entries={entriesToDisplay}\n        renderEntry={({\n          call,\n          put,\n          putDetail,\n          callDetail,\n          strikePrice,\n        }) => {\n          const lastCallPrice = '-';\n          let callAsk = '-';\n          let callBid = '-';\n          let callBidAmt = '-';\n          let callAskAmt = '-';\n          let callOnclick = () => {};\n          let callBidOnclick = () => {};\n          let callAskOnclick = () => {};\n\n          const lastPutPrice = '-';\n          let putAsk = '-';\n          let putBid = '-';\n          let putBidAmt = '-';\n          let putAskAmt = '-';\n          let putOnclick = () => {};\n          let putBidOnclick = () => {};\n          let putAskOnclick = () => {};\n\n          if (callDetail !== undefined) {\n            // have call option has this strike price\n            callAsk = callDetail.bestAskPrice.toFixed(4);\n            callBid = callDetail.bestBidPrice.toFixed(4);\n            callAskAmt = callDetail.totalAskAmt.toFixed(2);\n            callBidAmt = callDetail.totalBidAmt.toFixed(2);\n            callOnclick = () => { setBaseAsset(call); };\n\n            callBidOnclick = () => {\n              setTradeType('sell');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestBid ? [callDetail.bestBid] : []);\n            };\n            callAskOnclick = () => {\n              setTradeType('buy');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestAsk ? [callDetail.bestAsk] : []);\n            };\n          }\n          if (putDetail !== undefined) {\n            // has put option has this strike price\n            putAsk = putDetail.bestAskPrice.toFixed(4);\n            putBid = putDetail.bestBidPrice.toFixed(4);\n            putAskAmt = putDetail.totalAskAmt.toFixed(2);\n            putBidAmt = putDetail.totalBidAmt.toFixed(2);\n\n            putOnclick = () => { setBaseAsset(put); };\n\n            putBidOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('sell');\n              setSelectedOrders(putDetail.bestBid ? [putDetail.bestBid] : []);\n            };\n            putAskOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('buy');\n              setSelectedOrders(putDetail.bestAsk ? [putDetail.bestAsk] : []);\n            };\n          }\n\n          return [\n            <Cell onClick={callOnclick} text={lastCallPrice} type=\"normal\" />,\n            <Cell onClick={callBidOnclick} text={callBid} type=\"bid\" />,\n            <Cell onClick={callBidOnclick} text={callBidAmt} type=\"normal\" />,\n\n            <Cell onClick={callAskOnclick} text={callAsk} type=\"ask\" />,\n            <Cell onClick={callAskOnclick} text={callAskAmt} type=\"normal\" />,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!call}\n                onChange={() => setBaseAsset(call)}\n                checked={call && call.addr === baseAsset.addr}\n              />\n            </div>,\n            <div style={{ fontSize: 20, width: '50px', padding: '10px' }}>{strikePrice}</div>,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!put}\n                onChange={() => (setBaseAsset(put))}\n                checked={put && put.addr === baseAsset.addr}\n              />\n            </div>,\n            <Cell onClick={putOnclick} text={lastPutPrice} type=\"normal\" />,\n            <Cell onClick={putBidOnclick} text={putBid} type=\"bid\" />,\n            <Cell onClick={putBidOnclick} text={putBidAmt} type=\"normal\" />,\n            <Cell onClick={putAskOnclick} text={putAsk} type=\"ask\" />,\n            <Cell onClick={putBidOnclick} text={putAskAmt} type=\"normal\" />,\n\n          ];\n        }}\n      />\n    </div>\n  );\n}\n\nOptionBoard.propTypes = {\n  baseAsset: TokenType.isRequired,\n  quoteAsset: TokenType.isRequired,\n  setBaseAsset: PropTypes.func.isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default OptionBoard;\n\n/**\n *\n * @param {Array<{strikePriceInUSD:number, addr:string, expiry:number}>} puts\n * @param {Array<{strikePriceInUSD:number, addr:string, expiry:number}>} calls\n * @returns {{ expiry:number, expiryText:string, pairs: {call: {}, put: {}, strikePrice: number }[] }[]}\n * key: expiry in string, value: array of { call, put, callDetail, putDetail, strikePrice}\n */\nfunction groupByDate(puts, calls) {\n  const result = [];\n  const allOptions = puts.concat(calls).filter((option) => option.expiry > Date.now() / 1000);\n  const distinctExpirys = [...new Set(allOptions.map((option) => option.expiry))];\n\n  for (const expiry of distinctExpirys) {\n    const optionsExpiresThisDay = allOptions.filter((o) => o.expiry === expiry);\n    const strikePrices = [\n      ...new Set(optionsExpiresThisDay.map((option) => option.strikePriceInUSD)),\n    ];\n\n    // const allStrikesForThisDay = {};\n    const pairs = [];\n    for (const strikePrice of strikePrices) {\n      const put = puts.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      const call = calls.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      pairs.push({\n        strikePrice,\n        call,\n        put,\n      });\n    }\n    pairs.sort((a, b) => (a.strikePrice > b.strikePrice ? 1 : -1));\n    const expiryText = new Date(expiry * 1000).toDateString();\n    result.push({\n      expiry,\n      expiryText,\n      pairs,\n    });\n  }\n  return result;\n}\n\nfunction Cell({\n  onClick, text, type,\n}) {\n  return (\n    <LinkBase onClick={onClick}>\n      <div style={{ width: '60px', textAlign: 'center' }}>\n        { type === 'bid' ? (\n          <BidText>\n            {' '}\n            {text}\n            {' '}\n          </BidText>\n        ) : type === 'ask' ? (\n          <AskText>\n            {' '}\n            {text}\n            {' '}\n          </AskText>\n        ) : (\n          <div>\n            {' '}\n            {text}\n            {' '}\n          </div>\n        ) }\n      </div>\n    </LinkBase>\n  );\n}\n\nCell.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataView, Timer, Button,\n} from '@aragon/ui';\n\nimport { cancelOrders } from '../../utils/web3';\n\n// import BigNumber from 'bignumber.js';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { order as OrderType, option as OptionType } from '../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x.ts';\n\nfunction MyOrders({\n  asks, bids, option, user, quoteAsset,\n}) {\n  const [myOrdersPage, setMyOrdersPage] = useState(0);\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const userAsks = asks\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      o.type = 'Ask';\n      return o;\n    });\n  const userBids = bids\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      o.type = 'Bid';\n      return o;\n    });\n\n  return (\n    <>\n      <DataView\n        entriesPerPage={4}\n        statusEmpty={(\n          <div>\n            No Open Orders for\n            {' '}\n            {option.title}\n          </div>\n)}\n        page={myOrdersPage}\n        onPageChange={setMyOrdersPage}\n        onSelectEntries={setSelectedOrders}\n        fields={['digest', 'type', 'price', 'amount', 'filled', 'expiration', '']}\n        entries={userAsks.concat(userBids)\n          .sort((a, b) => (a.order.expirationTimeSeconds > b.order.expirationTimeSeconds ? 1 : -1))}\n        renderEntry={(order) => [// call, put, callDetail, putDetail, strikePrice\n          order.metaData.orderHash.slice(2, 8),\n          order.type === 'Ask' ? <AskText>{order.type}</AskText> : <BidText>{order.type}</BidText>,\n          order.type === 'Ask'\n            ? zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(6)\n            : zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(6),\n          order.type === 'Ask'\n            ? toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(3)\n            : toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(3),\n          `${zeroXUtil.getOrderFillRatio(order)}%`,\n          <Timer end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n\n          selectedOrders.length > 0\n            ? (\n              <Button onClick={() => {\n                cancelOrders(selectedOrders.map((o) => o.order));\n              }}\n              >\n                Cancel Selected\n              </Button>\n            )\n            : (\n              <Button onClick={() => {\n                cancelOrders([order.order]);\n              }}\n              >\n                Cancel Order\n              </Button>\n            ),\n        ]}\n      />\n    </>\n  );\n}\n\nMyOrders.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  user: PropTypes.string.isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: PropTypes.shape({\n    decimals: PropTypes.number.isRequired,\n    addr: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MyOrders;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, Timer } from '@aragon/ui';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { order as OrderType, option as OptionType, token as TokenType } from '../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\nfunction OrderBook({\n  asks, bids, option, quoteAsset, setTradeType, setSelectedOrders, selectedOrders, tradeType,\n}) {\n  const [askPage, setAskPage] = useState(0);\n  const [bidPage, setBidPage] = useState(0);\n\n  const [askSelectedIndexs, setAskSelectedIndexes] = useState([]);\n  const [bidSelectedIndexs, setBidSelectedIndexes] = useState([]);\n\n  const onSelectAskEntry = (entries, indexes) => {\n    setTradeType('buy'); // Filling ask orders is a bid\n    setSelectedOrders(entries);\n    setAskSelectedIndexes(indexes);\n  };\n\n  const onSelectBidEntry = (entries, indexes) => {\n    setTradeType('sell'); // Filling bid orders is a ask\n    setSelectedOrders(entries);\n    setBidSelectedIndexes(indexes);\n  };\n\n  // everytime tradeType or selectedOrders changed, the selection is updated\n  useEffect(() => {\n    if (tradeType === 'buy') { // user select and ask order\n      setBidSelectedIndexes([]); // reset bid selections\n      const selectedIdxs = [];\n      for (let i = 0; i < asks.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(asks[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setAskSelectedIndexes(selectedIdxs);\n    } else {\n      setAskSelectedIndexes([]);\n      const selectedIdxs = [];\n      for (let i = 0; i < bids.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(bids[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setBidSelectedIndexes(selectedIdxs);\n    }\n  }, [selectedOrders, tradeType, asks, bids]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Sell Orders</div>}\n            entriesPerPage={4}\n            page={askPage}\n            onPageChange={setAskPage}\n            entries={asks}\n            onSelectEntries={onSelectAskEntry}\n            // If other operation reset selected orders, should change selected accordingly\n            selection={askSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <AskText>{zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(4)}</AskText>,\n              toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Buy Orders</div>}\n            entriesPerPage={4}\n            page={bidPage}\n            onPageChange={setBidPage}\n            entries={bids}\n            onSelectEntries={onSelectBidEntry}\n            selection={bidSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <BidText>{zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(4)}</BidText>,\n              toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(4),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n      </div>\n\n\n    </>\n  );\n}\n\nOrderBook.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: TokenType.isRequired,\n  tradeType: PropTypes.string.isRequired,\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default OrderBook;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs } from '@aragon/ui';\n\nimport MyOrders from './MyOrders';\nimport OrderBook from './OrderBook';\n\nimport { order as OrderType, option as OptionType } from '../types';\n\nfunction Orders({\n  asks, bids, option, user, quoteAsset,\n  tradeType,\n  selectedOrders,\n  setTradeType,\n  setSelectedOrders,\n}) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <Tabs\n        items={['OrderBook', 'My Orders']}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      { selectedTab === 0\n        ? (\n          <OrderBook\n            asks={asks}\n            bids={bids}\n            option={option}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        )\n        : (\n          <MyOrders asks={asks} bids={bids} option={option} user={user} quoteAsset={quoteAsset} />\n        )}\n\n    </>\n  );\n}\n\nOrders.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  user: PropTypes.string.isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: PropTypes.shape({\n    decimals: PropTypes.number.isRequired,\n    addr: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n  }).isRequired,\n  tradeType: PropTypes.string.isRequired,\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default Orders;\n","/* eslint-disable consistent-return */\nimport React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\n\nimport {\n  SidePanel, Button, TextInput, useTheme,\n} from '@aragon/ui';\nimport { BalanceBlock, SectionTitle, Comment } from '../common/index.ts';\n\nimport { wrapETH, unwrapETH } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { getBalance } from '../../utils/infura';\n\nfunction WrapETHModal({\n  user, wethBalance, opened, setOpen, helperText, setHelperText,\n}) {\n  const theme = useTheme();\n  const [wrapAmount, setWrapAmount] = useState(BigNumber(0));\n  const [unWrapAmount, setUnwrapAmount] = useState(BigNumber(0));\n\n  const [ethBalance, setETHBalance] = useState(BigNumber(0));\n\n  const onChangeWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setWrapAmount(new BigNumber(0));\n      return;\n    }\n    setWrapAmount(new BigNumber(amount));\n  };\n\n  const onChangeUnWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setUnwrapAmount(new BigNumber(0));\n      return;\n    }\n    setUnwrapAmount(new BigNumber(amount));\n  };\n\n  useEffect(() => {\n    if (!opened || !user) return;\n    let isCancelled = false;\n\n    const updateETHBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getBalance(user);\n      if (!isCancelled) {\n        setETHBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateETHBalance();\n    const idETHBalance = setInterval(updateETHBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idETHBalance);\n    };\n  }, [opened, user]);\n\n  return (\n    <SidePanel\n      title=\"\"\n      opened={opened}\n      onClose={() => {\n        setOpen(false);\n        setHelperText('');\n      }}\n    >\n      <br />\n\n      <div style={{ color: theme.warning }}>\n        {helperText}\n      </div>\n\n      <SectionTitle title=\"Wrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your ETH Balance\" balance={ethBalance.toNumber()} />\n      </div>\n\n      {/* </div> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={wrapAmount.toNumber()} onChange={onChangeWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              wrapETH(toBaseUnitBN(wrapAmount, 18).toString());\n            }}\n            label=\"Wrap\"\n          />\n        </div>\n      </div>\n\n      <Comment text=\"After you wrap your ETH to WETH, you can unwrap them back to ETH anytime.\" />\n      <br />\n      <SectionTitle title=\"Unwrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your WETH Balance\" balance={toTokenUnitsBN(wethBalance, 18).toNumber()} />\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={unWrapAmount.toNumber()} onChange={onChangeUnWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              unwrapETH(toBaseUnitBN(unWrapAmount, 18).toString());\n            }}\n            label=\"Unwrap\"\n          />\n        </div>\n      </div>\n    </SidePanel>\n  );\n}\n\n\nWrapETHModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  helperText: PropTypes.string.isRequired,\n  setHelperText: PropTypes.func.isRequired,\n  wethBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  opened: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nexport default WrapETHModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, useTheme, TextInput, Help, useToast, LinkBase,\n} from '@aragon/ui';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { WarningText } from '../common/index.ts';\nimport {\n  createOrder, broadcastOrders, getOrdersTotalFillables, getGasPrice, getFillAmountsOfOrders,\n} from '../../utils/0x.ts';\nimport { signOrder, fillOrders, approve } from '../../utils/web3';\nimport { toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport WrapETHPanel from './WrapETHSidePanel';\n\nimport {\n  // vault as VaultType,\n  order as OrderType,\n  token as TokenType,\n} from '../types';\nimport { getAllowance } from '../../utils/infura';\nimport { ZeroX_ERC20Proxy } from '../../constants/contracts';\n\nimport { WETH } from '../../constants/tokens';\n\n/**\n *\n * @param {{\n * baseAsset: {addr:string, decimals: number, symbol:string}\n * quoteAsset: {addr:string, decimals: number, symbol:string}\n * collateral: {addr:string, decimals: number, symbol:string}\n * }} param0\n */\nfunction BuyAndSell({\n  user,\n  tradeType, // ask || bid\n  selectedOrders, //\n  setTradeType,\n  setSelectedOrders,\n\n  // vault,\n  baseAsset,\n  quoteAsset,\n  // collateral,\n\n  // ethBalance, // in ETH (0.5)\n  baseAssetBalance, // in base uinit\n  quoteAssetBalance, // in base Unit\n}) {\n  const theme = useTheme();\n  const toast = useToast();\n\n  const [quoteAssetAmount, setQuoteAssetAmount] = useState(new BigNumber(0));\n  const [fillingtakerAmounts, setFillingTakerAmounts] = useState([]);\n\n  // these two add up to total oToken displayed on the Amount section\n  const [baseAmountToFill, setBaseAmountToFill] = useState(new BigNumber(0));\n  const [baseAmountToCreate, setBaseAmountToCreate] = useState(new BigNumber(0));\n\n  const [rate, setRate] = useState(new BigNumber(0));\n\n  // gasPrice is needed to calculate 0x fee\n  const [fastGasPrice, setFastGasPrice] = useState(new BigNumber(5)); //  in GWei\n\n  // const quoteAssetAmount = price.times(baseAssetAmount);\n\n  const [selectedOrderFillables, setSelectedOrdersFillable] = useState({\n    totalFillableMakerAmount: new BigNumber(0),\n    totalFillableTakerAmount: new BigNumber(0),\n  });\n\n  const [isFillingAndCreating, setIsFillingAndCreating] = useState(false);\n\n  const hasSelectedOrders = selectedOrders.length > 0;\n  const feeInETH = hasSelectedOrders\n    ? fastGasPrice.times(new BigNumber(selectedOrders.length)).times(new BigNumber(0.00015))\n    : new BigNumber(0);\n\n  // for weth side panel\n  const [panelOpend, setPanelOpended] = useState(false);\n  const [wethPanelHelperText, setPanelHelperText] = useState('');\n\n  // expiry button\n  const [activeButton, setActiveButton] = useState(0);\n  const expirySeconds = activeButton === 0\n    ? 3600 : (activeButton === 1 ? 86400 : 604800);\n  const expiry = parseInt(Date.now() / 1000 + expirySeconds, 10);\n\n\n  // update gasPrice\n  useEffect(() => {\n    let isCanceled = false;\n    async function fetchGasPrice() {\n      const { fast } = await getGasPrice();\n      if (!isCanceled) setFastGasPrice(new BigNumber(fast).div(new BigNumber(10)));\n    }\n    fetchGasPrice();\n    const id = setInterval(fetchGasPrice, 10000);\n\n    return () => {\n      isCanceled = true;\n      clearInterval(id);\n    };\n  }, []);\n\n  // when selected orders changed\n  useEffect(() => {\n    // This update only take effect when user has selected orders\n    if (selectedOrders.length === 0) {\n      setBaseAmountToFill(new BigNumber(0));\n      return;\n    }\n    setIsFillingAndCreating(false);\n\n    const selectedFillables = getOrdersTotalFillables(selectedOrders);\n    setFillingTakerAmounts(selectedFillables.fillableTakerAmounts);\n\n    let baseMaxFillingAmount = new BigNumber(0);\n    let quoteMaxFillingAmount = new BigNumber(0);\n    // Step 1. set oToken and WETH amount to order total\n    if (tradeType === 'buy') {\n      // ask: takerAsset: weth, makerAsset: oToken\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, quoteAsset.decimals);\n    } else {\n      // comming bids: takerAsset: oToken, makerAsset: weth\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, quoteAsset.decimals);\n    }\n    setBaseAmountToFill(baseMaxFillingAmount);\n    setBaseAmountToCreate(new BigNumber(0));\n    // setBaseAssetAmount(baseMaxFillingAmount);\n    setQuoteAssetAmount(quoteMaxFillingAmount);\n    setSelectedOrdersFillable(selectedFillables);\n\n    // Change Price according to total base / quote\n    const aggregateRate = quoteMaxFillingAmount.div(baseMaxFillingAmount);\n    setRate(aggregateRate);\n  }, [selectedOrders, baseAsset, tradeType, quoteAsset]);\n\n\n  const onChangeBaseAmount = (amount) => {\n    // 1. Update amount field\n    if (!amount) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(amount);\n    if (amountBN.lte(0)) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n\n    // If is filling Mode\n    if (hasSelectedOrders) {\n      const totalOtokenInSelectedOrders = tradeType === 'buy'\n        ? toTokenUnitsBN(selectedOrderFillables.totalFillableMakerAmount, baseAsset.decimals) // oToken is the maker asset of ask orders\n        : toTokenUnitsBN(selectedOrderFillables.totalFillableTakerAmount, baseAsset.decimals);\n\n      // user is filling lower than all orders combined\n      if (totalOtokenInSelectedOrders.gte(amountBN)) {\n        // [FILLING MODE]\n        console.log('FILLING MODE');\n        setIsFillingAndCreating(false);\n        setBaseAmountToFill(amountBN);\n        setBaseAmountToCreate(new BigNumber(0));\n\n        // Update Rates\n        const baseAmountTotal = toBaseUnitBN(amountBN, baseAsset.decimals);\n\n        let quoteAmountTotal;\n        if (tradeType === 'buy') {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, undefined, baseAmountTotal);\n          quoteAmountTotal = fillingAmounts.sumTakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray);\n        } else {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, baseAmountTotal, undefined);\n          quoteAmountTotal = fillingAmounts.sumMakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray); // only need to record taker amount array\n        }\n\n        const quoteAmountTk = toTokenUnitsBN(quoteAmountTotal, quoteAsset.decimals);\n        setRate(quoteAmountTk.div(amountBN));\n        setQuoteAssetAmount(quoteAmountTk);\n      } else {\n        // [CREATING AND FILLING MODE]\n        console.log('CREATING + FILLING');\n        setIsFillingAndCreating(true);\n\n        setBaseAmountToFill(totalOtokenInSelectedOrders);\n        setBaseAmountToCreate(amountBN.minus(totalOtokenInSelectedOrders));\n\n        // Fix rate at current, dont have to change.\n        const quoteAmount = rate.times(amountBN);\n        setQuoteAssetAmount(quoteAmount);\n      }\n    } else {\n      // [CREATING MODE]\n      console.log('CREATING');\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(amountBN);\n\n      // create mode wont change rate when put in amount\n      const quoteAmount = rate.times(amountBN);\n      setQuoteAssetAmount(quoteAmount);\n    }\n  };\n\n  const onChangeRate = (newrate) => {\n    if (!newrate) {\n      setRate(new BigNumber(0));\n      return;\n    }\n    const rateBN = new BigNumber(new BigNumber(newrate).toFixed(4));\n    setRate(rateBN);\n\n    // adjusting rate will not be filling orders anymore\n    if (hasSelectedOrders) {\n      setSelectedOrders([]);\n    }\n\n    // enter create mode.\n    const quoteAmount = rateBN.times((baseAmountToCreate));\n    setQuoteAssetAmount(quoteAmount);\n  };\n\n  const checkAndAllowQuoteAsset = async (quoteAssetAmountInBase) => {\n    const quoteAllowance = new BigNumber(await getAllowance(quoteAsset.addr, user, ZeroX_ERC20Proxy));\n    if (quoteAllowance.lt(quoteAssetAmountInBase)) {\n      toast(`Please approve 0x to spend your oToken ${quoteAsset.symbol}`);\n      await approve(quoteAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const checkQuoteAssetBalance = (quoteAssetAmountInBase) => {\n    if (quoteAssetAmountInBase.gt(quoteAssetBalance)) {\n      if (quoteAsset.addr === WETH.addr) {\n        setPanelHelperText('You dont have enough WETH to make this order, you may need to wrap some ETH into WETH.');\n        setPanelOpended(true);\n        return false;\n      }\n      toast(`Insufficient ${quoteAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkBaseAssetBalance = (baseAssetAmountInBase) => {\n    if (baseAssetAmountInBase.gt(baseAssetBalance)) {\n      toast(`Insufficient ${baseAsset.symbol}`);\n      return false;\n    }\n    return true;\n  };\n\n  const checkAndAllowBaseAsset = async (baseAssetAmountBase) => {\n    const tokenAllowance = new BigNumber(await getAllowance(baseAsset.addr, user, ZeroX_ERC20Proxy));\n    if (tokenAllowance.lt(baseAssetAmountBase)) {\n      toast(`Please approve 0x to spend your oToken ${baseAsset.symbol}`);\n      await approve(baseAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const clickCreateOrder = async () => {\n    if (user === '') {\n      toast('Please connect wallet first');\n      return;\n    }\n    let order;\n    if (tradeType === 'buy') {\n      const quoteAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals);\n\n      // check quote asset balance\n      if (!checkQuoteAssetBalance(quoteAssetInBaseUnit)) return;\n\n      // check quote asset allowance\n      await checkAndAllowQuoteAsset(quoteAssetInBaseUnit);\n\n      // create order\n      order = createOrder(\n        user,\n        quoteAsset.addr,\n        baseAsset.addr,\n        quoteAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate, baseAsset.decimals),\n        expiry,\n      );\n    } else {\n      const baseAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate, baseAsset.decimals);\n\n      if (!checkBaseAssetBalance(baseAssetInBaseUnit)) return;\n\n      await checkAndAllowBaseAsset(baseAssetInBaseUnit);\n\n      order = createOrder(\n        user,\n        baseAsset.addr,\n        quoteAsset.addr,\n        baseAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals),\n        expiry,\n      );\n    }\n    const signedOrder = await signOrder(order);\n    try {\n      await broadcastOrders([signedOrder]);\n    } catch (error) {\n      toast(error);\n    }\n  };\n\n  const clickFillOrders = async () => {\n    const takerAmountBase = fillingtakerAmounts.reduce((prev, cur) => prev.plus(new BigNumber(cur)), new BigNumber(0));\n    if (tradeType === 'buy') {\n      if (!checkQuoteAssetBalance(takerAmountBase)) return;\n      await checkAndAllowQuoteAsset(takerAmountBase);\n    } else {\n      if (!checkBaseAssetBalance(takerAmountBase)) return;\n      await checkAndAllowBaseAsset(takerAmountBase);\n    }\n    await fillOrders(\n      selectedOrders.map((o) => o.order),\n      fillingtakerAmounts,\n      selectedOrders.map((o) => o.order.signature),\n      toBaseUnitBN(feeInETH, 18).toString(),\n      fastGasPrice.toString(),\n    );\n  };\n\n  const clickFillAndCreate = async () => {\n    await clickCreateOrder();\n    await clickFillOrders();\n  };\n\n  return (\n    <>\n      <BuyAndSellBlock theme={theme}>\n        <Header theme={theme}>\n          <Wrapper>Balance</Wrapper>\n        </Header>\n        <Wrapper>\n          <TopPart theme={theme}>\n            <FlexWrapper>\n              <div>{baseAsset.symbol}</div>\n              <TopPartText>{toTokenUnitsBN(baseAssetBalance, baseAsset.decimals).toFormat(4)}</TopPartText>\n            </FlexWrapper>\n            <FlexWrapper>\n              <div>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>\n                    <LinkBase onClick={() => setPanelOpended(true)}>\n                      {quoteAsset.symbol}\n                    </LinkBase>\n                  </p>\n                  { quoteAsset.symbol === WETH.addr ? (\n                    <Help hint=\"What is WETH?\">\n                      WETH is Wraped ETH, the erc20 version of ETH. You must have WETH to create and fill orders on 0x.\n                      {' '}\n                      <LinkBase onClick={() => setPanelOpended(true)}>Click here to wrap your ETH now!</LinkBase>\n                    </Help>\n                  ) : <></> }\n                </Flex>\n              </div>\n              <TopPartText>{toTokenUnitsBN(quoteAssetBalance, quoteAsset.decimals).toFormat(4)}</TopPartText>\n            </FlexWrapper>\n          </TopPart>\n          {/* <FlexWrapper>\n            <div>\n              Collateral (\n              {collateral.symbol}\n              )\n            </div>\n            <TopPartText>\n              { vault\n                ? toTokenUnitsBN(vault.collateral, collateral.decimals).toFormat(4)\n                : Number(0).toFixed(4)}\n            </TopPartText>\n          </FlexWrapper> */}\n        </Wrapper>\n        <Wrapper>\n          <TabWrapper theme={theme}>\n            <Tab\n              active={tradeType === 'buy'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('buy');\n              }}\n              theme={theme}\n            >\n              Buy\n            </Tab>\n            <Tab\n              active={tradeType === 'sell'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('sell');\n              }}\n              theme={theme}\n            >\n              Sell\n            </Tab>\n          </TabWrapper>\n          <LowerPart>\n            <Label>Amount</Label>\n            { baseAsset.symbol.toLowerCase().includes('call')\n              ? <WarningText text={`Buy ${baseAsset.strikePriceInUSD} ${baseAsset.symbol} to hedge 1 ETH.`} />\n              : <></> }\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeBaseAmount(e.target.value)}\n              value={baseAmountToCreate.plus(baseAmountToFill).toNumber()}\n              adornmentPosition=\"end\"\n              adornment={baseAsset.symbol}\n            />\n\n            <Label>Price Per Token</Label>\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeRate(e.target.value)}\n              value={rate.toNumber()}\n              adornmentPosition=\"end\"\n              adornment={quoteAsset.symbol}\n            />\n\n            <Label>Expires After</Label>\n            <GroupButtonWrapper>\n              {['1 Hour', '1 Day', '1 Week'].map((x, i) => (\n                <GroupButton\n                  disabled={hasSelectedOrders && !isFillingAndCreating}\n                  theme={theme}\n                  onClick={() => setActiveButton(i)}\n                  key={x}\n                  index={i}\n                  isActive={activeButton === i}\n                >\n                  {x}\n                </GroupButton>\n              ))}\n            </GroupButtonWrapper>\n\n            <BottomTextWrapper>\n              <BottomText>{tradeType === 'buy' ? 'Cost' : 'Premium'}</BottomText>\n              <BottomText>{`${quoteAssetAmount.toFixed(4)} ${quoteAsset.symbol}`}</BottomText>\n            </BottomTextWrapper>\n            <BottomTextWrapper>\n              <BottomText>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>Fee</p>\n                  <Help hint=\"Why am I paying?\">\n                    This is the protocol fee charged by 0x.\n                    In addition to this, you still need to pay for gas if you are taking orders.\n                  </Help>\n                </Flex>\n              </BottomText>\n              <BottomText>{`${feeInETH} ETH` }</BottomText>\n            </BottomTextWrapper>\n          </LowerPart>\n        </Wrapper>\n        <Flex>\n          { hasSelectedOrders // is filling orders\n            ? isFillingAndCreating\n              ? (\n                <Button\n                  onClick={clickFillAndCreate}\n                  label=\"Create And Fill\"\n                  wide\n                />\n              )\n              : (\n                <Button\n                  onClick={clickFillOrders}\n                  label=\"Fill Orders\"\n                  wide\n                />\n              )\n            : (\n              <Button\n                onClick={clickCreateOrder}\n                label={tradeType === 'buy' ? 'Create Buy Order' : 'Create Sell Order'}\n                wide\n              />\n            )}\n\n        </Flex>\n      </BuyAndSellBlock>\n      <WrapETHPanel\n        user={user}\n        opened={panelOpend}\n        setOpen={setPanelOpended}\n        wethBalance={quoteAssetBalance}\n        helperText={wethPanelHelperText}\n        setHelperText={setPanelHelperText}\n      />\n    </>\n  );\n}\n\nBuyAndSell.propTypes = {\n  user: PropTypes.string.isRequired,\n\n  // three types of tokens\n  quoteAsset: TokenType.isRequired,\n  baseAsset: TokenType.isRequired,\n  // collateral: TokenType.isRequired,\n\n\n  // ethBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  baseAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  quoteAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n\n  // vault: VaultType,\n\n  tradeType: PropTypes.string.isRequired,\n  setTradeType: PropTypes.func.isRequired,\n\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\n// BuyAndSell.defaultProps = {\n//   vault: {\n//     owner: '',\n//     oTokensIssued: '0',\n//     collateral: '0',\n//     underlying: '0',\n//   },\n// };\n\nexport default BuyAndSell;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 18px 0;\n`;\nconst BuyAndSellBlock = styled.div`  \n  width: 100%;\n  min-height: 509px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.border};\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.surface};\n`;\nconst Header = styled.div`\n  width: 100%;\n  height: 35px;\n  font-size: 13px;\n  font-family: aragon-ui;\n  border-bottom: 1px solid ${(props) => props.theme.border};\n  background-color: ${(props) => props.theme.surface};\n  color: ${(props) => props.theme.contentSecondary};\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  justify-content: center;\n  // font-weight: bold;\n`;\nconst TopPart = styled.div`\n  margin: 10px 0;\n  background-color: ${(props) => props.theme.surface};\n  min-height: 50px;\n`;\nconst TopPartText = styled.div``;\nconst LowerPart = styled.div`\n  background-color: ${(props) => props.theme.background};\n`;\nconst Tab = styled.div`\n  width: 50%;\n  height: 50px;\n  color: ${(props) => (props.active ? props.theme.content : props.theme.surfaceContentSecondary)};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  border-bottom: ${(props) => (props.active ? `2px solid ${props.theme.selected}` : `1px solid ${props.theme.border}`)};\n  cursor: pointer;\n`;\nconst Label = styled.div`\n  height: 14px;\n  font-size: 14px;\n  color: ${(props) => props.theme.content};\n  margin: 20px 0 15px 0;\n`;\n\nconst BottomText = styled.div`\n  height: 20px;\n`;\nconst Wrapper = styled.div`\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Flex = styled.div`\n  display:flex;\n  width: 90%;\n`;\nconst TabWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  background-color: ${(props) => props.theme.surface};\n  padding-top: 10px;\n  border: ${(props) => props.theme.border}\n`;\nconst BottomTextWrapper = styled(FlexWrapper)`\n  height: 27px;\n  border-bottom: solid 1px #979797;\n  border-bottom-style: dotted;\n`;\nconst GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nconst GroupButton = styled.div`\n  height: 40px;\n  width: 33%;\n  border: 1px solid ${(props) => props.theme.border};\n  border-width: ${(props) => (props.index === 1 ? '1px 0px' : '1px')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  background: ${(props) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\n\nimport { Header } from '@aragon/ui';\nimport OptionBoard from './OptionBoard';\nimport TabBoard from './TabBoard';\nimport BuyAndSell from './BuyAndSell';\n\nimport { getTokenBalance } from '../../utils/infura';\nimport { getOrderBook, isValid } from '../../utils/0x.ts';\n// import { getVault } from '../../utils/graph';\nimport { eth_puts, eth_calls } from '../../constants/options';\n\nimport * as tokens from '../../constants/tokens';\n\nimport tracker from '../../utils/tracker';\n\nconst quoteAsset = tokens.USDC;\n\nfunction OptionTrading({ user }) {\n  const [baseAsset, setBaseAsset] = useState(\n    eth_puts.concat(eth_calls).find((o) => o.expiry > Date.now() / 1000),\n  );\n\n  useEffect(() => {\n    tracker.pageview('/trade/');\n  }, []);\n\n  const [asks, setAsks] = useState([]);\n  const [bids, setBids] = useState([]);\n\n  const [tradeType, setTradeType] = useState('buy');\n  const [selectedOrders, setSelectedOrders] = useState([]);\n\n  // user balance\n  // const [userETHBalance, setUserETHBalance] = useState(BigNumber(0)); // in eth\n  const [baseAssetBalance, setBaseAssetBalance] = useState(BigNumber(0));\n  const [quoteAssetBalance, setQuoteAssetBalance] = useState(BigNumber(0));\n\n  // const [vault, setVault] = useState({});\n\n\n  // BaseAsset changeed: Update orderbook and base asset\n  useEffect(() => {\n    let isCancelled = false;\n\n    // update orderbook\n    const updateOrderBook = async () => {\n      const res = await getOrderBook(baseAsset.addr, quoteAsset.addr);\n      if (!isCancelled) {\n        setAsks(res.asks.records.filter((record) => isValid(record)));\n        setBids(res.bids.records.filter((record) => isValid(record)));\n      }\n    };\n\n    // update baseAsset Balance\n    const updateBaseBalance = async () => {\n      const baseBalance = await getTokenBalance(baseAsset.addr, user);\n      if (!isCancelled) {\n        setBaseAssetBalance(new BigNumber(baseBalance));\n      }\n    };\n\n    // const updateVaultData = async () => {\n    //   if (user === '') return;\n    //   const userVault = await getVault(user, baseAsset.addr);\n    //   if (!isCancelled) setVault(userVault);\n    // };\n    updateOrderBook();\n    updateBaseBalance();\n    // updateVaultData();\n    const idOrderBook = setInterval(updateOrderBook, 2000);\n    const idBaseBalance = setInterval(updateBaseBalance, 30000);\n    // const idUpdateVault = setInterval(updateVaultData, 10000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idOrderBook);\n      clearInterval(idBaseBalance);\n      // clearInterval(idUpdateVault);\n    };\n  }, [baseAsset, user]);\n\n  // update quote asset\n  useEffect(() => {\n    let isCancelled = false;\n    const updateQuoteBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getTokenBalance(quoteAsset.addr, user);\n      if (!isCancelled) {\n        setQuoteAssetBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateQuoteBalance();\n    const idQuoteAssetBalance = setInterval(updateQuoteBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idQuoteAssetBalance);\n    };\n  }, [user]);\n\n  return (\n    <WholeScreen>\n      <FlexWrapper>\n        <LeftPart>\n          <Header />\n          <br />\n          <br />\n          <BuyAndSell\n            user={user}\n            baseAsset={baseAsset}\n            quoteAsset={quoteAsset}\n            collateral={baseAsset.collateral}\n\n            baseAssetBalance={baseAssetBalance}\n            quoteAssetBalance={quoteAssetBalance}\n\n            // vault={vault}\n\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        </LeftPart>\n        <RightPart>\n          {/* <Header primary=\"Trade ETH Options\" /> */}\n          <OptionBoard\n            quoteAsset={quoteAsset}\n            baseAsset={baseAsset}\n            setBaseAsset={setBaseAsset}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          <br />\n          {/* <FixBottom> */}\n          <TabBoard\n            asks={asks}\n            bids={bids}\n            user={user}\n            option={baseAsset}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            selectedOrders={selectedOrders}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          {/* </FixBottom> */}\n        </RightPart>\n      </FlexWrapper>\n    </WholeScreen>\n  );\n}\n\nOptionTrading.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\n\nconst LeftPart = styled.div`\n  width: 20%;\n  padding-right: 1.5%;\n`;\n\nconst RightPart = styled.div`\n  width: 80%;\n`;\n\nconst WholeScreen = styled.div`\n  textAlign: center;\n  padding-left: 5%;\n  padding-right: 5%;\n  position:fixed;\n  overflow-y:scroll;\n  overflow-x:hidden;\n  left: 0;\n  bottom: 0;\n  top: 6%;\n  width: 100%;\n  overflow: auto\n`;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  height:87%\n`;\n\nexport default OptionTrading;\n","import React, { useState } from 'react';\nimport {\n  TextInput, DataView, Button, LinkBase, EthIdenticon, useToast,\n} from '@aragon/ui';\nimport { getPreference, checkAddressAndAddToStorage } from '../../utils/storage';\n\nimport { Comment } from '../common/';\nimport { isAddress } from '../../utils/number';\nimport { resolveENS } from '../../utils/infura';\n\nfunction PleaseLogin({ setWatchAddress }: { setWatchAddress: Function }) {\n  const toast = useToast();\n  const [InAddress, setAddress] = useState('');\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n\n  return (\n    <>\n      {/* <Header></Header> */}\n      <Comment text=\"Please connect wallet to proceed or enter an address to use Watch Mode.\" />\n      <br />\n      <br />\n      <p style={{ fontSize: 20 }}> Watch Mode </p>\n      <Comment text=\"You won't be able to interact with any smart contract under Watch Mode.\" />\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <TextInput\n            placeholder=\"Ethereum address or ENS\"\n            value={InAddress}\n            onChange={(e) => { setAddress(e.target.value.toLowerCase()); }}\n            wide\n          />\n\n          {usedAddresses.length > 0 ? (\n            <div style={{ paddingTop: '3%' }}>\n              <DataView\n                entries={usedAddresses.reverse()}\n                fields={['used']}\n                entriesPerPage={5}\n                renderEntry={(address: string) => [\n                  <LinkBase onClick={() => {\n                    setWatchAddress(address);\n                    checkAddressAndAddToStorage(address);\n                  }}\n                  >\n                    {/* <IdentityBadge entity={address} /> */}\n                    <EthIdenticon\n                      address={address}\n                      scale={1.3}\n                      radius={5}\n                    />\n                    <span style={{ paddingLeft: 8, fontSize: 15, fontFamily: 'aragon-ui-monospace' }}>{address}</span>\n                  </LinkBase>,\n                ]}\n              />\n            </div>\n          ) : <></>}\n        </div>\n        <div style={{ width: '8%', paddingLeft: '1%', paddingRight: '1%' }}>\n          <Button\n            label=\"Watch Address\"\n            onClick={async () => {\n              if (isAddress(InAddress)) {\n                setWatchAddress(InAddress);\n                checkAddressAndAddToStorage(InAddress);\n              } else {\n                try {\n                  const address = await resolveENS(InAddress);\n                  setWatchAddress(address);\n                  checkAddressAndAddToStorage(address);\n                } catch (error) {\n                  toast('Invalid Address');\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default PleaseLogin;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * Get vaults for one option\n */\nexport async function getAllVaultsForOption(\n  optionAddress: string\n): Promise<\n  {\n    colalteral: string;\n    oTokensIssued: string;\n    owner: string;\n  }[]\n> {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\n/**\n * Get all vaults for a user\n */\nexport async function getAllVaultsForUser(\n  owner: string\n): Promise<\n  {\n    optionsContract: {\n      address: string;\n    };\n    oTokensIssued: string;\n    collateral: string;\n    underlying: string;\n  }[]\n> {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n      underlying\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.vaults;\n}\n\n/**\n * Return target vault or null\n */\nexport async function getVault(\n  owner: string,\n  option: string\n): Promise<{ underlying: string; collateral: string; oTokensIssued: string, owner: string }> {\n  const query = `{\n    vault(\n     id: \"${option.toLowerCase()}-${owner.toLowerCase()}\"\n    ) {\n      owner\n      underlying\n      collateral\n      oTokensIssued\n    }\n  }`;\n  const response = await postQuery(query);\n  console.log(response.data.vault)\n  return response.data.vault;\n}\n\nexport async function getLiquidationHistory(\n  owner: string\n): Promise<\n  {\n    vault: {\n      owner: string;\n      optionsContract: {\n        address: string;\n      };\n    };\n    liquidator: string;\n    collateralToPay: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    liquidateActions(where: {\n      vault_contains: \"${owner}\"\n    }) {\n      vault {\n        owner,\n        optionsContract {\n          address\n        }\n      },\n      liquidator,\n      collateralToPay,\n      timestamp\n      transactionHash\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\n/**\n * Get all exercise history for one user\n */\nexport async function getExerciseHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amtCollateralToPay: string;\n    exerciser: string;\n    oTokensToExercise: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\n/**\n * get RemoveUnderlying Event history\n */\nexport async function getRemoveUnderlyingHistory(\n  owner: string,\n  option: string\n): Promise<\n  {\n    amount: string;\n    timestamp: string;\n    transactionHash: string;\n  }[]\n> {\n  const query = `{\n    removeUnderlyingActions(\n      where: {\n        vault_contains: \"${option}\"\n        owner: \"${owner}\"   \n      }\n    ) {\n      timestamp\n      transactionHash\n      amount\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.removeUnderlyingActions;\n}\n\nconst postQuery = async (query: string) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import BigNumber from 'bignumber.js';\nimport { getPrice } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number} collateralDecimals\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral:string,\n  strike:string,\n  oracle:string,\n  collateralDecimals: number,\n): Promise<BigNumber> => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral: BigNumber;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      collateralDecimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n * Calculate collateral ratio\n */\nexport const calculateRatio = (\n  collateral: string|number|BigNumber,\n  tokenIssued: string|number|BigNumber,\n  strikePrice: string|number|BigNumber,\n  strikeValueInCollateral: BigNumber): number => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  \n  const result = colalteralBN.div(tokenIssuedBN).div(strikePriceBN).div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo, useEffect, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Card,\n  TextInput,\n  useToast,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  SectionTitle, OpenVaultButton, Comment, HelperText, WarningText,\n} from '../common';\nimport * as types from '../../types';\n\nimport { openVaultAddCollateralAndMint } from '../../utils/web3';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { calculateStrikeValueInCollateral, calculateRatio } from '../../utils/calculation';\n\ntype openVaultModalProps = {\n  user: string,\n  option: types.option\n}\n\nfunction OpenVaultModal({ user, option }: openVaultModalProps) {\n  const toast = useToast();\n  const history = useHistory();\n\n  const [opened, setOpened] = useState(false);\n\n  // for Open vault, add collateral and mint tokens\n  const [collateralAmt, setCollateralAmt] = useState(new BigNumber(0));\n  const [mintTokenAmt, setMintTokenAmt] = useState(new BigNumber(0));\n\n  const [strikeValueInCollateral, setStrikeValueInCollateral] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(1);\n\n  useMemo(async () => {\n    if (!opened) return;\n    const strikeValueInColltrl = await calculateStrikeValueInCollateral(\n      option.collateral.addr,\n      option.strike.addr,\n      option.oracle,\n      option.collateral.decimals,\n    );\n    setStrikeValueInCollateral(strikeValueInColltrl);\n  },\n  [option, opened]);\n\n  //  when input changed\n  useEffect(() => {\n    // calculate new ratio\n    const newRatio = calculateRatio(\n      toBaseUnitBN(collateralAmt, option.collateral.decimals),\n      toBaseUnitBN(mintTokenAmt, option.decimals),\n      option.strikePrice,\n      strikeValueInCollateral,\n    );\n    setRatio(newRatio);\n  },\n  [collateralAmt, mintTokenAmt, strikeValueInCollateral, option]);\n\n  const onCollateralChange = (value) => {\n    if (!value) {\n      setCollateralAmt(new BigNumber(0));\n      return;\n    }\n    const amtBn = new BigNumber(value);\n    setCollateralAmt(amtBn);\n  };\n\n  const onMintTokenAmtChange = (value) => {\n    if (!value) {\n      setMintTokenAmt(new BigNumber(0));\n      return;\n    }\n    setMintTokenAmt(new BigNumber(value));\n  };\n\n  const mint = async () => {\n    if (ratio < option.minRatio) {\n      toast(`Collateral ratio must > ${option.minRatio}`);\n      return;\n    }\n    await openVaultAddCollateralAndMint(\n      option.addr,\n      option.collateral.addr,\n      toBaseUnitBN(collateralAmt, option.collateral.decimals).toString(),\n      toBaseUnitBN(mintTokenAmt, option.decimals).toString(),\n    );\n    history.push(`/manage/${option.addr}/${user}`);\n  };\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Open Vault\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Open Vault\" />\n        <Comment text=\"Select how you want to open a vault.\" />\n        {/* <div style={{ display: 'flex' }}> */}\n        {/* <div style={{ width: '30%' }}> */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Open Empty Vault\" />\n          <Comment text=\"You can add collateral and mint tokens later.\" />\n          <br />\n          <OpenVaultButton oToken={option.addr} user={user} goToMangePage />\n          <br />\n        </Card>\n        <br />\n\n        {/* Option C, Create, add and mint */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Add Collateral and Mint Tokens\" />\n          <Comment text=\"Open vault, add collateral and mint some options in one transaction.\" />\n          <div style={{ display: 'flex', paddingBottom: 15 }}>\n            <TextInput\n              type=\"number\"\n              value={collateralAmt.toNumber()}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => onCollateralChange(event.target.value)}\n              adornmentPosition=\"end\"\n              adornment={option.collateral.symbol}\n            />\n            <div style={{ paddingLeft: 15 }}>\n              <TextInput\n                type=\"number\"\n                value={mintTokenAmt.toNumber()}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => onMintTokenAmtChange(event.target.value)}\n                adornmentPosition=\"end\"\n                adornment={option.symbol}\n              />\n            </div>\n          </div>\n          { option.symbol.toLowerCase().includes('call')\n            ? <WarningText text={`1 ${option.collateral.symbol} can create ${option.strikePriceInUSD} ${option.symbol}`} />\n            : <></>}\n          <Button label=\"Mint\" onClick={mint} />\n          { ratio === Infinity\n            ? <> </>\n            : <HelperText label=\"Collateral Ratio \" amt={ratio.toString()} />}\n\n          <br />\n        </Card>\n      </Modal>\n    </>\n  );\n}\n\nexport default OpenVaultModal;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  Header, DataView, IdentityBadge,\n} from '@aragon/ui';\nimport NoWalletView from './NoWallet';\nimport * as types from '../../types'\nimport { allOptions } from '../../constants/options';\nimport {\n  SectionTitle, ManageVaultButton, Comment, CheckBox,\n} from '../common/index';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPreference, storePreference } from '../../utils/storage';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport tracker from '../../utils/tracker';\nimport OpenVaultModal from './OpenVaultModal';\n\nconst Promise = require('bluebird');\n\nexport type vaultWithDetail = {\n  oToken:string,\n  collateral: string,\n  oTokenName:string\n  collateralDecimals: number\n  expiry:number\n  ratio: number\n}\n\nfunction MyVaults({ user }: {user: string}) {\n  useEffect(() => {\n    tracker.pageview('/myvaults/');\n  }, []);\n  const [opendVaults, setOpenedVaults] = useState<vaultWithDetail[]>([]);\n  const [tokensToOpen, setTokensToOpen] = useState<types.option[]>([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // enable not logged in user to use this feature\n  const [watchAddress, setWatchAddress] = useState('');\n  const isWatchMode = user === '' && watchAddress !== '';\n  const hasAddressConnected = user !== '' || watchAddress !== '';\n\n  // checkbox\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n  const [showEmpty, setShowEmpty] = useState(getPreference('showEmpty', '1') === '1');\n\n  const displayVaults = opendVaults\n    .filter((vault) => showExpired || vault.expiry * 1000 > Date.now())\n    .filter((vault) => showEmpty || new BigNumber(vault.collateral).gt(new BigNumber(0)));\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!hasAddressConnected) return;\n    const userVaults = await getAllVaultsForUser(isWatchMode ? watchAddress : user);\n    const openedVaults: vaultWithDetail[] = [];\n    const notOpenedTokens: types.option[] = [];\n    await Promise.map(allOptions, async (option: types.option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      \n      if (entry !== undefined) {\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral.addr,\n          option.strike.addr,\n          option.oracle,\n          option.collateral.decimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: option.collateral.decimals,\n          expiry: option.expiry,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        // only put non-expired token to \"can open\" list\n        notOpenedTokens.push(option);\n      }\n    });\n    setIsLoading(false);\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [user, watchAddress, hasAddressConnected, isWatchMode]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {hasAddressConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n\n              <div style={{ display: 'flex' }}>\n                <SectionTitle title=\"Existing Vaults\" />\n                <div style={{ marginLeft: 'auto' }}>\n                  <div style={{ display: 'flex' }}>\n                    <CheckBox\n                      text=\"Expired\"\n                      checked={showExpired}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showExpired', checked ? '1' : '0');\n                        setShowExpired(checked);\n                      }}\n                    />\n                    <CheckBox\n                      text=\"Empty\"\n                      checked={showEmpty}\n                      onCheck={(checked: boolean) => {\n                        storePreference('showEmpty', checked ? '1' : '0');\n                        setShowEmpty(checked);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={displayVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio,\n                }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={isWatchMode ? watchAddress : user} />,\n                ]}\n              />\n            </div>\n          ) : isLoading ? (\n            <Comment text=\"Loading\" />\n          ) : (\n            <Comment text=\"No Opened Vaults\" />\n          )}\n          {tokensToOpen.length > 0 && !isWatchMode ? (\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                \n                renderEntry={(option: types.option) => {\n                  return [\n                    option.title,\n                    <IdentityBadge entity={option.addr} shorten={false} />,\n                    <OpenVaultModal user={user} option={option} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <NoWalletView\n          // watchAddress={watchAddress}\n          setWatchAddress={setWatchAddress}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport * as myType from '../types';\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common/index.ts';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nfunction ExerciseModal({\n  user,\n  token,\n  vaults,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const underlyingIsETH = option.underlying.addr === ETH_ADDRESS;\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying.addr, user),\n        option.underlying.decimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(option.addr, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [option, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator, current) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      option.addr,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, option.underlying.decimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={option.underlying.symbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={option.underlying.symbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              option.addr,\n              option.underlying.addr,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nExerciseModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(myType.vault).isRequired,\n};\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport * as MyPTypes from '../types';\nimport { RatioTag, Comment } from '../common/index.ts';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\n\n/**\n *\n * @param {{\n * option:{\n * decimals:number,\n * exchange:string, collateral:{ addr:string, decimals: number, symbol:string}, symbol:string }\n * oTokensIssued: string,\n * collateralAmount: string,\n * exchange:string}} param0\n */\nfunction VaultModal({\n  option,\n  useCollateral,\n  owner,\n  collateral, // amount of collateral of this vault\n  oTokensIssued,\n  isSafe,\n  ratio,\n  collateralIsETH,\n}) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      if (!useCollateral) return;\n      const maxLiquidatable = await getMaxLiquidatable(option.addr, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option, opened, owner, useCollateral]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{\n            collateral, isSafe, oTokensIssued, ratio, owner,\n          }]}\n          entriesPerPage={1}\n          renderEntry={(vault) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, option.collateral.decimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            RatioTag({ isSafe: vault.isSafe, ratio, useCollateral }),\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(option.addr, owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral.addr,\n                      option.addr,\n                      owner,\n                      toBaseUnitBN(addValue, option.collateral.decimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(option.addr, owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nVaultModal.propTypes = {\n  option: MyPTypes.option.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n  owner: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  isSafe: PropTypes.bool.isRequired,\n  oTokensIssued: PropTypes.string.isRequired,\n  ratio: PropTypes.number.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common/index.ts';\nimport * as MyPTypes from '../types';\nimport {\n  formatDigits, compareVaultRatio, compareVaultIssued, toTokenUnitsBN,\n} from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation.ts';\nimport { allOptions } from '../../constants/options';\n\nfunction VaultOwnerList({\n  user, token, vaults, collateralIsETH,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const vaultUsesCollateral = option.collateral.addr !== option.strike.addr;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n          };\n        })\n        .sort(vaultUsesCollateral ? compareVaultRatio : compareVaultIssued);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralIsETH, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({\n          owner, collateral, oTokensIssued, ratio, isSafe, useCollateral,\n        }) => [\n          <IdentityBadge entity={owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(ratio, 5),\n          RatioTag({ isSafe, ratio, useCollateral }),\n          <VaultModal\n            option={option}\n            owner={owner}\n            collateral={collateral}\n            isSafe={isSafe}\n            useCollateral={useCollateral}\n            collateralIsETH={collateralIsETH}\n            oTokensIssued={oTokensIssued}\n            ratio={ratio}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nVaultOwnerList.propTypes = {\n  user: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(MyPTypes.vault).isRequired,\n  token: PropTypes.string.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { getTotalSupply, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { allOptions } from '../../constants/options';\n\nfunction OptionOverview({\n  token,\n  collateralIsETH,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(option.addr));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral.addr, option.addr);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, option.collateral.decimals);\n      }\n      const supply = await getTotalSupply(option.addr);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(toTokenUnitsBN(supply, option.decimals));\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralIsETH, option]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={option.addr} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toFormat(4)}\n                {' '}\n                {option.collateral.symbol}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply.toFormat(4)}\n            {' '}\n            {option.symbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nOptionOverview.propTypes = {\n  token: PropTypes.string.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default OptionOverview;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getAllVaultsForOption } from '../../utils/graph.ts';\nimport tracker from '../../utils/tracker';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nfunction OptionPage({ user }) {\n  const { token } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/option/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const collateralIsETH = option.collateral.addr === ETH_ADDRESS;\n\n  useMemo(async () => {\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [token]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            token={token}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        token={token}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        token={token}\n        user={user}\n        vaults={vaults}\n        collateralIsETH={collateralIsETH}\n      />\n    </>\n  );\n}\n\nOptionPage.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common/index';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as types from '../../types';\n\ntype HeaderDashboardProps= {\n  ratio: number,\n  minRatio: number,\n  symbol: string,\n  vault: types.vault,\n  decimals: number,\n  newRatio: number,\n  collateralDecimals: number,\n  useCollateral: boolean,\n};\n\nconst HeaderDashboard = ({\n  ratio,\n  minRatio,\n  symbol,\n  vault,\n  decimals,\n  newRatio,\n  collateralDecimals,\n  useCollateral,\n}:HeaderDashboardProps) => {\n  const tokenInUnit = vault.oTokensIssued\n    ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber()\n    : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? (\n              <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} />\n            ) : (\n              <></>\n            )}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n            .\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n                /\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? (\n              ''\n            ) : (\n              <HelperText label=\"New Ratio\" amt={newRatio.toString()} />\n            )}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as types from '../../types';\n\ntype CollateralManagementProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  collateral: types.token,\n  collateralAssetBalance: BigNumber,\n  token: string,\n  owner: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  setNewRatio: Function,\n\n}\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateral,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}: CollateralManagementProps) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: `Your ${collateral.symbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateral.decimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateral.addr,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateral.decimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateral.decimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateral.addr,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateral.decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton, WarningText } from '../common/index';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\n\nimport * as types from '../../types';\n\n\ntype IssueTokenProps = {\n  isOwner: boolean,\n  vault: types.vault,\n  tokenBalance: BigNumber,\n  token: string,\n  strikeValue: BigNumber,\n  strikePrice: number,\n  minRatio: number,\n  decimals: number,\n  symbol: string,\n  setNewRatio: Function,\n  strikePriceInUSD: number | undefined,\n  collateralSymbol: string\n}\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n  strikePriceInUSD,\n  collateralSymbol,\n}:IssueTokenProps) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <WarningText text={`1 ${collateralSymbol} can create ${strikePriceInUSD} ${symbol}`} />\n        : <></>}\n    </Box>\n  );\n}\n\n\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common/index';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\ntype LiqActions = {\n  vault: {\n    owner: string;\n    optionsContract: {\n      address: string;\n    };\n  };\n  liquidator: string;\n  collateralToPay: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\ntype LiquidationHistoryProps = {\n  owner: string,\n  token: string,\n  isOwner: Boolean,\n  tokenDecimals: number,\n  userTokenBalance: BigNumber,\n};\n\n/**\n *\n * @param {{userTokenBalance: BigNumber}} param0\n */\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance,\n}: LiquidationHistoryProps) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<LiqActions[]>([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n    updateLiquidatable();\n  }, [owner, token, tokenDecimals]);\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n          <Box heading=\"Liquidate\">\n            <>\n              <div style={{ display: 'flex' }}>\n                {/* balance */}\n                <div style={{ width: '30%' }}>\n                  <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n                </div>\n                <div style={{ width: '70%', paddingTop: '2%' }}>\n                  <div style={{ display: 'flex' }}>\n                    <div style={{ width: '60%' }}>\n                      <>\n                        <TextInput\n                          type=\"number\"\n                          wide\n                          value={amountToLiquidate}\n                          onChange={(event) => {\n                            setAmtToLiquidate(event.target.value);\n                          }}\n                        />\n                        <MaxButton\n                          onClick={() => {\n                            const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                            setAmtToLiquidate(maximum);\n                          }}\n                        />\n                      </>\n                    </div>\n                    <div style={{ width: '40%' }}>\n                      <Button\n                        disabled={maxLiquidatable <= 0}\n                        label=\"Liquidate\"\n                        onClick={() => {\n                          const amtToLiquidate = toBaseUnitBN(\n                            amountToLiquidate,\n                            tokenDecimals,\n                          ).toString();\n                          liquidate(token, owner, amtToLiquidate);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          </Box>\n        )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp, 10) * 1000),\n            ]}\n        />\n      </Box>\n    </>\n  );\n}\n\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype exerciseEntry = {\n  amtCollateralToPay: string;\n  exerciser: string;\n  oTokensToExercise: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<exerciseEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }: exerciseEntry) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useMemo } from 'react';\nimport {\n  Box, DataView, Button, TransactionBadge,\n} from '@aragon/ui';\nimport { BalanceBlock } from '../common/index';\nimport { removeUnderlying } from '../../utils/web3';\nimport { getRemoveUnderlyingHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\ntype RemoveUnderlyingHistoryEntry = {\n  amount: string;\n  timestamp: string;\n  transactionHash: string;\n}\n\ntype RemoveUnderlyingProps = {\n  owner: string,\n  token: string,\n  underlyingDecimals: number,\n  underlyingAmount: string,\n}\n\nfunction RemoveUnderlying({\n  owner, token, underlyingDecimals, underlyingAmount,\n}: RemoveUnderlyingProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState<RemoveUnderlyingHistoryEntry[]>([]);\n\n  useMemo(async () => {\n    const actions = await getRemoveUnderlyingHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n\n      <Box heading=\"Underlying\">\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>\n            {BalanceBlock({\n              asset: 'Redeemable',\n              balance: formatDigits(toTokenUnitsBN(underlyingAmount, underlyingDecimals), 6),\n            })}\n          </div>\n          <div style={{ width: '70%', padding: '2%' }}>\n            <Button\n              label=\"Redeem Underlying\"\n              onClick={() => { removeUnderlying(token); }}\n            />\n          </div>\n        </div>\n        <br />\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Timestamp']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            transactionHash, amount, timestamp,\n          }: RemoveUnderlyingHistoryEntry) => [\n            <TransactionBadge shorten={false} transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amount, underlyingDecimals).toNumber(),\n              5,\n            ),\n            timeSince(parseInt(timestamp, 10)* 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default RemoveUnderlying;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\nimport UnderlyingManagement from './UnderlyingManagement';\n\nimport { Comment } from '../common/index';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance } from '../../utils/infura';\nimport { getVault } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\nimport * as types from '../../types'\nimport tracker from '../../utils/tracker';\n\nfunction ManageVault({ user }: { user: string }) {\n  const { token, owner } = useParams();\n  useEffect(() => {\n    tracker.pageview(`/manage/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  \n\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio,\n    collateral, expiry, underlying\n  } = option!;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState<types.vault>({\n    collateral: '0',\n    oTokensIssued: '0',\n    owner,\n    underlying: '0'\n  });\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n  const vaultUsesCollateral = collateral.addr !== strike.addr;\n\n  useMemo(() => {\n    let isCancelled = false;\n    async function updateInfo() {\n      const vaultToManage = await getVault(owner, token);\n      if (vaultToManage === null) {\n        setIsLoading(false);\n        return;\n      }\n\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      // let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral.addr, user);\n        collateralBalance = toTokenUnitsBN(userColltBalance, collateral.decimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValInCollt);\n        setVault(vaultToManage);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n        setIsLoading(false);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault\n    ? isLoading ? (\n      <Comment text=\"Loading...\" />\n    )\n      : (\n        <Comment text=\"No Vault Found for this user under this contract\" />\n      ) : (\n        <>\n          <Header\n            primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n            secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n          />\n\n          <HeaderDashboard\n            // user={user}\n            ratio={ratio}\n            minRatio={minRatio}\n            vault={vault}\n            decimals={decimals}\n            symbol={symbol}\n            newRatio={newRatio}\n            useCollateral={vaultUsesCollateral}\n            // collateralIsETH={collateralIsETH}\n            collateralDecimals={collateral.decimals}\n          />\n\n          <Tabs\n            items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise', 'Underlying Redemption']}\n            selected={tabSelected}\n            onChange={setTabSelected}\n          />\n\n          {tabSelected === 0 ? (\n            <CollateralManagement\n              isOwner={isOwner}\n              vault={vault}\n              collateralAssetBalance={userCollateralAssetBalance}\n              collateral={collateral}\n              token={token}\n              owner={owner}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 1 ? (\n            <IssuedTokenManagement\n              isOwner={isOwner}\n              vault={vault}\n              tokenBalance={ownerTokenBalance}\n              token={token}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              decimals={decimals}\n              symbol={symbol}\n              setNewRatio={setNewRatio}\n              // for call heler text\n              strikePriceInUSD={option!.strikePriceInUSD}\n              collateralSymbol={collateral.symbol}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 2 ? (\n            vaultUsesCollateral ? (\n              <LiquidationHistory\n                userTokenBalance={userTokenBalance}\n                isOwner={isOwner}\n                owner={owner}\n                token={token}\n                tokenDecimals={decimals}\n              />\n            ) : (\n              <Box> This vault cannot be liquidated </Box>\n            )\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 3 ? (\n            <ExerciseHistory\n              owner={owner}\n              token={token}\n              tokenDecimals={decimals}\n              collateralDecimals={collateral.decimals}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 4 ? (\n            <UnderlyingManagement\n              owner={owner}\n              token={token}\n              underlyingDecimals={underlying.decimals}\n              underlyingAmount={vault.underlying}\n            />\n          ) : <> </>}\n        </>\n    );\n}\n\n\n\nexport default ManageVault;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, AddressBlock } from '../common/index';\n\ntype  TradePageHeaderProps = {\n  symbol: string,\n  poolETHBalance: BigNumber,\n  poolTokenBalance: BigNumber,\n  uniswapExchange: string,\n};\n\nconst TradePageHeader = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}: TradePageHeaderProps) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\n\nexport default TradePageHeader;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport {\n  WarningText, BalanceBlock, MaxButton, PriceSection,\n} from '../common/index';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\n\nimport { toBaseUnitBN, fromWei } from '../../utils/number';\n\ntype UniswapBuySellProps = {\n  symbol: string,\n  strikePriceInUSD: number | undefined,\n  tokenBalance: BigNumber,\n  token: string,\n  exchange: string,\n  decimals: number,\n};\n\nfunction OptionExchange({\n  symbol, tokenBalance, token, exchange, decimals, strikePriceInUSD,\n}: UniswapBuySellProps) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(fromWei(premium)));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"\" />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} />\n        </div>\n      </div>\n      { symbol.toLowerCase().includes('call')\n        ? <WarningText text={`Buy ${strikePriceInUSD} ${symbol} to hedge 1 ETH`} />\n        : <></> }\n    </Box>\n  );\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype AddliquidityProps = {\n  otoken: string,\n  otokenSymbol: string,\n  otokenDecimals: number,\n  poolTokenBalance: BigNumber,\n  poolETHBalance:BigNumber,\n  liquidityTokenSupply: BigNumber,\n  liquidityTokenDecimals: number,\n  userTokenBalance: BigNumber,\n  userETHBalance:BigNumber\n  uniswapExchange: string\n}\n\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: AddliquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common/index';\nimport { toBaseUnitBN } from '../../utils/number';\n\ntype RemoveLiquidityProps = {\n  otokenDecimals: number,\n  otokenSymbol: string,\n  uniswapExchange: string\n  userliquidityTokenBalance: BigNumber\n  poolTokenBalance: BigNumber\n  poolETHBalance: BigNumber\n  liquidityTokenDecimals: number,\n  liquidityTokenSupply: BigNumber\n}\n\n\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}: RemoveLiquidityProps) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getTokenBalance, getBalance, getTotalSupply,\n} from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport { allOptions } from '../../constants/options';\n\nimport TradePageHeader from './Header';\nimport UniswapBuySell from './UniswapBuySell';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nimport tracker from '../../utils/tracker';\n\nfunction UniswapPool({ user }: {user: string}) {\n  const liquidityTokenDecimals = 18;\n  const { token } = useParams();\n\n  useEffect(() => {\n    tracker.pageview(`/uniswap/${token}`);\n  }, [token]);\n\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange, strikePriceInUSD,\n  } = option!;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n\n  // Update Uniswap Pool Info\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liqTokenTotalSupply] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getTotalSupply(uniswapExchange),\n      ]);\n      // const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenSupply(toTokenUnitsBN(liqTokenTotalSupply, liquidityTokenDecimals));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  // Update User balances\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <TradePageHeader\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <UniswapBuySell\n        strikePriceInUSD={strikePriceInUSD}\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n    </>\n  );\n}\n\nexport default UniswapPool;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from '@aragon/ui';\n\nfunction Footer({ theme } : { theme:string }) {\n  const history = useHistory();\n\n  return (\n    history.location.pathname.includes('/trade/')\n      ? <></>\n      : (\n        <div style={{\n          backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n          textAlign: 'center',\n          padding: '17px',\n          position: 'fixed',\n          left: '0',\n          bottom: '0',\n          height: '50px',\n          width: '100%',\n          fontSize: '14px'\n        }}>\n          Powered By\n          {' '}\n          <Link external href=\"https://opyn.co/#/\">\n            Opyn\n          </Link>\n          {', '}\n          <Link external href=\"https://ui.aragon.org/\">\n            Aragon UI\n          </Link>\n          {', '}\n          <Link external href=\"https://www.blocknative.com/\">\n            Blocknative\n          </Link>\n          {'. '}\n          <Link external href=\"https://www.kollateral.co/\">\n            Kollateral\n          </Link>\n          {'. '}\n          Hosted on\n          {' '}\n          {' '}\n          <Link external href=\"https://github.com/antoncoding/opyn-liquidator\">\n            GitHub\n          </Link>\n        </div>\n      )\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade/index';\nimport OptionTrading from './components/OptionTrading';\nimport MyVaults from './components/MyVaults';\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault';\nimport Uniswap from './components/UniswapTrade';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme:string) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionPage user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <AllOptoins />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trading */}\n          <Route path=\"/trade/oeth-usdc/\">\n            <OptionTrading\n              user={user}\n            />\n          </Route>\n          {/* <Route path=\"/trades/test/\"><ZEROXTest /></Route> */}\n          <Route path=\"/uniswap/:token/\"><Uniswap user={user} /></Route>\n          <Route path=\"/uniswap/\">\n            <Trade />\n          </Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}